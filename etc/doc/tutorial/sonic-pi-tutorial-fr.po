# This file is distributed under the same license as the Sonic Pi package.
# Do not edit this file, use Weblate instead.
# Read TRANSLATION.md for more information.

msgid ""
msgstr ""
"Project-Id-Version: Sonic Pi\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: 01-Welcome-to-Sonic-Pi.md:1
#, fuzzy
msgid "1 Welcome to Sonic Pi"
msgstr "1 Bienvenue à Sonic Pi"

#: 01-Welcome-to-Sonic-Pi.md:3
#, fuzzy
msgid "Welcome friend :-)"
msgstr "Bienvenue Ami :-)"

#: 01-Welcome-to-Sonic-Pi.md:5
#, fuzzy
msgid ""
"Welcome to Sonic Pi. Hopefully you're as excited to get started making crazy s"
"ounds as I am to show you. It's going to be a really *fun* ride where you'll l"
"earn all about music, synthesis, programming, composition, performance and mor"
"e."
msgstr ""
"Bienvenue à Sonic Pi. Heureusement vous êtes excité pour commencer à faire des"
" sons délirants comme je le suis pour vous le montrer. Ça va être réellement u"
"n parcours amusant où vous allez tout apprendre de la musique, de la synthèse,"
" de la programmation, de l'interprétation et plus encore."

#: 01-Welcome-to-Sonic-Pi.md:10
#, fuzzy
msgid ""
"But wait, how rude of me! Let me introduce myself - I'm [Sam Aaron](http://twi"
"tter.com/samaaron) - the chap that created Sonic Pi. You can find me at [@sama"
"aron](http://twitter.com/samaaron) on Twitter and I'd be more than happy to sa"
"y hello to you. You might also be interested in finding out more about my [Liv"
"e Coding Performances](http://facebook.com/livecodersamaaron) where I code wit"
"h Sonic Pi live in front of audiences."
msgstr ""
"Mais attendez, comme je suis impoli ! Je me présente. Je suis [Sam Aaron](http"
"://twitter.com/samaaron) - le gars qui a créé Sonic Pi. Vous pouvez me joindre"
" à [@samaaron](http://twitter.com/samaaron) sur Twitter et je serai plus qu'he"
"ureux de vous saluer. Vous pourriez aussi être intéressé par mon orchestre \"Li"
"ve Coding\" [Meta-eX](http://meta-ex.com) où j'interprète de la musique avec du"
" code devant un public. Vous pouvez trouver un de mes morceaux [Meta-eX](http:"
"//meta-ex.com) dans les exemples."

#: 01-Welcome-to-Sonic-Pi.md:18
#, fuzzy
msgid ""
"If you have any thoughts, or ideas for improving Sonic Pi - please pass them o"
"n - feedback is so helpful. You never know, your idea might be the next big fe"
"ature!"
msgstr ""
"Si vous avez des observations ou des idées pour améliorer Sonic Pi - Faîtes m'"
"en part s'il vous plait - les retours sont tellement utiles. Vous ne le savez "
"probablement pas, mais votre idée pourrait être la prochaine fonctionnalité im"
"portante!"

#: 01-Welcome-to-Sonic-Pi.md:22
#, fuzzy
msgid ""
"This tutorial is divided up into sections grouped by category. Whilst I've wri"
"tten it to have an easy learning progression from start to finish, feel very f"
"ree just to dip in and out of sections as you see fit. If you feel that there'"
"s something missing, do let me know and I'll consider it for a future version."
msgstr ""
"Ce tutoriel est divisé en sections groupées par catégories. Même si je l'ai éc"
"rit pour avoir une progression d'apprentissage facile du début jusqu'à la fin,"
" sentez-vous vraiment libre de plonger dans l'une ou l'autre section comme cel"
"a vous convient. Si vous pensez qu'il manque quelque chose, n'hésitez pas à me"
" le faire savoir et je le prendrai en compte dans une prochaine version."

#: 01-Welcome-to-Sonic-Pi.md:28
msgid ""
"Finally, watching others live code is a really great way to learn. I regularly"
" stream live on [livecoding.tv/samaaron](http://livecoding.tv/samaaron) so ple"
"ase do drop by, say hi and ask me lots of questions :-)"
msgstr ""

#: 01-Welcome-to-Sonic-Pi.md:33
#, fuzzy
msgid "OK, let's get started..."
msgstr "OK, démarrons..."

#: 01.1-Live-Coding.md:1
#, fuzzy
msgid "1.1 Live Coding"
msgstr "1.1 Codage en 'live'"

#: 01.1-Live-Coding.md:3 09-Live-Coding.md:3 09.1-Live-Coding-Fundamentals.md:3
#: A.02-live-coding.md:3
#, fuzzy
msgid "Live Coding"
msgstr "Codage en \"Live\""

#: 01.1-Live-Coding.md:5
#, fuzzy
msgid ""
"One of the most exciting aspects of Sonic Pi is that it enables you to write a"
"nd *modify code live* to make music, just like you might perform live with a g"
"uitar. This means that given some practice you can take Sonic Pi on stage and "
"gig with it."
msgstr ""
"Un des aspects les plus passionnants de Sonic Pi est qu'il vous permet d'écrir"
"e et de *modifier du code en \"live\"* pour faire de la musique, juste comme si "
"vous jouiez de la guitare. Cela veut dire qu'au moyen de quelque expérience, v"
"ous pouvez prendre Sonic PI sur scène et jouez avec."

#: 01.1-Live-Coding.md:10
#, fuzzy
msgid "Free your mind"
msgstr "Libérez vos méninges"

#: 01.1-Live-Coding.md:12
#, fuzzy
msgid ""
"Before we get into the real details of how Sonic Pi works in the rest of this "
"tutorial, I'd like to give you an experience of what it's like to live code. D"
"on't worry if you don't understand much (or any) of this. Just try to hold ont"
"o your seats and enjoy..."
msgstr ""
"Avant que vous ne plongiez dans les détails réels du fonctionnement de Sonic P"
"i dans la suite de ce tutoriel, j'aimerais vous faire part d'une expérience mo"
"ntrant à quoi ressemble le code en \"live\". Ne vous inquiétez pas si vous ne co"
"mprenez pas beaucoup ou rien de ceci. Essayez juste de rester assis sur votre "
"siège et de profiter..."

#: 01.1-Live-Coding.md:17
#, fuzzy
msgid "A live loop"
msgstr "Une boucle en \"live\""

#: 01.1-Live-Coding.md:19
#, fuzzy
msgid "Let's get started, copy the following code into an empty buffer above:"
msgstr "Démarrons, copiez le code suivant dans un \"buffer\" libre :"

#: 01.1-Live-Coding.md:21
#, no-wrap
msgid ""
"live_loop :flibble do\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :flibble do\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 0.5\n"
"end"

#: 01.1-Live-Coding.md:28
#, fuzzy
msgid ""
"Now, press the `Run` button and you'll hear a nice fast bass drum beating away"
". If at any time you wish to stop the sound just hit the `Stop` button. Althou"
"gh don't hit it just yet... Instead, follow these steps:"
msgstr ""
"Maintenant, pressez le bouton `Run` et vous entendrez un joli battement de gro"
"sse caisse. Si vous souhaitez arrêter le son à un moment quelconque, pressez s"
"implement le bouton `Stop`. Plutôt, ne le pressez pas encore... A la place, su"
"ivez les étapes suivantes :"

#: 01.1-Live-Coding.md:32
#, fuzzy
msgid "Make sure the bass drum sound is still running"
msgstr "Assurez-vous que le son de la grosse caisse est encore présent"

#: 01.1-Live-Coding.md:33
#, fuzzy
msgid "Change the `sleep` value from `0.5` to something higher like `1`."
msgstr "Changez la valeur de `sleep` de `0.5` à quelque chose plus élevé comme `1`"

#: 01.1-Live-Coding.md:34
#, fuzzy
msgid "Press the `Run` button again"
msgstr "Pressez à nouveau le bouton `Run`"

#: 01.1-Live-Coding.md:35
#, fuzzy
msgid "Notice how the drum speed has changed."
msgstr "Remarquez le changement de vitesse de la batterie"

#: 01.1-Live-Coding.md:36
#, fuzzy
msgid ""
"Finally, *remember this moment*, this is the first time you've live coded with"
" Sonic Pi and it's unlikely to be your last..."
msgstr ""
"Finalement, *rappelez-vous de cet instant*, c'est la première fois que vous av"
"ez codé en \"live\" avec Sonic Pi et ce n'est certainement pas la dernière..."

#: 01.1-Live-Coding.md:39
#, fuzzy
msgid ""
"Ok, that was simple enough. Let's add something else into the mix. Above `samp"
"le :bd_haus` add the line `sample :ambi_choir, rate: 0.3`. Your code should lo"
"ok like this:"
msgstr ""
"Ok, c'était assez simple. Ajoutons quelque chose au mixage. Au dessus de `samp"
"le :bd_haus` ajoutez la ligne `sample :ambi_choir, rate: 0.3`. Votre code devr"
"ait ressembler à ceci :"

#: 01.1-Live-Coding.md:43
#, no-wrap
msgid ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"

#: 01.1-Live-Coding.md:51
#, fuzzy
msgid ""
"Now, play around. Change the rates - what happens when you use high values, or"
" small values or negative values? See what happens when you change the `rate:`"
" value for the `:ambi_choir` sample just slightly (say to 0.29). What happens "
"if you choose a really small `sleep` value? See if you can make it go so fast "
"your computer will stop with an error because it can't keep up (if that happen"
"s, just choose a bigger `sleep` time and hit `Run` again)."
msgstr ""
"Maintenant, exécutez-le. Changez les \"rates\" - Que se passe-t-il lorsque vous "
"utilisez des valeurs élevées ou des valeurs négatives ? Regardez ce qui se pas"
"se quand vous changez légèrement la valeur de `rate:` pour l'échantillon `:amb"
"i_choir` (disons 0.29). Que se passe-t-il lorsque vous choisissez une valeur v"
"éritablement petite de `sleep` ? Regardez si vous arrivez à le faire aller si "
"vite au point que votre ordinateur s'arrêtera avec une erreur parce que ne pou"
"vant plus continuer comme cela (si cela arrive, choisissez juste une durée `sl"
"eep` plus grande et pressez `Run` à nouveau)."

#: 01.1-Live-Coding.md:59
#, fuzzy
msgid "Try commenting one of the `sample` lines out by adding a `#` to the beginning:"
msgstr "Essayez de commenter une des lignes `sample` en ajoutant un `#` au début :"

#: 01.1-Live-Coding.md:62
#, no-wrap
msgid ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"#  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"#  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"

#: 01.1-Live-Coding.md:70
#, fuzzy
msgid ""
"Notice how it tells the computer to ignore it, so we don't hear it. This is ca"
"lled a comment. In Sonic Pi we can use comments to remove and add things into "
"the mix."
msgstr ""
"Remarquez comment cela indique à l'ordinateur de l'ignorer, ainsi nous ne l'en"
"tendons pas. On l'appelle commentaire. Dans Sonic Pi, nous pouvons utilisez de"
"s commentaires pour enlever ou additionner des choses au mixage."

#: 01.1-Live-Coding.md:74
#, fuzzy
msgid ""
"Finally, let me leave you something fun to play with. Take the code below, and"
" copy it into a spare buffer. Now, don't try to understand it too much other t"
"han see that there are two loops - so two things going round at the same time."
" Now, do what you do best - experiment and play around. Here are some suggesti"
"ons:"
msgstr ""
"Finalement, je vous laisse avec quelque chose de sympa à jouer. Prenez le code"
" ci-dessous et copiez-le dans un autre \"buffer\". Maintenant essayez de le comp"
"rendre bien plus que de voir qu'il y a deux boucles - ainsi deux choses marche"
"nt en même temps. Maintenant, faites ce que vous faites le mieux - expérimente"
"r et jouez. Voici quelques suggestions :"

#: 01.1-Live-Coding.md:80
#, fuzzy
msgid "Try changing the blue `rate:` values to hear the sample sound change."
msgstr ""
"Essayez de modifier les valeurs en bleu du `rate:` pour entendre changer le so"
"n de l'échantillon."

#: 01.1-Live-Coding.md:81
#, fuzzy
msgid ""
"Try changing the `sleep` times and hear that both loops can spin round at diff"
"erent rates."
msgstr ""
"Essayez de changer les durées de `sleep` et découvrez que les 2 boucles peuven"
"t tourner à différentes cadences."

#: 01.1-Live-Coding.md:83
#, fuzzy
msgid ""
"Try uncommenting the sample line (remove the `#`) and enjoy the sound of the g"
"uitar played backwards."
msgstr ""
"Essayez de décommenter la ligne \"sample\" (enlevez le `#`) et apprécier le son "
"de la guitare joué en fond."

#: 01.1-Live-Coding.md:85
#, fuzzy
msgid ""
"Try changing any of the blue `mix:` values to numbers between `0` (not in the "
"mix) and `1` (fully in the mix)."
msgstr ""
"Essayez de changer une des valeurs en bleu de `mix:` avec des nombres entre `0"
"` (pas dans le mixage) et `1` (entièrement dans le mixage)."

#: 01.1-Live-Coding.md:88
#, fuzzy
msgid ""
"Remember to press `Run` and you'll hear the change next time the loop goes rou"
"nd. If you end up in a pickle, don't worry - hit `Stop`, delete the code in th"
"e buffer and paste a fresh copy in and you're ready to jam again. Making mista"
"kes is how you'll learn the quickest..."
msgstr ""
"Rappelez-vous de presser `Run` et vous entendrez le changement la fois suivant"
"e où la boucle tournera. Si vous êtes dans le pétrin, ne vous inquiétez pas - "
"pressez `Stop`, effacez le code dans le \"buffer\", collez une copie originale e"
"t vous serez prêt à improviser à nouveau. En faisant des fautes, c'est ainsi q"
"ue vous apprendrez le plus vite..."

#: 01.1-Live-Coding.md:94
#, no-wrap
msgid ""
"live_loop :guit do\n"
"  with_fx :echo, mix: 0.3, phase: 0.25 do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"#  sample :guit_em9, rate: -0.5\n"
"  sleep 8\n"
"end\n"
"live_loop :boom do\n"
"  with_fx :reverb, room: 1 do\n"
"    sample :bd_boom, amp: 10, rate: 1\n"
"  end\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :guit do\n"
"  with_fx :echo, mix: 0.3, phase: 0.25 do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"#  sample :guit_em9, rate: -0.5\n"
"  sleep 8\n"
"end\n"
"live_loop :boom do\n"
"  with_fx :reverb, room: 1 do\n"
"    sample :bd_boom, amp: 10, rate: 1\n"
"  end\n"
"  sleep 8\n"
"end"

#: 01.1-Live-Coding.md:111
#, fuzzy
msgid ""
"Now, keep playing and experimenting until your curiosity about how this all ac"
"tually works kicks in and you start wondering what else you can do with this. "
"You're now ready to read the rest of the tutorial."
msgstr ""
"Maintenant, continuez à jouer et à expérimenter jusqu'à ce que votre curiosité"
" sur comment ça fonctionne s'avive réellement et vous commencerez à vous deman"
"der quoi d'autre puis-je faire avec ceci. Vous êtes maintenant prêt à lire le "
"reste du tutoriel."

#: 01.1-Live-Coding.md:115
#, fuzzy
msgid "So what are you waiting for..."
msgstr "Aussi, qu'attendez-vous..."

#: 01.2-Exploring-the-Interface.md:1
#, fuzzy
msgid "1.2 Exploring the Interface"
msgstr "1.2 Exploration de l'interface"

#: 01.2-Exploring-the-Interface.md:3
#, fuzzy
msgid "The Sonic Pi Interface"
msgstr "L'Interface de Sonic Pi"

#: 01.2-Exploring-the-Interface.md:5
#, fuzzy
msgid ""
"Sonic Pi has a very simple interface for coding music. Let's spend a little ti"
"me exploring it."
msgstr ""
"Sonic Pi a une interface très simple pour coder de la musique. Passons un peu "
"de temps à l'explorer."

#: 01.2-Exploring-the-Interface.md:8
msgid "![Sonic Pi Interface](../images/tutorial/GUI.png)"
msgstr ""

#: 01.2-Exploring-the-Interface.md:11
#, fuzzy
msgid "*A* - Play Controls"
msgstr "*A* - Contrôles de jeu"

#: 01.2-Exploring-the-Interface.md:12
#, fuzzy
msgid "*B* - Editor Controls"
msgstr "*B* - Contrôles d'édition"

#: 01.2-Exploring-the-Interface.md:13
#, fuzzy
msgid "*C* - Info and Help"
msgstr "*C* - Info, Help et Prefs"

#: 01.2-Exploring-the-Interface.md:14
#, fuzzy
msgid "*D* - Code Editor"
msgstr "*D* - Éditeur de code"

#: 01.2-Exploring-the-Interface.md:15
#, fuzzy
msgid "*E* - Prefs Panel"
msgstr "*E* - Panneau des préférences"

#: 01.2-Exploring-the-Interface.md:16
#, fuzzy
msgid "*F* - Log Viewer"
msgstr "*F* - Visualisateur de la trace"

#: 01.2-Exploring-the-Interface.md:17
#, fuzzy
msgid "*G* - Help System"
msgstr "*G* - Système d'aide"

#: 01.2-Exploring-the-Interface.md:20
#, fuzzy
msgid "A. Play Controls"
msgstr "A. Contrôles de jeu"

#: 01.2-Exploring-the-Interface.md:22
#, fuzzy
msgid ""
"These pink buttons are the main controls for starting and stopping sounds. The"
"re's the *Run* button for running the code in the editor, *Stop* for stopping "
"all running code, *Save* for saving the code to an external file and *Record* "
"to create a recording (a WAV file) of the sound playing."
msgstr ""
"Ces boutons roses sont les principaux contrôles pour démarrer et arrêter les s"
"ons. Il y a le bouton *Run* pour exécuter le code présent dans l'éditeur, *Sto"
"p* pour arrêter tous les codes en cours d'exécution, *Save* pour sauvegarder l"
"e code dans un fichier externe et *Record* pour créer un enregistrement du son"
" (un fichier WAV) en cours de jeu."

#: 01.2-Exploring-the-Interface.md:28
#, fuzzy
msgid "B. Editor Controls"
msgstr "B. Contrôles d'édition"

#: 01.2-Exploring-the-Interface.md:30
#, fuzzy
msgid ""
"These orange buttons allow you to manipulate the code editor. The *Size +* and"
" *Size -* buttons allow you to make the text bigger and smaller. The *Align* b"
"utton will neaten the code for you to make it look more professional."
msgstr ""
"Ces boutons oranges vous permettent de piloter l'éditeur de code. Les boutons "
"*Size +* et *Size -* vous permettent d'agrandir ou de rétrécir le texte. Le bo"
"uton *Align* vous arrangera votre code pour lui donner une présentation plus p"
"rofessionnelle."

#: 01.2-Exploring-the-Interface.md:35
#, fuzzy
msgid "C. Info and Help"
msgstr "C. Info, Help et Prefs"

#: 01.2-Exploring-the-Interface.md:37
#, fuzzy
msgid ""
"These blue buttons give you access to information, help and preferences. The *"
"Info* button will open up the information window which contains information ab"
"out Sonic Pi itself - the core team, history, contributors and community. The "
"*Help* button toggles the help system (*G*) and the *Prefs* button toggles the"
" preferences window which allows you to control some basic system parameters."
msgstr ""
"Ces boutons bleus vous donnent accès à l'information, à l'aide et aux préféren"
"ces. Le bouton *Info* ouvre la fenêtre d'information qui contient de l'informa"
"tion sur Sonic Pi lui-même - le noyau de l'équipe, l'historique, les contribut"
"eurs, et la communauté. Le bouton *Help* active le système d'aide (*G*) et le "
"bouton *Prefs* active la fenêtre des préférences qui vous permet de contrôler "
"quelques paramètres systèmes basiques."

#: 01.2-Exploring-the-Interface.md:44
#, fuzzy
msgid "D. Code Editor"
msgstr "D. Éditeur de code"

#: 01.2-Exploring-the-Interface.md:46
#, fuzzy
msgid ""
"This is the area where you'll write your code and compose/perform music. It's "
"a simple text editor where you can write code, delete it, cut and paste, etc. "
"Think of it like a very basic version of Word or Google Docs. The editor will "
"automatically colour words based on their meaning in the code. This may seem s"
"trange at first, but you'll soon find it very useful. For example, you'll know"
" something is a number because it is blue."
msgstr ""
"C'est une zone dans laquelle vous écrirez votre code et composerez / interprét"
"erez de la musique. C'est un simple éditeur de texte où vous pourrez écrire vo"
"tre code, l'effacer, couper et coller, etc. Pensez à lui comme à une version t"
"rès basique de Word ou de Google Docs. L'éditeur coloriera automatiquement les"
" mots selon leur signification dans le code. Ceci peut paraître étrange au déb"
"ut, mais vous le trouverez vite très utile. Par exemple, vous saurez que quelq"
"ue chose est un nombre parce qu'elle sera bleue."

#: 01.2-Exploring-the-Interface.md:54
#, fuzzy
msgid "E. Prefs Panel"
msgstr "E. Panneau des préférences"

#: 01.2-Exploring-the-Interface.md:56
#, fuzzy
msgid ""
"Sonic Pi supports a number of tweakable preferences which can be accessed by t"
"oggling the *prefs* button in the Info and Help button set. This will toggle t"
"he visibility of the Prefs Panel which includes a number of options to be chan"
"ged. Examples are forcing mono mode, inverting stereo, Toggling log output ver"
"bosity and also a volume slider and audio selector on the Raspberry Pi."
msgstr ""
"Sonic Pi supporte quelques préférences ajustables qui peuvent être accédées en"
" pressant le bouton *Prefs* à droite des boutons Info et Help. Cela activera l"
"'affichage du panneau des préférences qui inclut un nombre d'options modifiabl"
"es. Par exemple pour forcer le mode mono, inverser la stéréo, activer le mode "
"verbeux de la trace et aussi régler un curseur de volume et le sélecteur audio"
" du Raspberry Pi (par défaut, il est sur \"auto\". Si vous n'entendez plus le so"
"n de votre Pi en étant branchés sur la prise jack, modifiez ce paramètre)."

#: 01.2-Exploring-the-Interface.md:63
#, fuzzy
msgid "F. Log Viewer"
msgstr "F. Visualisateur de la trace"

#: 01.2-Exploring-the-Interface.md:65
#, fuzzy
msgid ""
"When you run your code, information about what the program is doing will be di"
"splayed in the log viewer. By default, you'll see a message for every sound yo"
"u create with the exact time the sound was triggered. This is very useful for "
"debugging your code and understanding what your code is doing."
msgstr ""
"Quand vous exécutez votre code, l'information sur ce que le programme est en t"
"rain de faire est affichée dans le visualisateur de la trace. Par défaut, vous"
" verrez un message pour chaque son que vous créez avec l'heure exacte à laquel"
"le le son a été déclenché. C'est très utile pour déboguer votre code et compre"
"ndre ce qu'il fait."

#: 01.2-Exploring-the-Interface.md:71
#, fuzzy
msgid "G. Help System"
msgstr "G. Système d'aide"

#: 01.2-Exploring-the-Interface.md:73
#, fuzzy
msgid ""
"Finally, one of the most important parts of the Sonic Pi interface is the help"
" system which appears at the bottom of the window. This can be toggled on and "
"off by clicking on the blue *Help* button. The help system contains help and i"
"nformation about all aspects of Sonic Pi including this tutorial, a list of av"
"ailable synths, samples, examples, FX and a full list of all the functions Son"
"ic Pi provides for coding music."
msgstr ""
"Finalement, un des aspects les plus importants de l'interface de Sonic Pi est "
"le système d'aide qui apparaît au bas de la fenêtre. Il peut être activé ou dé"
"sactivé en cliquant sur le bouton *Help* bleu. Le système d'aide contient de l"
"'aide et de l'information sur tous les aspects de Sonic Pi, y compris ce tutor"
"iel, une liste des synthétiseurs, des échantillons (\"samples\"), des exemples, "
"et des effets (\"FX\") disponibles, et une liste complète de toutes les fonction"
"s que Sonic Pi fournit pour coder de la musique."

#: 01.3-Learning-through-Play.md:1
#, fuzzy
msgid "1.3 Learning through Play"
msgstr "1.3 Apprendre en jouant"

#: 01.3-Learning-through-Play.md:3
#, fuzzy
msgid "Learning through Play"
msgstr "Apprendre en jouant"

#: 01.3-Learning-through-Play.md:5
#, fuzzy
msgid ""
"Sonic Pi encourages you to learn about both computing and music through play a"
"nd experimentation. The most important thing is that you're having fun, and be"
"fore you know it you'll have accidentally learned how to code, compose and per"
"form."
msgstr ""
"Sonic Pi vous encourage à apprendre à la fois sur la programmation et sur la m"
"usique au travers du jeu et de l'expérimentation. La plus importante chose est"
" que vous vous amusiez, et avant que vous vous en rendiez compte, vous aurez a"
"ppris comment coder, composer et interpréter sans le faire exprès."

#: 01.3-Learning-through-Play.md:10
#, fuzzy
msgid "There are no mistakes"
msgstr "Il n'y a pas de fautes"

#: 01.3-Learning-through-Play.md:12
#, fuzzy
msgid ""
"Whilst we're on this subject, let me just give you one piece of advice I've le"
"arned over my years of live coding with music - *there are no mistakes, only o"
"pportunities*. This is something I've often heard in relation to jazz but it w"
"orks equally well with live coding. No matter how experienced you are - from a"
" complete beginner to a seasoned Algoraver, you'll run some code that has a co"
"mpletely unexpected outcome. It might sound insanely cool - in which case run "
"with it. However, it might sound totally jarring and out of place. It doesn't "
"matter that it happened - what matters is what you do next with it. Take the s"
"ound, manipulate it and morph it into something awesome. The crowd will go *wi"
"ld*."
msgstr ""
"Alors que nous abordons ce sujet, laissez-moi vous donner un petit conseil. J'"
"ai appris pendant des années à coder de la musique en \"live\" - *il n'y a pas d"
"e fautes, seulement des opportunités*. C'est ce que j'ai souvent entendu à pro"
"pos du jazz mais cela fonctionne aussi avec le codage en \"live\". Peu importe v"
"otre niveau d'expérience - du débutant complet jusqu'à \"l'algoraver\" (codeur d"
"e musique) chevronné, vous exécuterez un jour un code qui aura une sortie tota"
"lement inattendue. Cela pourrait sonner extrêmement \"cool\" - auquel cas contin"
"uez avec. Toutefois, cela pourrait aussi sonner discordant et à côté de la pla"
"que. Peu importe ce qui se passe - ce qui importe est ce que vous allez faire "
"avec ensuite. Prenez le son, manipulez-le et transformez-le en quelque chose d"
"e génial. Le public deviendra *déchaîné*."

#: 01.3-Learning-through-Play.md:24
#, fuzzy
msgid "Start Simple"
msgstr "Commencez simple"

#: 01.3-Learning-through-Play.md:26
#, fuzzy
msgid ""
"When you're learning, it's tempting to want to do amazing things *now*. Howeve"
"r, just hold that thought and see it as a distant goal to reach *later*. For n"
"ow, instead think of the *simplest* thing you could write which would be fun a"
"nd rewarding that's a small step towards the amazing thing you have in your he"
"ad. Once you have an idea about that simple step, then try and build it, play "
"with it and then see what new ideas it gives you. Before long you'll be too bu"
"sy having fun and making real progress."
msgstr ""
"Quand vous apprenez, il est tentant de vouloir faire des choses étonnantes *im"
"médiatement*. Cependant, conservez l'idée et voyez-la comme un but distant à a"
"tteindre *plus tard*. Pour l'instant, pensez à la chose la plus simple que vou"
"s pourriez écrire qui serait amusante et gratifiante, c'est un petit pas vers "
"la chose étonnante que vous avez en tête. Une fois que vous avez l'éclairage s"
"ur cette simple étape, essayez de la construire, jouez avec et pensez aux nouv"
"elles idées que cela vous donne. Sous peu, vous serez trop occupé à vous amuse"
"r et à faire de réels progrès."

#: 01.3-Learning-through-Play.md:35
#, fuzzy
msgid "Just make sure to share your work with others!"
msgstr "Assurez-vous simplement de partager votre travail avec les autres !"

#: 02-Synths.md:1
#, fuzzy
msgid "2 Synths"
msgstr "2 Synthés"

#: 02-Synths.md:3 02.3-Switching-Synths.md:11
#, fuzzy
msgid "Synths"
msgstr "Synthétiseurs"

#: 02-Synths.md:5
#, fuzzy
msgid "OK, enough of the intros - let's get into some sound."
msgstr "OK, assez d'introduction, plongeons dans les sons."

#: 02-Synths.md:7
#, fuzzy
msgid ""
"In this section we'll cover the basics of triggering and manipulating synths. "
"Synth is short for synthesiser which is a fancy word for something which creat"
"es sounds. Typically synths are quite complicated to use - especially analog s"
"ynths with many patch wires and modules. However, Sonic Pi gives you much of t"
"hat power in a very simple and approachable manner."
msgstr ""
"Dans cette section, nous allons couvrir les bases du déclenchement et de la ma"
"nipulation des \"synths\". \"Synth\" ou \"synthé\" sont les abréviations de synthéti"
"seur, lequel est un mot fantaisiste pour quelque chose qui crée des sons. Typi"
"quement, les synthétiseurs sont assez compliqués à utiliser - particulièrement"
" les synthés analogiques avec beaucoup de \"patches\" et de modules à connecter."
" Toutefois, Sonic Pi vous offre beaucoup de cette puissance d'une manière très"
" simple et abordable."

#: 02-Synths.md:14
#, fuzzy
msgid ""
"Don't be fooled by the immediate simplicity of Sonic Pi's interface. You can g"
"et very deep into very sophisticated sound manipulation if that's your thing. "
"Hold on to your hats..."
msgstr ""
"Ne soyez pas dupe de l'immédiate simplicité de l'interface de Sonic Pi. Vous p"
"ouvez aller très en profondeur dans une manipulation très sophistiquée des son"
"s si c'est votre dada. Tenez bien vos chapeaux..."

#: 02.1-Your-First-Beeps.md:1
#, fuzzy
msgid "2.1 Your First Beeps"
msgstr "2.1 Vos premiers Beeps"

#: 02.1-Your-First-Beeps.md:3
#, fuzzy
msgid "Your First Beeps"
msgstr "Vos premiers Beeps"

#: 02.1-Your-First-Beeps.md:5
#, fuzzy
msgid "Take a look at the following code:"
msgstr "Jetez un œil sur le code suivant :"

#: 02.1-Your-First-Beeps.md:7 02.4-Durations-with-Envelopes.md:49
#, no-wrap
msgid "play 70"
msgstr "play 70"

#: 02.1-Your-First-Beeps.md:11
#, fuzzy
msgid ""
"This is where it all starts. Go ahead, copy and paste it into the code window "
"at the top of the app (the big white space under the Run button). Now, press R"
"un..."
msgstr ""
"C'est là que tout commence. Allez de l'avant, copiez et collez-le dans la fenê"
"tre de code en haut de l'application (le grand espace blanc en dessous du bout"
"on Run). Maintenant, pressez Run..."

#: 02.1-Your-First-Beeps.md:15
msgid "Beep!"
msgstr ""

#: 02.1-Your-First-Beeps.md:17
#, fuzzy
msgid "Intense. Press it again. And again. *And again...*"
msgstr "Intense. Pressez-le une nouvelle fois. Et encore. *Et encore...*"

#: 02.1-Your-First-Beeps.md:19
#, fuzzy
msgid ""
"Woah, crazy, I'm sure you could keep doing that all day. But wait, before you "
"lose yourself in an infinite stream of beeps, try changing the number:"
msgstr ""
"Woah, fou, je suis sûr que vous pourrez continuer à faire cela toute la journé"
"e. Mais attendez, avant que vous ne vous perdiez dans un flot infini de beeps,"
" essayez de changer le nombre :"

#: 02.1-Your-First-Beeps.md:23
#, no-wrap
msgid "play 75"
msgstr "play 75"

#: 02.1-Your-First-Beeps.md:27
#, fuzzy
msgid "Can you hear the difference? Try a lower number:"
msgstr "Entendez-vous la différence ? Essayez un nombre plus petit :"

#: 02.1-Your-First-Beeps.md:29
#, no-wrap
msgid "play 60"
msgstr "play 60"

#: 02.1-Your-First-Beeps.md:33
#, fuzzy
msgid ""
"So, lower numbers make lower pitched beeps and higher numbers make higher pitc"
"hed beeps. Just like on a piano, the keys at the lower part of the piano (the "
"left hand side) play lower notes and the keys on the higher part of the piano "
"(the right hand side) play higher notes. In fact, the numbers actually relate "
"to notes on the piano. `play 47` actually means play the 47th note on the pian"
"o. Which means that `play 48` is one note up (the next note to the right). It "
"just so happens that the 4th octave C is number 60. Go ahead and play it: `pla"
"y 60`."
msgstr ""
"Ainsi, des nombres plus petits font des beeps plus grave et des nombres plus g"
"rands font des beeps plus aigus. Juste comme sur un piano, les touches de la p"
"artie basse (côté main gauche) font des notes plus graves et celles de la part"
"ie haute (côté main droite) font des notes plus aiguës. En fait, les nombres r"
"eprésentent réellement l'ordre des notes sur le piano. `play 47` signifie réel"
"lement \"joue la 47ème note\" sur le piano. Ce qui signifie que `play 48` désign"
"e la note supérieure (la note suivante vers la droite). Il faut juste noter qu"
"e le 4ème octave du Do (C en notation anglaise) est identifié par le nombre 60"
". Poursuivez et jouez-le : `play 60`"

#: 02.1-Your-First-Beeps.md:42
#, fuzzy
msgid ""
"*Don't worry* if this means nothing to you - it didn't to me when I first star"
"ted. All that matters right now is that you know that *low numbers make lower "
"beeps* and *high numbers make higher beeps*."
msgstr ""
"*Ne vous inquiétez pas* si cela ne signifie rien pour vous - c'est ce qu'il m'"
"est arrivé au début quand j'ai commencé. Tout ce qui importe maintenant est qu"
"e vous sachiez que *les petits nombres font des beeps graves* et que *les gran"
"ds nombres font des beeps aigus*."

#: 02.1-Your-First-Beeps.md:46 08.2-Chords.md:3
#, fuzzy
msgid "Chords"
msgstr "Accords"

#: 02.1-Your-First-Beeps.md:48
#, fuzzy
msgid ""
"Playing a note is quite fun, but playing many at the same time can be even bet"
"ter. Try it:"
msgstr ""
"Jouez une note est vraiment plaisant, mais en jouer plusieurs en même temps es"
"t encore mieux. Essayez-le :"

#: 02.1-Your-First-Beeps.md:51
#, no-wrap
msgid ""
"play 72\n"
"play 75\n"
"play 79"
msgstr ""
"play 72\n"
"play 75\n"
"play 79"

#: 02.1-Your-First-Beeps.md:57
#, fuzzy
msgid ""
"Jazzy! So, when you write multiple `play`s, they all play at the same time. Tr"
"y it for yourself - which numbers sound good together? Which sound terrible? E"
"xperiment, explore and find out for yourself."
msgstr ""
"Jazzy ! Ainsi quand vous écrivez plusieurs `play`s, ils sont tous joués en mêm"
"e temps. Essayez-le vous-même - quels sont les nombres qui sonnent bien ensemb"
"le ? Lesquels sonnent terrible ? Expérimentez, explorez et trouvez ce qui est "
"bien pour vous."

#: 02.1-Your-First-Beeps.md:61
#, fuzzy
msgid "Melody"
msgstr "Mélodie"

#: 02.1-Your-First-Beeps.md:63
#, fuzzy
msgid ""
"So, playing notes and chords is fun - but how about a melody? What if you want"
"ed to play one note after another and not at the same time? Well, that's easy,"
" you just need to `sleep` between the notes:"
msgstr ""
"Ainsi, jouer des notes et des accords est plaisant - mais comment jouer une mé"
"lodie ? Que faire si vous voulez jouer une note après une autre et pas en même"
" temps ? Eh bien, c'est facile, vous avez juste besoin de `sleep` entre les no"
"tes :"

#: 02.1-Your-First-Beeps.md:67
#, no-wrap
msgid ""
"play 72\n"
"sleep 1\n"
"play 75\n"
"sleep 1\n"
"play 79"
msgstr ""
"play 72\n"
"sleep 1\n"
"play 75\n"
"sleep 1\n"
"play 79"

#: 02.1-Your-First-Beeps.md:75
#, fuzzy
msgid ""
"How lovely, a little arpeggio. So what does the `1` mean in `sleep 1`? Well it"
" means the *duration of the sleep*. It actually means sleep for one beat, but "
"for now we can think about it as sleeping for 1 second. So, what if we wanted "
"to make our arpeggio a little faster? Well, we need to use shorter sleep value"
"s. What about a half i.e. `0.5`:"
msgstr ""
"Comme c'est charmant, un petit arpège. Alors que signifie le `1` dans `sleep 1"
"` ? Eh bien, cela représente la *durée du sleep*. Ça signifie réellement \"dors"
" pendant un temps musical\", mais pour l'instant nous pouvons penser qu'il s'ag"
"it de dormir pendant 1 seconde. Alors que faire si nous voulons que notre arpè"
"ge soit un peu plus rapide ? Eh bien, nous devons utiliser des valeurs de slee"
"p plus petites. Quel résultat pour la moitié, c'est-à-dire `0.5`:"

#: 02.1-Your-First-Beeps.md:81
#, no-wrap
msgid ""
"play 72\n"
"sleep 0.5\n"
"play 75\n"
"sleep 0.5\n"
"play 79"
msgstr ""
"play 72\n"
"sleep 0.5\n"
"play 75\n"
"sleep 0.5\n"
"play 79"

#: 02.1-Your-First-Beeps.md:89
#, fuzzy
msgid ""
"Notice how it plays faster. Now, try for yourself, change the times - use diff"
"erent times and notes."
msgstr ""
"Remarquez comment ça joue plus rapidement. Maintenant, essayez vous-même, chan"
"gez les durées - utilisez différentes durées et différentes notes."

#: 02.1-Your-First-Beeps.md:92
#, fuzzy
msgid ""
"One thing to try is in-between notes such as `play 52.3` and `play 52.63`. The"
"re's absolutely no need to stick to standard whole notes. Play around and have"
" fun."
msgstr ""
"Une chose à essayer est les notes intermédiaires comme `play 52.3` et `play 52"
".63`. Il n'est absolument pas nécessaire de coller aux notes standardisées. Jo"
"uez et faites-vous plaisir."

#: 02.1-Your-First-Beeps.md:97
#, fuzzy
msgid "Traditional Note Names"
msgstr "Les noms traditionnels des notes"

#: 02.1-Your-First-Beeps.md:99
#, fuzzy
msgid ""
"For those of you that already know some musical notation (don't worry if you d"
"on't - you don't need it to have fun) you might want to write a melody using n"
"ote names such as C and F# rather than numbers. Sonic Pi has you covered. You "
"can do the following:"
msgstr ""
"Ceux qui connaissent déjà la notation musicale (ne vous inquiétez pas si ce n'"
"est pas votre cas - vous n'en n'avez pas besoin pour vous amuser) pourraient a"
"imer écrire une mélodie en utilisant les noms des notes comme \"Do\" ou \"Fa#\" pl"
"utôt que des nombres. Sonic Pi a ce qu'il faut, mais en notation anglaise (`A`"
" pour \"La\", `B` pour \"Si\", `C` pour \"Do\", `D` pour \"Ré\", `E` pour \"Mi\", `F` po"
"ur \"Fa\", `G` pour \"Sol\"). Vous pouvez faire la chose suivante :"

#: 02.1-Your-First-Beeps.md:104
#, no-wrap
msgid ""
"play :C\n"
"sleep 0.5\n"
"play :D\n"
"sleep 0.5\n"
"play :E"
msgstr ""
"play :C\n"
"sleep 0.5\n"
"play :D\n"
"sleep 0.5\n"
"play :E"

#: 02.1-Your-First-Beeps.md:112
#, fuzzy
msgid ""
"Remember to put the colon `:` in front of your note name so that it goes pink."
" Also, you can specify the octave by adding a number after the note name:"
msgstr ""
"Notez de mettre des deux-points `:` devant votre nom de note de manière qu'ell"
"e apparaisse en rose. Vous pouvez également spécifier l'octave en ajoutant un "
"nombre derrière le nom de la note :"

#: 02.1-Your-First-Beeps.md:116
#, no-wrap
msgid ""
"play :C3\n"
"sleep 0.5\n"
"play :D3\n"
"sleep 0.5\n"
"play :E4"
msgstr ""
"play :C3\n"
"sleep 0.5\n"
"play :D3\n"
"sleep 0.5\n"
"play :E4"

#: 02.1-Your-First-Beeps.md:124
#, fuzzy
msgid ""
"If you want to make a note sharp, add an `s` after the note name such as `play"
" :Fs3` and if you want to make a note flat, add a `b` such as `play :Eb3`."
msgstr ""
"Si vous voulez faire un dièse, ajoutez un `s` (pour \"sharp\") derrière le nom d"
"e la note, comme `play :Fs3` et si vous vouler faire un bémol, ajoutez un `b` "
"comme `play :Eb3`."

#: 02.1-Your-First-Beeps.md:127
#, fuzzy
msgid "Now go *crazy* and have fun making your own tunes."
msgstr "Maintenant *défoulez-vous* et faites-vous plaisir en faisant vos morceaux."

#: 02.2-Synth-Params.md:1
#, fuzzy
msgid "2.2 Synth Options"
msgstr "2.2 Paramètres des synthés"

#: 02.2-Synth-Params.md:3
#, fuzzy
msgid "Synth Options: Amp and Pan"
msgstr "Paramètres des synthés : Amp and Pan"

#: 02.2-Synth-Params.md:5
#, fuzzy
msgid ""
"As well as allowing you to control which note to play or which sample to trigg"
"er, Sonic Pi provides a whole range of options to craft and control the sounds"
". We'll be covering many of these in this tutorial and there's extensive docum"
"entation for each in the help system. However, for now we'll introduce two of "
"the most useful: *amplitude* and *pan*. First, let's look at what options actu"
"ally are."
msgstr ""
"De la même manière qu'il vous permet de contrôler chaque note ou chaque échant"
"illon à jouer, Sonic Pi fournit un large éventail de paramètres pour confectio"
"nner ou contrôler les sons. Nous couvrirons beaucoup d'entre eux dans ce tutor"
"iel et il y a une documentation exhaustive pour chacun d'eux dans le système d"
"'aide. Toutefois pour l'instant, nous allons introduire deux des plus utiles :"
" *amplitude* et *pan*. Regardons en premier ce que les paramètres sont réellem"
"ent."

#: 02.2-Synth-Params.md:13
#, fuzzy
msgid "Options"
msgstr "Paramètres"

#: 02.2-Synth-Params.md:15
#, fuzzy
msgid ""
"Sonic Pi supports the notion of options (or opts for short) for its synths. Op"
"ts are controls you pass to `play` which modify and control aspects of the sou"
"nd you hear. Each synth has its own set of opts for finely tuning its sound. H"
"owever, there are common sets of opts shared by many sounds such as `amp:` and"
" envelope opts (covered in another section)."
msgstr ""
"Sonic Pi supporte la notion de paramètres pour ses synthés. Les paramètres son"
"t des informations de contrôle que vous passez à `play` et qui modifient et co"
"ntrôlent les aspects du son que vous entendez. Chaque synthé a son propre jeu "
"de paramètres pour ajuster finement ses sons. Cependant, il y a un ensemble co"
"mmun de paramètres partagés par beaucoup de sons comme `amp:` et les paramètre"
"s d'enveloppe (couverts dans une autre section)."

#: 02.2-Synth-Params.md:22
#, fuzzy
msgid ""
"Opts have two major parts, their name (the name of the control) and their valu"
"e (the value you want to set the control at). For example, you might have a op"
"t called `cheese:` and want to set it with a value of `1`."
msgstr ""
"Les paramètres ont deux parties principales, leur nom (le nom du contrôle) et "
"leur valeur (la valeur que vous voulez affecter au contrôle). Par exemple, vou"
"s pourriez avoir un paramètre appelé `cheese:` et vouloir lui affecter la vale"
"ur `1`."

#: 02.2-Synth-Params.md:27
#, fuzzy
msgid ""
"Opts are passed to calls to `play` by using a comma `,` and then the name of t"
"he opt such as `amp:` (don't forget the colon `:`) and then a space and the va"
"lue of the opt. For example:"
msgstr ""
"Les paramètres sont passés aux appels à `play` en utilisant une virgule `,` et"
" ensuite le nom du paramètre comme `amp:` (n'oubliez pas les deux-points `:`) "
"et ensuite un espace et la valeur du paramètre. Par exemple :"

#: 02.2-Synth-Params.md:31
#, no-wrap
msgid "play 50, cheese: 1"
msgstr "play 50, cheese: 1"

#: 02.2-Synth-Params.md:35
#, fuzzy
msgid "(Note that `cheese:` isn't a valid opt, we're just using it as an example)."
msgstr ""
"(Notez que `cheese:` n'est pas un paramètre valide, il est juste utilisé pour "
"l'exemple)."

#: 02.2-Synth-Params.md:37
#, fuzzy
msgid "You can pass multiple opts by separating them with a comma:"
msgstr "Vous pouvez passer plusieurs paramètres en les séparant par une virgule :"

#: 02.2-Synth-Params.md:39
#, no-wrap
msgid "play 50, cheese: 1, beans: 0.5"
msgstr "play 50, cheese: 1, beans: 0.5"

#: 02.2-Synth-Params.md:43
#, fuzzy
msgid "The order of the opts doesn't matter, so the following is identical:"
msgstr "L'ordre des paramètres n'est pas imposé, ainsi, ce qui suit est identique :"

#: 02.2-Synth-Params.md:45
#, no-wrap
msgid "play 50, beans: 0.5, cheese: 1"
msgstr "play 50, beans: 0.5, cheese: 1"

#: 02.2-Synth-Params.md:49
#, fuzzy
msgid ""
"Opts that aren't recognised by the synth are just ignored (like `cheese` and `"
"beans` which are clearly ridiculous opt names!)"
msgstr ""
"Les paramètres qui ne sont pas reconnus par le synthé sont simplement ignorés "
"(comme `cheese` et `beans` qui sont clairement des noms de paramètres ridicule"
"s !)"

#: 02.2-Synth-Params.md:52
#, fuzzy
msgid ""
"If you accidentally use the same opt twice with different values, the last one"
" wins. For example, `beans:` here will have the value 2 rather than 0.5:"
msgstr ""
"Si vous utilisez accidentellement 2 fois le même paramètre avec des valeurs di"
"fférentes, la dernière gagne. Par exemple, `beans:` aura ici la valeur 2 plutô"
"t que 0.5 :"

#: 02.2-Synth-Params.md:56
#, no-wrap
msgid "play 50, beans: 0.5, cheese: 3, eggs: 0.1, beans: 2"
msgstr "play 50, beans: 0.5, cheese: 3, eggs: 0.1, beans: 2"

#: 02.2-Synth-Params.md:60
#, fuzzy
msgid ""
"Many things in Sonic Pi accept opts, so just spend a little time learning how "
"to use them and you'll be set! Let's play with our first opt: `amp:`."
msgstr ""
"Beaucoup de choses dans Sonic Pi acceptent des paramètres, aussi passez un peu"
" de temps à apprendre comment les utiliser et vous serez au point ! Jouons ave"
"c notre premier paramètre : `amp:`."

#: 02.2-Synth-Params.md:64 02.4-Durations-with-Envelopes.md:25
msgid "Amplitude"
msgstr ""

#: 02.2-Synth-Params.md:66
#, fuzzy
msgid ""
"Amplitude is a computer representation of the loudness of a sound. A *high amp"
"litude produces a loud sound* and a *low amplitude produces a quiet sound*. Ju"
"st as Sonic Pi uses numbers to represent time and notes, it uses numbers to re"
"present amplitude. An amplitude of 0 is silent (you'll hear nothing) whereas a"
"n amplitude of 1 is normal volume. You can even crank up the amplitude higher "
"to 2, 10, 100. However, you should note that when the overall amplitude of all"
" the sounds gets too high, Sonic Pi uses what's called a compressor to squash "
"them all to make sure things aren't too loud for your ears. This can often mak"
"e the sound muddy and strange. So try to use low amplitudes, i.e. in the range"
" 0 to 0.5 to avoid compression."
msgstr ""
"L'amplitude est la représentation informatique du volume d'un son. Une *amplit"
"ude élevée produit un son fort* et une *amplitude basse produit un son faible*"
". A la manière dont Sonic Pi utilise des nombres pour représenter les durées e"
"t les notes, des nombres sont aussi utilisés pour représenter l'amplitude. Une"
" amplitude 0 est le silence (vous n'entendez rien) tandis qu'une amplitude de "
"1 désigne le volume normal. Vous pouvez monter l'amplitude à 2, 10, 100. Toute"
"fois, vous devez noter que lorsque l'amplitude globale de tous les sons devien"
"t trop élevée, Sonic Pi utilise ce qui est appelé un compresseur pour l'aplati"
"r, de manière à s'assurer que le volume ne soit pas trop fort pour vos oreille"
"s. Cela peut fréquemment rendre le son distordu et étrange. Aussi essayez d'ut"
"iliser des amplitudes basses, c'est-à-dire dans l'intervalle 0 à 0.5 pour évit"
"er la compression."

#: 02.2-Synth-Params.md:79
#, fuzzy
msgid "Amp it up"
msgstr "Amp-ez le"

#: 02.2-Synth-Params.md:81
#, fuzzy
msgid ""
"To change the amplitude of a sound, you can use the `amp:` opt. For example, t"
"o play at half amplitude pass 0.5:"
msgstr ""
"Pour changer l'amplitude d'un son, vous pouvez utiliser le paramètre `amp:`. P"
"ar exemple, pour jouer à moitié amplitude, passez 0.5 :"

#: 02.2-Synth-Params.md:84
#, no-wrap
msgid "play 60, amp: 0.5"
msgstr "play 60, amp: 0.5"

#: 02.2-Synth-Params.md:88
#, fuzzy
msgid "To play at double amplitude pass 2:"
msgstr "Pour jouer à double amplitude, passez 2 :"

#: 02.2-Synth-Params.md:90
#, no-wrap
msgid "play 60, amp: 2"
msgstr "play 60, amp: 2"

#: 02.2-Synth-Params.md:94
#, fuzzy
msgid ""
"The `amp:` opt only modifies the call to `play` it's associated with. So, in t"
"his example, the first call to play is at half volume and the second is back t"
"o the default (1):"
msgstr ""
"Le paramètre `amp:` ne modifie que l'appel au `play` auquel il est associé. Au"
"ssi, dans l'exemple suivant, le premier appel à play est à moitié volume et le"
" second revient à la valeur par défaut (1) :"

#: 02.2-Synth-Params.md:98
#, no-wrap
msgid ""
"play 60, amp: 0.5\n"
"sleep 0.5\n"
"play 65"
msgstr ""
"play 60, amp: 0.5\n"
"sleep 0.5\n"
"play 65"

#: 02.2-Synth-Params.md:104
#, fuzzy
msgid "Of course, you can use different `amp:` values for each call to play:"
msgstr ""
"Bien entendu, vous pouvez utiliser différentes valeurs de `amp:` pour chaque a"
"ppel à play :"

#: 02.2-Synth-Params.md:106
#, no-wrap
msgid ""
"play 50, amp: 0.1\n"
"sleep 0.25\n"
"play 55, amp: 0.2\n"
"sleep 0.25\n"
"play 57, amp: 0.4\n"
"sleep 0.25\n"
"play 62, amp: 1"
msgstr ""
"play 50, amp: 0.1\n"
"sleep 0.25\n"
"play 55, amp: 0.2\n"
"sleep 0.25\n"
"play 57, amp: 0.4\n"
"sleep 0.25\n"
"play 62, amp: 1"

#: 02.2-Synth-Params.md:116
#, fuzzy
msgid "Panning"
msgstr "Balance stéréo"

#: 02.2-Synth-Params.md:118
#, fuzzy
msgid ""
"Another fun opt to use is `pan:` which controls the panning of a sound in ster"
"eo. Panning a sound to the left means that you hear it out of the left speaker"
", and panning it to the right means you hear it out of your right speaker. For"
" our values, we use a -1 to represent fully left, 0 to represent center and 1 "
"to represent fully right in the stereo field. Of course, we're free to use any"
" value between -1 and 1 to control the exact positioning of our sound."
msgstr ""
"Un autre paramètre agréable à utiliser est `pan:` qui contrôle la balance du s"
"on en stéréo. Balancer un son vers la gauche signifie que votre oreille va l'e"
"ntendre sortir du haut-parleur de gauche, et le balancer vers la droite que vo"
"us l'entendrez sortir par le haut-parleur de droite. Pour nos valeurs, nous ut"
"ilisons -1 pour représenter complètement à gauche, 0 pour représenter le centr"
"e et 1 pour représenter complètement à droite dans le champ stéréo. Bien enten"
"du, vous êtes libre d'utiliser toute valeur entre -1 et 1 pour contrôler le po"
"sitionnement précis de votre son."

#: 02.2-Synth-Params.md:126
#, fuzzy
msgid "Let's play a beep out of the left speaker:"
msgstr "Jouons un beep à destination du haut-parleur de gauche :"

#: 02.2-Synth-Params.md:128
#, no-wrap
msgid "play 60, pan: -1"
msgstr "play 60, pan: -1"

#: 02.2-Synth-Params.md:132
#, fuzzy
msgid "Now, let's play it out of the right speaker:"
msgstr "Maintenant, jouons-le à destination du haut-parleur de droite :"

#: 02.2-Synth-Params.md:134
#, no-wrap
msgid "play 60, pan: 1"
msgstr "play 60, pan: 1"

#: 02.2-Synth-Params.md:138
#, fuzzy
msgid "Finally let's play it back out of the center of both (the default position):"
msgstr ""
"Finalement, jouons-le à destination du centre des deux (la position par défaut"
") :"

#: 02.2-Synth-Params.md:141
#, no-wrap
msgid "play 60, pan: 0"
msgstr "play 60, pan: 0"

#: 02.2-Synth-Params.md:145
#, fuzzy
msgid "Now, go and have fun changing the amplitude and panning of your sounds!"
msgstr ""
"Maintenant, allez et prenez plaisir à changer l'amplitude et la balance de vos"
" sons !"

#: 02.3-Switching-Synths.md:1
#, fuzzy
msgid "2.3 Switching Synths"
msgstr "2.3 Changement de synthés"

#: 02.3-Switching-Synths.md:3
#, fuzzy
msgid "Switching Synths"
msgstr "Changement de synthés"

#: 02.3-Switching-Synths.md:5
#, fuzzy
msgid ""
"So far we've had quite a lot of fun making beeps. However, you're probably sta"
"rting to get bored of the basic beep noise. Is that all Sonic Pi has to offer?"
" Surely there's more to live coding than just playing beeps? Yes there is, and"
" in this section we'll explore the exciting range of sounds that Sonic Pi has "
"to offer."
msgstr ""
"Jusqu'à maintenant, nous nous sommes bien amusés à faire des beeps. Cependant,"
" vous commencez probablement à être ennuyé par le bruit basique du beep. Sonic"
" Pi n'a-t-il que cela à offir en tout et pour tout ? Il y a certainement plus "
"dans le codage en \"live\" que de jouer seulement des beeps. Oui, et dans cette "
"section nous allons explorer l'étendue des sons que Sonic Pi a à offrir."

#: 02.3-Switching-Synths.md:13
#, fuzzy
msgid ""
"Sonic Pi has a range of instruments it calls synths which is *short for synthe"
"sisers*. Whereas samples represent pre-recorded sounds, synths are capable of "
"generating new sounds depending on how you control them (which we'll explore l"
"ater in this tutorial). Sonic Pi's synths are very powerful and expressive and"
" you'll have a lot of fun exploring and playing with them. First, let's learn "
"how to select the current synth to use."
msgstr ""
"Sonic Pi dispose d'un lot d'instruments qu'il appelle synths *raccourci pour s"
"ynthétiseurs*. Tandis que les échantillons (samples) représentent des sons pré"
"-enregistrés, les synthés (synths) sont capables de générer des nouveaux sons "
"en fonction de la façon dont vous les contrôlez (ce que nous explorerons plus "
"tard dans ce tutoriel). Les synthés de Sonic Pi sont très puissants et express"
"ifs, et vous aurez grand plaisir à les explorer et à jouer avec. En premier li"
"eu, apprenons à sélectionner le synthé en cours à utiliser."

#: 02.3-Switching-Synths.md:21
#, fuzzy
msgid "Buzzy saws and prophets"
msgstr "Dents de scie vibrantes et prophets"

#: 02.3-Switching-Synths.md:23
#, fuzzy
msgid "A fun sound is the *saw wave* - let's give it a try:"
msgstr "Un son sympathique est l'*onde en dent de scie (saw)* - essayons-le :"

#: 02.3-Switching-Synths.md:25
#, no-wrap
msgid ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.25"
msgstr ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.25"

#: 02.3-Switching-Synths.md:35
#, fuzzy
msgid "Let's try another sound - the *prophet*:"
msgstr "Essayons un autre son - le *prophet*:"

#: 02.3-Switching-Synths.md:37
#, no-wrap
msgid ""
"use_synth :prophet\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.25"
msgstr ""
"use_synth :prophet\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.25"

#: 02.3-Switching-Synths.md:47
#, fuzzy
msgid "How about combining two sounds. First one after another:"
msgstr "Comment combiner deux sons. D'abord l'un après l'autre :"

#: 02.3-Switching-Synths.md:49
#, no-wrap
msgid ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"use_synth :prophet\n"
"play 57\n"
"sleep 0.25"
msgstr ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"use_synth :prophet\n"
"play 57\n"
"sleep 0.25"

#: 02.3-Switching-Synths.md:60
#, fuzzy
msgid "Now at the same time:"
msgstr "Maintenant en même temps :"

#: 02.3-Switching-Synths.md:62
#, no-wrap
msgid ""
"use_synth :tb303\n"
"play 38\n"
"sleep 0.25\n"
"use_synth :dsaw\n"
"play 50\n"
"sleep 0.25\n"
"use_synth :prophet\n"
"play 57\n"
"sleep 0.25"
msgstr ""
"use_synth :tb303\n"
"play 38\n"
"sleep 0.25\n"
"use_synth :dsaw\n"
"play 50\n"
"sleep 0.25\n"
"use_synth :prophet\n"
"play 57\n"
"sleep 0.25"

#: 02.3-Switching-Synths.md:74
#, fuzzy
msgid ""
"Notice that the `use_synth` command only affects the following calls to `play`"
". Think of it like a *big switch* - new calls to `play` will play whatever syn"
"th it's currently pointing to. You can move the switch to a new synth with `us"
"e_synth`."
msgstr ""
"Notez que la commande `use_synth` n'agit que sur les appels suivants à `play`."
" Pensez à elle comme un *gros commutateur* - les nouveaux appels à `play` vont"
" jouer tout synthé qui est désigné \"en cours\". Vous pouvez enclencher le commu"
"tateur sur un nouveau synthé avec `use_synth`."

#: 02.3-Switching-Synths.md:80
#, fuzzy
msgid "Discovering Synths"
msgstr "Découverte des synthés"

#: 02.3-Switching-Synths.md:82
#, fuzzy
msgid ""
"To see which synths Sonic Pi has for you to play with take a look at the Synth"
"s option in the far left vertical menu (above Fx). There are over 20 to choose"
" from. Here are a few of my favourites:"
msgstr ""
"Pour voir quels synthés Sonic Pi met à votre disposition pour jouer, jetez un "
"œil sur les options de Synths dans le menu horizontal tout à fait en bas (à ga"
"uche de Fx). Il y en a 33 au choix. Voici mes préférés :"

#: 02.3-Switching-Synths.md:86
msgid "`:prophet`"
msgstr ""

#: 02.3-Switching-Synths.md:87
msgid "`:dsaw`"
msgstr ""

#: 02.3-Switching-Synths.md:88
msgid "`:fm`"
msgstr ""

#: 02.3-Switching-Synths.md:89
msgid "`:tb303`"
msgstr ""

#: 02.3-Switching-Synths.md:90
msgid "`:pulse`"
msgstr ""

#: 02.3-Switching-Synths.md:92
#, fuzzy
msgid ""
"Now play around with *switching synths during your music*. Have fun combining "
"synths to make new sounds as well as using different synths for different sect"
"ions of your music."
msgstr ""
"Maintenant jouez en *commutant les synthés au cours de votre jeu*. Prenez plai"
"sir à combiner des synthés pour faire de nouveaux sons et aussi en untilisant "
"différents synthés selon les sections de votre musique."

#: 02.4-Durations-with-Envelopes.md:1
#, fuzzy
msgid "2.4 Duration with Envelopes"
msgstr "2.4 Durées avec enveloppes"

#: 02.4-Durations-with-Envelopes.md:3
#, fuzzy
msgid "Duration with Envelopes"
msgstr "Durées avec enveloppes"

#: 02.4-Durations-with-Envelopes.md:5
#, fuzzy
msgid ""
"In an earlier section, we looked at how we can use the `sleep` command to cont"
"rol when to trigger our sounds. However, we haven't yet been able to control t"
"he duration of our sounds."
msgstr ""
"Dans une section précédente, nous avons vu comment nous pouvions utiliser la c"
"ommande sleep pour contrôler le moment du déclenchement de nos sons. Toutefois"
", nous n'avons pas encore été capables de contrôler la durée des sons."

#: 02.4-Durations-with-Envelopes.md:9
#, fuzzy
msgid ""
"In order to give us a simple, yet powerful means of *controlling the duration*"
" of our sounds, Sonic Pi provides the notion of an *ADSR amplitude envelope* ("
"we'll cover what ADSR means later in this section). An amplitude envelope offe"
"rs two useful aspects of control:"
msgstr ""
"Dans le but de nous offrir des moyens simples mais puissants de *contrôle de d"
"urée* de nos sons, Sonic Pi fournit la technique d'*enveloppe d'amplitude ADSR"
"* (nous expliquerons ce que ADSR signifie plus loin dans cette section). Une e"
"nveloppe d'amplitude offre deux moyens utiles de contrôle :"

#: 02.4-Durations-with-Envelopes.md:14
#, fuzzy
msgid "control over the duration of a sound"
msgstr "contrôle sur la durée d'un son"

#: 02.4-Durations-with-Envelopes.md:15
#, fuzzy
msgid "control over the amplitude of a sound"
msgstr "contrôle sur l'amplitude d'un son"

#: 02.4-Durations-with-Envelopes.md:17
#, fuzzy
msgid "Duration"
msgstr "Durée"

#: 02.4-Durations-with-Envelopes.md:19
#, fuzzy
msgid ""
"The duration is the length the sound lasts for. A longer duration means that y"
"ou hear the sound for longer. Sonic Pi's sounds all have a controllable amplit"
"ude envelope, and the total duration of that envelope is the duration of the s"
"ound. Therefore, by controlling the envelope you control the duration."
msgstr ""
"La durée est le temps pendant lequel le son se maintient. Une longue durée sig"
"nifie que vous entendez le son plus longtemps. Les sons de Sonic Pi ont tous u"
"ne enveloppe d'amplitude, et la durée totale de cette enveloppe est la durée d"
"u son. Ainsi, en contrôlant l'enveloppe, vous contrôlez la durée."

#: 02.4-Durations-with-Envelopes.md:27
#, fuzzy
msgid ""
"The ADSR envelope not only controls duration, it also gives you *fine control "
"over the amplitude of the sound*. All audible sounds start and end silent and "
"contain some non-silent part in-between. Envelopes allow you to slide and hold"
" the amplitude of non-silent parts of the sound. It's like giving someone inst"
"ructions on how to turn up and down the volume of a guitar amplifier. For exam"
"ple you might ask someone to \"start at silence, slowly move up to full volume,"
" hold it for a bit, then quickly fall back to silence.\" Sonic Pi allows you to"
" program exactly this behaviour with envelopes."
msgstr ""
"L'enveloppe ADSR non seulement contrôle la durée, mais vous donne aussi *un co"
"ntrôle fin sur l'amplitude du son*. Tous les sons commencent et finissent par "
"le silence, avec une part non silencieuse entre. Les enveloppes vous permetten"
"t de faire évoluer ou de maintenir l'amplitude des parties non-silencieuses du"
" son. C'est comme si vous donniez à quelqu'un des instructions sur comment aug"
"menter ou diminuer le volume d'une musique. Par exemple, vous pourriez demande"
"r à quelqu'un de commencer en silence, d'augmenter lentement le volume jusqu'a"
"u maximum, le maintenir un moment, puis revenir rapidement au silence. Sonic P"
"i vous permet de programmer ceci avec les enveloppes."

#: 02.4-Durations-with-Envelopes.md:37
#, fuzzy
msgid ""
"Just to recap, as we have seen before, an amplitude of 0 is silence and an amp"
"litude of 1 is normal volume."
msgstr ""
"Comme nous l'avions vu dans une section précédente, une amplitude de 0 est le "
"silence et une amplitude de 1 est le volume normal."

#: 02.4-Durations-with-Envelopes.md:40
msgid "Now, let us look at each of the parts of the envelopes in turn."
msgstr ""

#: 02.4-Durations-with-Envelopes.md:42
#, fuzzy
msgid "Release Phase"
msgstr "Durée d'extinction (Release)"

#: 02.4-Durations-with-Envelopes.md:44
#, fuzzy
msgid ""
"The only part of the envelope that's used by default is the release time. This"
" is the time it takes for the synth's sound to fade out. All synths have a rel"
"ease time of 1 which means that by default they have a duration of 1 beat (whi"
"ch at the default BPM of 60 is 1 second):"
msgstr ""
"Par défaut, tous les synthés ont une durée de \"release\" de 1. Ce qui signifie "
"qu'ils ont une durée d'un temps musical (qui par défaut est 1 seconde) avant e"
"xtinction. Nous pouvons changer cette durée en passant l'argument `release:` à"
" nos appels à `play`. Par exemple, pour faire jouer un synthé pendant 2 temps,"
" nous spécifions un `release:` de `2`:"

#: 02.4-Durations-with-Envelopes.md:53
msgid ""
"The note will be audible for 1 second. Go ahead and time it :-) This is short "
"hand for the longer more explicit version:"
msgstr ""

#: 02.4-Durations-with-Envelopes.md:56
#, no-wrap
msgid "play 70, release: 1"
msgstr "play 70, release: 1"

#: 02.4-Durations-with-Envelopes.md:60
msgid ""
"Notice how this sounds exactly the same (the sound lasts for one second). Howe"
"ver, it's now very easy to change the duration by modifying the value of the `"
"release:` opt:"
msgstr ""

#: 02.4-Durations-with-Envelopes.md:64
#, no-wrap
msgid "play 60, release: 2"
msgstr "play 60, release: 2"

#: 02.4-Durations-with-Envelopes.md:68
#, fuzzy
msgid ""
"We can make the synth sound for a very short amount of time by using a very sm"
"all release time:"
msgstr ""
"Nous pouvons faire jouer un synthé pendant une très courte durée en utilisant "
"une durée de \"release\" très petite :"

#: 02.4-Durations-with-Envelopes.md:71
#, no-wrap
msgid "play 60, release: 0.2"
msgstr "play 60, release: 0.2"

#: 02.4-Durations-with-Envelopes.md:75
#, fuzzy
msgid ""
"The duration of the release of the sound is called the *release phase* and by "
"default is a linear transition (i.e. a straight line). The following diagram i"
"llustrates this transition:"
msgstr ""
"Ainsi, qu'est-ce que la durée de \"release\" ? C'est la durée que prend le son p"
"our passer de l'amplitude totale (typiquement une valeur de 1) à l'amplitude 0"
". C'est appelé la *phase d'extinction* et c'est une transition linéaire (une c"
"ourbe en ligne droite). Le schéma suivant illustre cette transition :"

#: 02.4-Durations-with-Envelopes.md:79
msgid "![release envelope](../images/tutorial/env-release.png)"
msgstr ""

#: 02.4-Durations-with-Envelopes.md:81
#, fuzzy
msgid ""
"The vertical line at the far left of the diagram shows that the sound starts a"
"t 0 amplitude, but goes up to full amplitude immediately (this is the attack p"
"hase which we'll cover next). Once at full amplitude it then moves in a straig"
"ht line down to zero taking the amount of time specified by `release:`. *Longe"
"r release times produce longer synth fade outs.*"
msgstr ""
"La ligne verticale à gauche du schéma montre que le son part de l'amplitude 0,"
" mais monte jusqu'à l'amplitude totale immédiatement (c'est la phase d'attaque"
" que nous couvrirons en suivant). Une fois à l'amplitude totale, il évolue en "
"ligne droite jusqu'à zéro en prenant le temps spécifié par `release:`. *Des du"
"rées de \"release\" longues produisent des fondus d'extinction de synthé longs*."

#: 02.4-Durations-with-Envelopes.md:88
#, fuzzy
msgid ""
"You can therefore change the duration of your sound by changing the release ti"
"me. Have a play adding release times to your music."
msgstr ""
"Vous pouvez ainsi changer la durée de vos sons en changeant la durée d'extinct"
"ion. Jouez un moment en ajoutant des durées de \"release\" à votre musique."

#: 02.4-Durations-with-Envelopes.md:91
#, fuzzy
msgid "Attack Phase"
msgstr "Durée d'Attaque"

#: 02.4-Durations-with-Envelopes.md:93
#, fuzzy
msgid ""
"By default, the *attack phase* is 0 for all synths which means they move from "
"0 amplitude to 1 immediately. This gives the synth an initial percussive sound"
". However, you may wish to fade your sound in. This can be achieved with the `"
"attack:` opt. Try fading in some sounds:"
msgstr ""
"Par défaut, la phase d'attaque est fixée à 0 pour tous les synthés, ce qui sig"
"nifie qu'ils évoluent de l'amplitude 0 à l'amplitude 1 immédiatement. Cela don"
"ne initialement au synthé un son percussif. Toutefois, vous pouvez souhaiter u"
"ne montée progressive de votre son. Ceci peut être obtenu avec l'argument `att"
"ack:`. Essayez des montées progressives de quelques sons :"

#: 02.4-Durations-with-Envelopes.md:98
#, no-wrap
msgid ""
"play 60, attack: 2\n"
"sleep 3\n"
"play 65, attack: 0.5"
msgstr ""
"play 60, attack: 2\n"
"sleep 3\n"
"play 65, attack: 0.5"

#: 02.4-Durations-with-Envelopes.md:104
#, fuzzy
msgid ""
"You may use multiple opts at the same time. For example for a short attack and"
" a long release try:"
msgstr ""
"Vous pouvez utiliser des arguments multiples en même temps. Par exemple, pour "
"une attaque courte et une lente extinction, essayez :"

#: 02.4-Durations-with-Envelopes.md:107
#, no-wrap
msgid "play 60, attack: 0.7, release: 4"
msgstr "play 60, attack: 0.7, release: 4"

#: 02.4-Durations-with-Envelopes.md:111
#, fuzzy
msgid ""
"This short attack and long release envelope is illustrated in the following di"
"agram:"
msgstr ""
"Cette courte attaque et cette lente extinction sont illustrées dans le schéma "
"suivant :"

#: 02.4-Durations-with-Envelopes.md:114
msgid "![attack release envelope](../images/tutorial/env-attack-release.png)"
msgstr ""

#: 02.4-Durations-with-Envelopes.md:116
#, fuzzy
msgid ""
"Of course, you may switch things around. Try a long attack and a short release"
":"
msgstr ""
"Bien entendu, vous pouvez inverser les choses. Essayez une attaque longue et u"
"ne exctinction rapide :"

#: 02.4-Durations-with-Envelopes.md:119
#, no-wrap
msgid "play 60, attack: 4, release: 0.7"
msgstr "play 60, attack: 4, release: 0.7"

#: 02.4-Durations-with-Envelopes.md:123
msgid ""
"![long attack short release envelope](../images/tutorial/env-long-attack-short"
"-release.png)"
msgstr ""

#: 02.4-Durations-with-Envelopes.md:125
#, fuzzy
msgid ""
"Finally, you can also have both short attack and release times for shorter sou"
"nds."
msgstr ""
"Finalement, vous pouvez aussi avoir à la fois une attaque et une exctinction r"
"apides pour des sons plus courts :"

#: 02.4-Durations-with-Envelopes.md:128
#, no-wrap
msgid "play 60, attack: 0.5, release: 0.5"
msgstr "play 60, attack: 0.5, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:132
msgid ""
"![short attack short release envelope](../images/tutorial/env-short-attack-sho"
"rt-release.png)"
msgstr ""

#: 02.4-Durations-with-Envelopes.md:134
#, fuzzy
msgid "Sustain Phase"
msgstr "Durée de soutien (\"Sustain\")"

#: 02.4-Durations-with-Envelopes.md:136
#, fuzzy
msgid ""
"In addition to specifying attack and release times, you may also specify a sus"
"tain time to control the *sustain phase*. This is the time for which the sound"
" is maintained at full amplitude between the attack and release phases."
msgstr ""
"En plus de spécifier des durées d'attaque et d'extinction, vous pouvez aussi s"
"pécifier une durée de soutien. C'est la durée pendant laquelle le son est main"
"tenu à l'amplitude totale entre les phases d'attaque et d'extinction."

#: 02.4-Durations-with-Envelopes.md:141
#, no-wrap
msgid "play 60, attack: 0.3, sustain: 1, release: 1"
msgstr "play 60, attack: 0.3, sustain: 1, release: 1"

#: 02.4-Durations-with-Envelopes.md:145
msgid "![ASR envelope](../images/tutorial/env-attack-sustain-release.png)"
msgstr ""

#: 02.4-Durations-with-Envelopes.md:147
#, fuzzy
msgid ""
"The sustain time is useful for important sounds you wish to give full presence"
" in the mix before entering an optional release phase. Of course, it's totally"
" valid to set both the `attack:` and `release:` opts to 0 and just use the sus"
"tain to have absolutely no fade in or fade out to the sound. However, be warne"
"d, a release of 0 can produce clicks in the audio and it's often better to use"
" a very small value such as 0.2."
msgstr ""
"La durée de soutien est utile pour des sons importants auxquels vous voulez do"
"nner une présence permanente dans le mixage avant d'entrer dans une optionnell"
"e phase d'extinction. Bien entendu, c'est entièrement valide de fixer à la foi"
"s les arguments d'attaque et d'extinction à 0 et d'utiliser seulement le souti"
"en pour n'avoir absolument pas de montée et d'extinction progressives. Cependa"
"nt, faites attention, une durée d'extinction de 0 peut produire des clics dans"
" l'écoute et c'est souvent mieux d'utiliser une très petite valeur comme 0.2."

#: 02.4-Durations-with-Envelopes.md:154
#, fuzzy
msgid "Decay Phase"
msgstr "Durée de déclin (\"Decay\")"

#: 02.4-Durations-with-Envelopes.md:156
#, fuzzy
msgid ""
"For an extra level of control, you can also specify a decay time. This is a ph"
"ase of the envelope that fits between the attack and sustain phases and specif"
"ies a time where the amplitude will drop from the `attack_level:` to the `deca"
"y_level:` (which unless you explicitly set it will be set to the `sustain_leve"
"l:`). By default, the `decay:` opt is 0 and both the attack and sustain levels"
" are 1 so you'll need to specify them for the decay time to have any effect:"
msgstr ""
"Finalement, pour les cas où vous aurez besoin d'un niveau de contrôle suppléme"
"ntaire, vous pourrez aussi spécifier une durée de déclin. C'est la phase de l'"
"enveloppe qui s'intercale entre les phases d'attaque et de soutien et qui spéc"
"ifie la durée pendant laquelle l'amplitude va descendre du niveau `attack_leve"
"l` jusqu'au niveau `sustain_level`. Par défaut, l'argument \"decay\" est à 0 et "
"à la fois les niveaux \"attack\" et \"sustain\" sont à 1. Ainsi vous aurez besoin "
"de les spécifier en plus de la durée de déclin pour obtenir un effet :"

#: 02.4-Durations-with-Envelopes.md:164
#, no-wrap
msgid ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, sustain_level: 0.4, sustain"
": 1, release: 0.5"
msgstr ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, sustain_level: 0.4, sustain"
": 1, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:168
msgid "![ADSR envelope](../images/tutorial/env-attack-decay-sustain-release.png)"
msgstr ""

#: 02.4-Durations-with-Envelopes.md:170
msgid "Decay Level"
msgstr ""

#: 02.4-Durations-with-Envelopes.md:172
msgid ""
"One last trick is that although the `decay_level:` opt defaults to be the same"
" value as `sustain_level:` you can explicitly set them to different values for"
" full control over the envelope. This allows you to to create envelopes such a"
"s the following:"
msgstr ""

#: 02.4-Durations-with-Envelopes.md:177
#, no-wrap
msgid ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, decay_level: 0.3, sustain: "
"1, sustain_level: 0.4, release: 0.5"
msgstr ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, decay_level: 0.3, sustain: "
"1, sustain_level: 0.4, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:181
msgid "![ASR envelope](../images/tutorial/env-decay-level.png)"
msgstr ""

#: 02.4-Durations-with-Envelopes.md:183
msgid ""
"It's also possible to set the `decay_level:` to be higher than `sustain_level:"
"`:"
msgstr ""

#: 02.4-Durations-with-Envelopes.md:185
#, no-wrap
msgid ""
"play 60, attack: 0.1, attack_level: 0.1, decay: 0.2, decay_level: 1, sustain: "
"0.5, sustain_level: 0.8, release: 1.5"
msgstr ""
"play 60, attack: 0.1, attack_level: 0.1, decay: 0.2, decay_level: 1, sustain: "
"0.5, sustain_level: 0.8, release: 1.5"

#: 02.4-Durations-with-Envelopes.md:189
msgid "![ASR envelope](../images/tutorial/env-decay-level-2.png)"
msgstr ""

#: 02.4-Durations-with-Envelopes.md:191
#, fuzzy
msgid "ADSR Envelopes"
msgstr "Enveloppes ADSR"

#: 02.4-Durations-with-Envelopes.md:193
#, fuzzy
msgid "So to summarise, Sonic Pi's ADSR envelopes have the following phases:"
msgstr "Ainsi pour résumer, les enveloppes de Sonic Pi ont les phases suivantes :"

#: 02.4-Durations-with-Envelopes.md:195
#, fuzzy
msgid "*attack* - time from 0 amplitude to the `attack_level`,"
msgstr "*attack* - durée de passage de l'amplitude 0 jusqu'au niveau `attack_level`,"

#: 02.4-Durations-with-Envelopes.md:196
#, fuzzy
msgid "*decay* - time to move amplitude from `attack_level` to `decay_level`,"
msgstr ""
"*decay* - durée pour passer l'amplitude du niveau `attack_level` jusqu'au nive"
"au `sustain_level`,"

#: 02.4-Durations-with-Envelopes.md:197
#, fuzzy
msgid "*sustain* - time to move the amplitude from `decay_level` to `sustain_level`,"
msgstr "*sustain* - durée pour maintenir l'amplitude au niveau `sustain_level`,"

#: 02.4-Durations-with-Envelopes.md:198
#, fuzzy
msgid "*release* - time to move amplitude from `sustain_level` to 0"
msgstr ""
"*release* - durée pour passer l'amplitude du niveau `sustain_level` au niveau "
"0"

#: 02.4-Durations-with-Envelopes.md:200
#, fuzzy
msgid ""
"It's important to note that the duration of a sound is the summation of the ti"
"mes of each of these phases. Therefore the following sound will have a duratio"
"n of 0.5 + 1 + 2 + 0.5 = 4 beats:"
msgstr ""
"Il est important de noter que la durée d'un son est la somme des durées de cha"
"cune de ces phases. Ainsi le son suivant aura une durée de 0.5 + 1 + 2 + 0.5 ="
" 4 temps musicaux :"

#: 02.4-Durations-with-Envelopes.md:204
#, no-wrap
#, fuzzy
msgid ""
"play 60, attack: 0.5, attack_level: 1, decay: 1, sustain_level: 0.4, sustain: "
"2, release: 0.5"
msgstr "play 60, attack: 0.5, decay: 1, sustain_level: 0.4, sustain: 2, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:208
#, fuzzy
msgid "Now go and have a play adding envelopes to your sounds..."
msgstr "Maintenant, allez et jouez un moment en ajoutant des enveloppes à vos sons."

#: 03-Samples.md:1
#, fuzzy
msgid "3 Samples"
msgstr "3 Échantillons"

#: 03-Samples.md:3
#, fuzzy
msgid "Samples"
msgstr "Échantillons (\"Samples\")"

#: 03-Samples.md:5
#, fuzzy
msgid ""
"Another great way to develop your music is to use pre-recorded sounds. In grea"
"t hip-hop tradition, we call these pre-recorded sounds *samples*. So, if you t"
"ake a microphone outside, go and record the gentle sound of rain hitting canva"
"s, you've just created a sample."
msgstr ""
"Un autre grand moyen de développer votre musique est d'utiliser des sons pré-e"
"nregistrés. Dans la grande tradition hip-hop, on appelle ces sons pré-enregist"
"rés *samples*. Aussi, si vous prenez un micro à l'extérieur, et allez enregist"
"rer le son de la pluie frappant une toile, vous avez tout simplement créé un \""
"sample\"."

#: 03-Samples.md:10
#, fuzzy
msgid ""
"Sonic Pi lets you do lots of fun things with samples. Not only does it ship wi"
"th over 90 public domain samples ready for you to jam with, it lets you play a"
"nd manipulate your own. Let's get to it..."
msgstr ""
"Sonic Pi vous offre des tas de choses amusantes à faire avec les \"samples\". No"
"n seulement il est livré avec plus de 90 échantillons du domaine public, prêts"
" pour faire un boeuf, mais il vous permet de jouer et de manipuler les vôtres "
"propres. Allons voir..."

#: 03.1-Triggering-Samples.md:1
#, fuzzy
msgid "3.1 Triggering Samples"
msgstr "3.1 Lecture des échantillons"

#: 03.1-Triggering-Samples.md:3
#, fuzzy
msgid "Triggering Samples"
msgstr "Lecture des échantillons"

#: 03.1-Triggering-Samples.md:5
#, fuzzy
msgid ""
"Playing beeps is only the beginning. Something that's a lot of fun is triggeri"
"ng pre-recorded samples. Try it:"
msgstr ""
"Jouer des beeps est seulement un début. Une chose qui est très plaisante est d"
"e déclencher des échantillons pré-enregistrés. Essayez-le :"

#: 03.1-Triggering-Samples.md:8
#, no-wrap
msgid "sample :ambi_lunar_land"
msgstr "sample :ambi_lunar_land"

#: 03.1-Triggering-Samples.md:12
#, fuzzy
msgid ""
"Sonic Pi includes many samples for you to play with. You can use them just lik"
"e you use the `play` command. To play multiple samples and notes just write th"
"em one after another:"
msgstr ""
"Sonic Pi inclut beaucoup d'échantillons à jouer. Vous pouvez les utiliser just"
"e comme vous utilisez la commande `play`. Pour jouer des échantillons et des n"
"otes multiples, écrivez-les simplement les uns après les autres :"

#: 03.1-Triggering-Samples.md:16
#, no-wrap
msgid ""
"play 36\n"
"play 48\n"
"sample :ambi_lunar_land\n"
"sample :ambi_drone"
msgstr ""
"play 36\n"
"play 48\n"
"sample :ambi_lunar_land\n"
"sample :ambi_drone"

#: 03.1-Triggering-Samples.md:23
#, fuzzy
msgid "If you want to space them out in time, use the `sleep` command:"
msgstr "Si vous voulez les espacer dans le temps, utilisez la commande `sleep`:"

#: 03.1-Triggering-Samples.md:25
#, no-wrap
msgid ""
"sample :ambi_lunar_land\n"
"sleep 1\n"
"play 48\n"
"sleep 0.5\n"
"play 36\n"
"sample :ambi_drone\n"
"sleep 1\n"
"play 36"
msgstr ""
"sample :ambi_lunar_land\n"
"sleep 1\n"
"play 48\n"
"sleep 0.5\n"
"play 36\n"
"sample :ambi_drone\n"
"sleep 1\n"
"play 36"

#: 03.1-Triggering-Samples.md:36
#, fuzzy
msgid ""
"Notice how Sonic Pi doesn't wait for a sound to finish before starting the nex"
"t sound. The `sleep` command only describes the separation of the *triggering*"
" of the sounds. This allows you to easily layer sounds together creating inter"
"esting overlap effects. Later in this tutorial we'll take a look at controllin"
"g the *duration* of sounds with envelopes."
msgstr ""
"Notez que Sonic Pi n'attend pas la fin d'un son pour démarrer le suivant. La c"
"ommande `sleep` décrit uniquement la séparation du *déclenchement* des sons. C"
"eci vous permet de superposer les sons en couches en créant d'intéressants eff"
"ets de chevauchement. Plus tard dans ce tutoriel, nous jetterons un œil sur le"
" contrôle de la durée de ces sons avec des enveloppes."

#: 03.1-Triggering-Samples.md:44
#, fuzzy
msgid "Discovering Samples"
msgstr "Découverte des échantillons"

#: 03.1-Triggering-Samples.md:46
#, fuzzy
msgid ""
"There are two ways to discover the range of samples provided in Sonic Pi. Firs"
"t, you can use this help system. Click on Samples in the far left vertical men"
"u, choose your category and then you'll see a list of available sounds."
msgstr ""
"Il y a deux manière de découvrir l'étendue des échantillons fournis par Sonic "
"Pi. En premier lieu, on peut utiliser le système d'aide. Cliquez sur \"Échantil"
"lons\" dans le menu horizontal du bas, choisissez votre catégorie et vous verre"
"z une liste des sons disponibles."

#: 03.1-Triggering-Samples.md:51
#, fuzzy
msgid ""
"Alternatively you can use the *auto-completion system*. Simply type the start "
"of a sample group such as: `sample :ambi_` and you'll see a drop-down of sampl"
"e names appear for you to select. Try the following category prefixes:"
msgstr ""
"Alternativement, vous pouvez utiliser le *système d'auto-complétion*. Tapez si"
"mplement le début d'un groupe d'échantillons comme : `sample :ambi_` et vous v"
"errez apparaître une liste de noms d'échantillons qui vous permettra d'en séle"
"ctionner un. Essayez les préfixes de catégorie suivants :"

#: 03.1-Triggering-Samples.md:56
msgid "`:ambi_`"
msgstr ""

#: 03.1-Triggering-Samples.md:57
msgid "`:bass_`"
msgstr ""

#: 03.1-Triggering-Samples.md:58
msgid "`:elec_`"
msgstr ""

#: 03.1-Triggering-Samples.md:59
msgid "`:perc_`"
msgstr ""

#: 03.1-Triggering-Samples.md:60
msgid "`:guit_`"
msgstr ""

#: 03.1-Triggering-Samples.md:61
msgid "`:drum_`"
msgstr ""

#: 03.1-Triggering-Samples.md:62
msgid "`:misc_`"
msgstr ""

#: 03.1-Triggering-Samples.md:63
msgid "`:bd_`"
msgstr ""

#: 03.1-Triggering-Samples.md:65
#, fuzzy
msgid "Now start mixing samples into your compositions!"
msgstr "Maintenant commencez à introduire des échantillons dans vos compositions !"

#: 03.2-Sample-Params.md:1
#, fuzzy
msgid "3.2 Sample Parameters"
msgstr "3.2 Paramètres des échantillons"

#: 03.2-Sample-Params.md:3
#, fuzzy
msgid "Sample Parameters: Amp and Pan"
msgstr "Paramètres des échantillons : Amp et Pan"

#: 03.2-Sample-Params.md:5
#, fuzzy
msgid ""
"As we saw with synths, we can easily control our sounds with parameters. Sampl"
"es support exactly the same parameterisation mechanism. Let's revisit our frie"
"nds `amp:` and `pan:`."
msgstr ""
"Comme nous l'avons vu avec les synthés, nous pouvons aisément contrôler nos so"
"ns avec des paramètres. Les \"Samples\" supportent exactement le même mécanisme "
"de paramètrage. Revisitons nos amis `amp:` et `pan:`."

#: 03.2-Sample-Params.md:9
#, fuzzy
msgid "Amping samples"
msgstr "Amplitude des échantillons"

#: 03.2-Sample-Params.md:11
#, fuzzy
msgid ""
"You can change the amplitude of samples with exactly the same approach you use"
"d for synths:"
msgstr ""
"Vous pouvez changer l'amplitude des échantillons avec exactement la même appro"
"che que vous avez utilisée pour les synthés :"

#: 03.2-Sample-Params.md:14
#, no-wrap
msgid "sample :ambi_lunar_land, amp: 0.5"
msgstr "sample :ambi_lunar_land, amp: 0.5"

#: 03.2-Sample-Params.md:18
#, fuzzy
msgid "Panning samples"
msgstr "Balance des échantillons"

#: 03.2-Sample-Params.md:20
#, fuzzy
msgid ""
"We're also able to use the `pan:` parameter on samples. For example, here's ho"
"w we'd play the amen break in the left ear and then half way through play it a"
"gain through the right ear:"
msgstr ""
"Nous pouvons aussi utiliser le paramètre `pan:` avec les échantillons. Par exe"
"mple, voici comment nous jouerions l'amen au début vers la droite, puis à moti"
"é parcours, vers la gauche :"

#: 03.2-Sample-Params.md:24
#, no-wrap
msgid ""
"sample :loop_amen, pan: -1\n"
"sleep 0.877\n"
"sample :loop_amen, pan: 1"
msgstr ""
"sample :loop_amen, pan: -1\n"
"sleep 0.877\n"
"sample :loop_amen, pan: 1"

#: 03.2-Sample-Params.md:30
#, fuzzy
msgid "Note that 0.877 is half the duration of the `:loop_amen` sample in seconds."
msgstr ""
"Notez que 0.877 est la moitié de la durée en secondes de l'échantillon `:loop_"
"amen`."

#: 03.2-Sample-Params.md:33
#, fuzzy
msgid ""
"Finally, note that if you set some synth defaults with `use_synth_defaults` (w"
"hich we will discuss later), these will be ignored by `sample`."
msgstr ""
"Finalement, notez que si vous fixez des valeurs par défaut avec `use_synth_def"
"aults` (que nous détaillerons plus tard), ils seront ignorés par `sample`."

#: 03.3-Stretching-Samples.md:1
#, fuzzy
msgid "3.3 Stretching Samples"
msgstr "3.3 Étirement des échantillons"

#: 03.3-Stretching-Samples.md:3
#, fuzzy
msgid "Stretching Samples"
msgstr "Étirement des échantillons"

#: 03.3-Stretching-Samples.md:5
#, fuzzy
msgid ""
"Now that we can play a variety of synths and samples to create some music, it'"
"s time to learn how to modify both the synths and samples to make the music ev"
"en more unique and interesting. First, let's explore the ability to *stretch* "
"and *squash* samples."
msgstr ""
"Maintenant que nous pouvons jouer une variété de synthés et d'échantillons pou"
"r créer une musique, il est temps d'apprendre comment modifier à la fois les s"
"ynthés et les échantillons pour faire de la musique encore plus originale et i"
"ntéressante. En premier, explorons la faculté d'*étirer* et de *compresser* le"
"s échantillons."

#: 03.3-Stretching-Samples.md:10
#, fuzzy
msgid "Sample Representation"
msgstr "Représentation des échantillons"

#: 03.3-Stretching-Samples.md:12
#, fuzzy
msgid ""
"Samples are pre-recorded sounds stored as numbers which represent how to move "
"the speaker cone to reproduce the sound. The speaker cone can move in and out,"
" and so the numbers just need to represent how far in and out the cone needs t"
"o be for each moment in time. To be able to faithfully reproduce a recorded so"
"und the sample typically needs to store many thousands of numbers per second! "
"Sonic Pi takes this list of numbers and feeds them at the right speed to move "
"your computer's speaker in and out in just the right way to reproduce the soun"
"d. However, it's also fun to change the speed with which the numbers are fed t"
"o the speaker to change the sound."
msgstr ""
"Les échantillons (\"samples\") sont des sons pré-enregistrés stockés à l'aide de"
" nombres qui représentent comment se déplace la membrane du haut-parleur pour "
"reproduire le son. La membrane du haut-parleur peut avancer et reculer, et ain"
"si les nombres ont juste besoin de représenter la distance d'avancée ou de rec"
"ul que la membrane doit avoir pour chaque moment dans le temps. Pour être capa"
"ble de reproduire fidèlement un son enregistré, un échantillon a typiquement b"
"esoin de stocker des milliers de nombres par seconde. Sonic Pi prend cette lis"
"te de nombres et en alimente à la bonne vitesse l'ordinateur pour faire avance"
"r et reculer comme il le faut la membrane de son haut-parleur pour reproduire "
"le son. Cependant, c'est aussi amusant de changer la vitesse à laquelle est al"
"imenté le haut-parleur pour changer le son."

#: 03.3-Stretching-Samples.md:23
#, fuzzy
msgid "Changing Rate"
msgstr "Changement de vitesse (\"Rate\")"

#: 03.3-Stretching-Samples.md:25
#, fuzzy
msgid ""
"Let's play with one of the ambient sounds: `:ambi_choir`. To play it with the "
"default rate, you can pass a `rate:` opt to `sample`:"
msgstr ""
"Jouons avec un des sons d'ambiance : `:ambi_choir`. Pour le jouer avec la vite"
"sse par défaut, vous pouvez passer un argument `rate:` au `sample`:"

#: 03.3-Stretching-Samples.md:28
#, no-wrap
msgid "sample :ambi_choir, rate: 1"
msgstr "sample :ambi_choir, rate: 1"

#: 03.3-Stretching-Samples.md:32
#, fuzzy
msgid ""
"This plays it at normal rate (1), so nothing special yet. However, we're free "
"to change that number to something else. How about `0.5`:"
msgstr ""
"Ceci le joue à la vitesse normale (1), aussi rien de spécial pour l'instant. C"
"ependant, vous êtes libre de changer ce nombre pour une autre valeur. Que dire"
" de `0.5`:"

#: 03.3-Stretching-Samples.md:35
#, no-wrap
msgid "sample :ambi_choir, rate: 0.5"
msgstr "sample :ambi_choir, rate: 0.5"

#: 03.3-Stretching-Samples.md:39
#, fuzzy
msgid ""
"Woah! What's going on here? Well, two things. Firstly, the sample takes twice "
"as long to play, secondly the sound is an octave lower. Let's explore these th"
"ings in a little more detail."
msgstr ""
"Wooh ! Que se passe-t-il ici ? Eh bien, deux choses. Premièrement, l'échantill"
"on est joué pendant 2 fois plus de temps, deuxièmement le son est a un octave "
"en-dessous. Explorons ces choses un peu plus en détails."

#: 03.3-Stretching-Samples.md:43
#, fuzzy
msgid "Let's stretch"
msgstr "Étirons"

#: 03.3-Stretching-Samples.md:45
#, fuzzy
msgid ""
"A sample that's fun to stretch and compress is the Amen Break. At normal rate,"
" we might imagine throwing it into a *drum 'n' bass* track:"
msgstr ""
"Un échantillon qui est amusant à étirer ou à compresser est Amen. A vitesse no"
"rmale, on pourrait imaginer de l'insérer dans une piste de batterie et de bass"
"e :"

#: 03.3-Stretching-Samples.md:48 03.4-Enveloped-Samples.md:17
#: 03.5-Partial-Samples.md:9 A.03-coded-beats.md:33 A.12-sample-slicing.md:22
#, no-wrap
msgid "sample :loop_amen"
msgstr "sample :loop_amen"

#: 03.3-Stretching-Samples.md:52
#, fuzzy
msgid ""
"However by changing the rate we can switch up genres. Try half speed for *old "
"school hip-hop*:"
msgstr ""
"Toutefois en modifiant la vitesse on peut changer de genre. Essayez de réduire"
" de moitié la vitesse pour une *vieille école hip-hop*:"

#: 03.3-Stretching-Samples.md:55 03.5-Partial-Samples.md:16
#, no-wrap
msgid "sample :loop_amen, rate: 0.5"
msgstr "sample :loop_amen, rate: 0.5"

#: 03.3-Stretching-Samples.md:59
#, fuzzy
msgid "If we speed it up, we enter *jungle* territory:"
msgstr "Si nous l'accélérons, nous entrons dans le territoire de la *jungle*:"

#: 03.3-Stretching-Samples.md:61
#, no-wrap
msgid "sample :loop_amen, rate: 1.5"
msgstr "sample :loop_amen, rate: 1.5"

#: 03.3-Stretching-Samples.md:65
#, fuzzy
msgid ""
"Now for our final party trick - let's see what happens if we use a negative ra"
"te:"
msgstr ""
"Maintenant pour notre astuce finale - voyons ce qui se passe lorsque nous util"
"isons un \"rate\" négatif :"

#: 03.3-Stretching-Samples.md:68
#, no-wrap
msgid "sample :loop_amen, rate: -1"
msgstr "sample :loop_amen, rate: -1"

#: 03.3-Stretching-Samples.md:72
#, fuzzy
msgid ""
"Woah! It plays it *backwards*! Now try playing with lots of different samples "
"at different rates. Try very fast rates. Try crazy slow rates. See what intere"
"sting sounds you can produce."
msgstr ""
"Wooh ! Il le joue à *l'envers* ! Maintenant, essayez de jouer avec des tas d'é"
"chantillons différents. Essayez des vitesses très rapides et des vitesses inse"
"nsément lentes. Voyez quels sons intéressants vous pouvez produire."

#: 03.3-Stretching-Samples.md:76
#, fuzzy
msgid "A Simple Explanation of Sample Rate"
msgstr "Une simple explication de la vitesse d'échantillon (\"sample rate\")"

#: 03.3-Stretching-Samples.md:78
#, fuzzy
msgid ""
"A useful way to think of samples is as springs. Playback rate is like squashin"
"g and stretching the spring. If you play the sample at rate 2, you're *squashi"
"ng the spring* to half its normal length. The sample therefore takes half the "
"amount of time to play as it's shorter. If you play the sample at half rate, y"
"ou're *stretching the spring* to double its length. The sample therefore takes"
" twice the amount of time to play as it's longer. The more you squash (higher "
"rate), the shorter it gets, the more you stretch (lower rate), the longer it g"
"ets."
msgstr ""
"Un moyen imagé d'assimiler les échantillons est de penser aux ressorts.   La v"
"itesse de lecture est comme l'étirement et la compression du ressort. Si vous "
"jouez l'échantillon à la vitesse 2, vous compressez le ressort à la moitié de "
"sa longueur normale. Ainsi l'échantillon met la moitié du temps à être joué pu"
"isqu'il est plus court. Si vous jouez l'échantillon à la moitié de la vitesse,"
" vous *étirez le ressort* au double de sa longueur. Ainsi l'échantillon met de"
"ux fois plus de temps à être joué puisqu'il est plus long. Plus vous compresse"
"z (vitesse plus élevée), plus il devient court, plus vous étirez (vitesse plus"
" lente), plus il devient long."

#: 03.3-Stretching-Samples.md:87
#, fuzzy
msgid ""
"Compressing a spring increases its density (the number of coils per cm) - this"
" is similar to the sample sounding *higher pitched*. Stretching the spring dec"
"reases its density and is similar to the sound having a *lower pitch*."
msgstr ""
"Compresser un ressort augmente sa densité (le nombre de spires par cm) - ceci "
"est similaire à l'échantillon sonnant *plus aigu*. Étirer le ressort diminue s"
"a densité, c'est similaire à un son *plus grave*."

#: 03.3-Stretching-Samples.md:93
#, fuzzy
msgid "The Maths Behind Sample Rate"
msgstr "Les maths derrière la vitesse d'échantillon"

#: 03.3-Stretching-Samples.md:95
#, fuzzy
msgid ""
"(This section is provided for those that are interested in the details. Please"
" feel free to skip it...)"
msgstr ""
"(Cette section est fournie pour ceux que les détails intéressent. Soyez libre "
"de la sauter...)"

#: 03.3-Stretching-Samples.md:98
#, fuzzy
msgid ""
"As we saw above, a sample is represented by a big long list of numbers represe"
"nting where the speaker should be through time. We can take this list of numbe"
"rs and use it to draw a graph which would look similar to this:"
msgstr ""
"Comme nous l'avons vu ci-dessus, un échantillon est représenté par une longue "
"liste de nombres qui représentent la position où devrait être la membrane du h"
"aut-parleur dans le temps. Nous pouvons prendre cette liste de nombres et l'ut"
"iliser pour tracer un graphique qui ressemblerait à ceci :"

#: 03.3-Stretching-Samples.md:103
msgid "![sample graph](../images/tutorial/sample.png)"
msgstr ""

#: 03.3-Stretching-Samples.md:105
#, fuzzy
msgid ""
"You might have seen pictures like this before. It's called the *waveform* of a"
" sample. It's just a graph of numbers. Typically a waveform like this will hav"
"e 44100 points of data per second (this is due to the Nyquist-Shannon sampling"
" theorem). So, if the sample lasts for 2 seconds, the waveform will be represe"
"nted by 88200 numbers which we would feed to the speaker at a rate of 44100 po"
"ints per second. Of course, we could feed it at double rate which would be 882"
"00 points per second. This would therefore take only 1 second to play back. We"
" could also play it back at half rate which would be 22050 points per second t"
"aking 4 seconds to play back."
msgstr ""
"Vous devriez avoir déjà vu des images comme cela. C'est appelé la *forme d'ond"
"e* d'un échantillon. C'est juste un graphique de nombres. Typiquement, une for"
"me d'onde comme cela aura 44100 points de données par seconde (en application "
"du théorème d'échantillonnage de Nyquist-Shannon). Ainsi, si l'échantillon dur"
"e 2 secondes, la forme d'onde sera représentée par 88200 nombres qui alimenter"
"ont le haut-parleur à la vitesse de 44100 points par seconde. Bien sûr, nous p"
"ouvons l'alimenter à une vitesse double qui serait de 88200 points par seconde"
". Ceci prendrait ainsi une seconde à être joué. Nous pourrions aussi le jouer "
"à la moitié de la vitesse qui serait donc de 22050 points par seconde, en pren"
"ant 4 secondes pour être joué."

#: 03.3-Stretching-Samples.md:116
#, fuzzy
msgid "The duration of the sample is affected by the playback rate:"
msgstr "La durée d'un échantillon est affecté par la vitesse de jeu :"

#: 03.3-Stretching-Samples.md:118
#, fuzzy
msgid "Doubling the playback rate halves the playback time,"
msgstr "Doubler la vitesse de jeu diminue de moitié la durée du jeu,"

#: 03.3-Stretching-Samples.md:119
#, fuzzy
msgid "Halving the playback rate doubles the playback time,"
msgstr "Diminuer de moitié la vitesse de jeu double la durée de jeu,"

#: 03.3-Stretching-Samples.md:120
#, fuzzy
msgid "Using a playback rate of one fourth quadruples the playback time,"
msgstr "Utiliser une vitesse de jeu d'un quart quadruple la durée du jeu,"

#: 03.3-Stretching-Samples.md:121
#, fuzzy
msgid "Using a playback rate of 1/10 makes playback last 10 times longer."
msgstr "Utiliser une vitesse de jeu de 1/10 fait durer le jeu 10 fois plus longtemps."

#: 03.3-Stretching-Samples.md:123
#, fuzzy
msgid "We can represent this with the formula:"
msgstr "On peut représenter ceci avec la formule :"

#: 03.3-Stretching-Samples.md:125
#, no-wrap
#, fuzzy
msgid "new_sample_duration = (1 / rate) * sample_duration "
msgstr "nouvelle_durée  = (1 / rate) * durée_normale "

#: 03.3-Stretching-Samples.md:129
#, fuzzy
msgid ""
"Changing the playback rate also affects the pitch of the sample. The frequency"
" or pitch of a waveform is determined by how fast it moves up and down. Our br"
"ains somehow turn fast movement of speakers into high notes and slow movement "
"of speakers into low notes. This is why you can sometimes even see a big bass "
"speaker move as it pumps out super low bass - it's actually moving a lot slowe"
"r in and out than a speaker producing higher notes."
msgstr ""
"Changer la vitesse de jeu affecte aussi la hauteur du son. La fréquence ou le "
"ton d'une forme d'onde est déterminé par la vitesse à laquelle elle monte et d"
"escend. Notre cerveau curieusement change le mouvement rapide de la membrane d"
"u haut-parleur en notes hautes et le mouvement lent en notes basses. C'est pou"
"rquoi vous pouvez quelquefois voir un gros haut-parleur de basse bouger en éme"
"ttant une super basse - il va et vient beaucoup moins vite qu'un haut-parleur "
"produisant des notes plus aiguës."

#: 03.3-Stretching-Samples.md:137
#, fuzzy
msgid ""
"If you take a waveform and squash it it will move up and down more times per s"
"econd. This will make it sound higher pitched. It turns out that doubling the "
"amount of up and down movements (oscillations) doubles the frequency. So, *pla"
"ying your sample at double rate will double the frequency you hear it*. Also, "
"*halving the rate will halve the frequency*. Other rates will affect the frequ"
"ency accordingly."
msgstr ""
"Si vous prenez une forme d'onde et que vous la compressez, elle va monter et d"
"escendre plus de fois par seconde. Ceci va faire un son   plus aigu. On en déd"
"uit que doubler le montant des mouvements de montée et descente (oscillations)"
" double la fréquence. Ainsi, *jouer votre échantillon à double vitesse double "
"la fréquence que vous entendez*. De même, *diminuer de moitié la vitesse va di"
"minuer de moitié la fréquence*. D'autres vitesses affecterons la fréquence dan"
"s le même sens."

#: 03.4-Enveloped-Samples.md:1
#, fuzzy
msgid "3.4 Enveloped Samples"
msgstr "3.4 Échantillons enveloppés"

#: 03.4-Enveloped-Samples.md:3
#, fuzzy
msgid "Enveloped Samples"
msgstr "Échantillons enveloppés"

#: 03.4-Enveloped-Samples.md:5
#, fuzzy
msgid ""
"It is also possible to modify the *duration* and *amplitude* of a sample using"
" an ADSR envelope. However, this works slightly differently to the ADSR envelo"
"pe available on synths. Sample envelopes only allow you to reduce the amplitud"
"e and duration of a sample - and never to increase it. The sample will stop wh"
"en either the sample has finished playing or the envelope has completed - whic"
"hever is first. So, if you use a very long `release:`, it won't extend the dur"
"ation of the sample."
msgstr ""
"Il est aussi possible de modifier la *durée* et l'*amplitude* d'un échantillon"
" en utilisant une enveloppe ADSR. Toutefois, ceci fonctionne d'une manière lég"
"èrement différente de l'enveloppe ADSR applicable aux synthés. Les enveloppes "
"d'échantillon permettent uniquement de réduire l'amplitude et la durée de l'éc"
"hantillon - et jamais de les augmenter. Le jeu de l'échantillon s'arrêtera soi"
"t quand l'échantillon arrivera à sa fin, soit quand la fin l'enveloppe sera at"
"teinte. Donc si vous utilisez une phase de `release:` très longue, cela n'allo"
"ngera pas la durée de l'échantillon."

#: 03.4-Enveloped-Samples.md:13
#, fuzzy
msgid "Amen Envelopes"
msgstr "Des enveloppes pour Amen"

#: 03.4-Enveloped-Samples.md:15
#, fuzzy
msgid "Let's return to our trusty friend the Amen Break:"
msgstr "Retournons à notre fidèle ami Amen :"

#: 03.4-Enveloped-Samples.md:21
#, fuzzy
msgid ""
"With no opts, we hear the full sample at full amplitude. If we want to fade th"
"is in over 1 second we can use the `attack:` param:"
msgstr ""
"Sans paramètres, nous entendons la totalité de l'échantillon à son amplitude t"
"otale. Si nous voulons une attaque progressive, nous pouvons utiliser le param"
"ètre `attack:`:"

#: 03.4-Enveloped-Samples.md:24
#, no-wrap
msgid "sample :loop_amen, attack: 1"
msgstr "sample :loop_amen, attack: 1"

#: 03.4-Enveloped-Samples.md:28
#, fuzzy
msgid "For a shorter fade in, choose a shorter attack value:"
msgstr "Pour une attaque plus courte, choisissez une valeur `attack:` plus petite :"

#: 03.4-Enveloped-Samples.md:30
#, no-wrap
msgid "sample :loop_amen, attack: 0.3"
msgstr "sample :loop_amen, attack: 0.3"

#: 03.4-Enveloped-Samples.md:34
#, fuzzy
msgid "Auto Sustain"
msgstr "Soutien automatique (\"Auto Sustain\")"

#: 03.4-Enveloped-Samples.md:36
#, fuzzy
msgid ""
"Where the ADSR envelope's behaviour differs from the standard synth envelope i"
"s in the *sustain* value. In the standard synth envelope, the sustain defaulte"
"d to 0 unless you set it manually. With samples, the sustain value defaults to"
" an *automagical* value - the time left to play the rest of the sample. This i"
"s why we hear the full sample when we pass no defaults. If the attack, decay, "
"sustain and release values were all 0 we'd never hear a peep. Sonic Pi therefo"
"re calculates how long the sample is, deducts any attack, decay and release ti"
"mes and uses the result as your sustain time. If the attack, decay and release"
" values add up to more than the duration of the sample, the sustain is simply "
"set to 0."
msgstr ""
"Où le comportement de l'enveloppe ADSR diffère de l'enveloppe standard des syn"
"thés est dans la valeur de *sustain*. Dans l'enveloppe standard des synthés, l"
"a valeur par défaut du soutien est 0 à moins que vous ne la fixiez manuellemen"
"t. Avec les échantillons, la valeur par défaut du soutien est une valeur *auto"
"-magique* - le temps qu'il reste pour finir l'échantillon. C'est pour cela que"
" nous entendons l'échantillon en entier quand une valeur n'est pas spécifiée. "
"Si les valeurs de l'attaque, du déclin, du soutien et de l'extinction sont tou"
"tes à 0, nous n'entendrons pas le moindre gazouillis. Donc, de la longueur de "
"l'échantillon, Sonic Pi déduit les éventuelles durées d'attaque, de déclin et "
"d'extinction et utilise le résultat pour votre durée de soutien. Si la somme d"
"es durées d'attaque, de déclin et d'extinction est supérieure à la durée de l'"
"échantillon, le soutien est simplement fixé à 0."

#: 03.4-Enveloped-Samples.md:48
#, fuzzy
msgid "Fade Outs"
msgstr "Extinctions progressives"

#: 03.4-Enveloped-Samples.md:50
#, fuzzy
msgid ""
"To explore this, let's consider our Amen break in more detail. If we ask Sonic"
" Pi how long the sample is:"
msgstr ""
"Pour explorer ceci, regardons notre Amen de manière plus détaillée. Si nous de"
"mandons à Sonic Pi quelle est la longueur de l'échantillon :"

#: 03.4-Enveloped-Samples.md:53
#, no-wrap
msgid "print sample_duration :loop_amen"
msgstr "print sample_duration :loop_amen"

#: 03.4-Enveloped-Samples.md:57
#, fuzzy
msgid ""
"It will print out `1.753310657596372` which is the length of the sample in sec"
"onds. Let's just round that to `1.75` for convenience here. Now, if we set the"
" release to `0.75`, something surprising will happen:"
msgstr ""
"Il affichera `1.753310657596372`, ce qui est la longueur de l'échantillon en s"
"econdes. Arrondissons-le ici à `1.75` par commodité. Maintenant si nous fixons"
" l'extinction à `0.75`, quelque chose de surprenant va se passer :"

#: 03.4-Enveloped-Samples.md:61
#, no-wrap
msgid "sample :loop_amen, release: 0.75"
msgstr "sample :loop_amen, release: 0.75"

#: 03.4-Enveloped-Samples.md:65
#, fuzzy
msgid ""
"It will play the first second of the sample at full amplitude before then fadi"
"ng out over a period of 0.75 seconds. This is the *auto sustain* in action. By"
" default, the release always works from the end of the sample. If our sample w"
"as 10.75 seconds long, it would play the first 10 seconds at full amplitude be"
"fore fading out over 0.75s."
msgstr ""
"La première seconde de l'échantillon va être jouée à l'amplitude totale avant "
"de s'estomper progressivement sur une durée de 0.75 secondes. C'est l'*auto-so"
"utien* en action. Par défaut, la phase d'extinction fonctionne de manière à s'"
"achever à la fin de l'échantillon. Si notre échantillon avait 10.75 secondes d"
"e longueur, il serait joué 10 seconde à l'amplitude totale avant de s'estomper"
" progressivement pendant 0.75 secondes."

#: 03.4-Enveloped-Samples.md:71
#, fuzzy
msgid "Remember: by default, `release:` fades out at the end of a sample."
msgstr ""
"Rappelez-vous : par défaut, la phase `release:` amène à l'extinction complète "
"à la fin de l'échantillon."

#: 03.4-Enveloped-Samples.md:73
#, fuzzy
msgid "Fade In and Out"
msgstr "Attaque et extinction preogressive"

#: 03.4-Enveloped-Samples.md:75
#, fuzzy
msgid ""
"We can use both `attack:` and `release:` together with the auto sustain behavi"
"our to fade both in and out over the duration of the sample:"
msgstr ""
"On peut utiliser à la fois les paramètres `attack:` et `release:` ensemble grâ"
"ce au comportement du soutien automatique pour des attaques et des extinctions"
" progressives :"

#: 03.4-Enveloped-Samples.md:78
#, no-wrap
msgid "sample :loop_amen, attack: 0.75, release: 0.75"
msgstr "sample :loop_amen, attack: 0.75, release: 0.75"

#: 03.4-Enveloped-Samples.md:82
#, fuzzy
msgid ""
"As the full duration of the sample is 1.75s and our attack and release phases "
"add up to 1.5s, the sustain is automatically set to 0.25s. This allows us to e"
"asily fade the sample in and out."
msgstr ""
"Comme la durée totale de l'échantillon est de 1.75 s et que la somme des phase"
"s d'attaque et d'extinction fait 1.5 s, le soutien est automatiquement ajusté "
"à 0.25 s. Ceci nous permet de programmer facilement une attaque et une extinct"
"ion progressives de l'échantillon."

#: 03.4-Enveloped-Samples.md:86
#, fuzzy
msgid "Explicit sustain"
msgstr "Soutien explicite"

#: 03.4-Enveloped-Samples.md:88
#, fuzzy
msgid ""
"We can easily get back to our normal synth ADSR behaviour by manually setting "
"`sustain:` to a value such as 0:"
msgstr ""
"Nous pouvons facilement revenir au comportement normal de l'enveloppe ADSR des"
" synthés en fixant manuellement `sustain:` à une valeur comme 0 :"

#: 03.4-Enveloped-Samples.md:91
#, no-wrap
msgid "sample :loop_amen, sustain: 0, release: 0.75"
msgstr "sample :loop_amen, sustain: 0, release: 0.75"

#: 03.4-Enveloped-Samples.md:95
#, fuzzy
msgid ""
"Now, our sample only plays for 0.75 seconds in total. With the default for `at"
"tack:` and `decay:` at 0, the sample jumps straight to full amplitude, sustain"
"s there for 0s then releases back down to 0 amplitude over the release period "
"- 0.75s."
msgstr ""
"Maintenant, notre échantillon n'est joué que pendant 0.75 s au total. Avec les"
" valeurs 0 par défaut pour `attack:` et `decay:` , l'échantillon monte directe"
"ment à l'amplitude totale, se maintient là pendant 0 s et redescend progressiv"
"ement à l'amplitude 0 pendant une durée de 0.75 s."

#: 03.4-Enveloped-Samples.md:100
#, fuzzy
msgid "Percussive cymbals"
msgstr "Cymbales percussives"

#: 03.4-Enveloped-Samples.md:102
#, fuzzy
msgid ""
"We can use this behaviour to good effect to turn longer sounding samples into "
"shorter, more percussive versions. Consider the sample `:drum_cymbal_open`:"
msgstr ""
"Nous pouvons utiliser ce comportement pour obtenir de bons effets en transform"
"ant un échantillon qui sonne longtemps en versions plus percussives. Intéresso"
"ns-nous à l'échantillon `:drum_cymbal_open`:"

#: 03.4-Enveloped-Samples.md:106
#, no-wrap
msgid "sample :drum_cymbal_open"
msgstr "sample :drum_cymbal_open"

#: 03.4-Enveloped-Samples.md:110
#, fuzzy
msgid ""
"You can hear the cymbal sound ringing out over a period of time. However, we c"
"an use our envelope to make it more percussive:"
msgstr ""
"Vous pouvez entendre la cymbale sonnant pendant une certaine durée. Toutefois,"
" nous pouvons utiliser notre enveloppe pour la rendre plus percussive :"

#: 03.4-Enveloped-Samples.md:113
#, no-wrap
msgid "sample :drum_cymbal_open, attack: 0.01, sustain: 0, release: 0.1"
msgstr "sample :drum_cymbal_open, attack: 0.01, sustain: 0, release: 0.1"

#: 03.4-Enveloped-Samples.md:117
#, fuzzy
msgid ""
"You can then emulate hitting the cymbal and then dampening it by increasing th"
"e sustain period:"
msgstr ""
"Vous pouvez émuler la frappe de la cymbale suivie d'un étouffement en augmenta"
"nt la phase de soutien :"

#: 03.4-Enveloped-Samples.md:120
#, no-wrap
msgid "sample :drum_cymbal_open, attack: 0.01, sustain: 0.3, release: 0.1"
msgstr "sample :drum_cymbal_open, attack: 0.01, sustain: 0.3, release: 0.1"

#: 03.4-Enveloped-Samples.md:124
#, fuzzy
msgid ""
"Now go and have fun putting envelopes over the samples. Try changing the rate "
"too for really interesting results."
msgstr ""
"Maintenant allez et prenez plaisir à mettre des enveloppes sur vos échantillon"
"s. Essayez aussi de changer la vitesse pour des résultats vraiment intéressant"
"s."

#: 03.5-Partial-Samples.md:1
#, fuzzy
msgid "3.5 Partial Samples"
msgstr "3.5 Échantillons partiels"

#: 03.5-Partial-Samples.md:3
#, fuzzy
msgid "Partial Samples"
msgstr "Échantillons partiels"

#: 03.5-Partial-Samples.md:5
#, fuzzy
msgid ""
"This section will conclude our exploration of Sonic Pi's sample player. Let's "
"do a quick recap. So far we've looked at how we can trigger samples:"
msgstr ""
"Cette section va conclure notre exploration du lecteur d'échantillons de Sonic"
" Pi. Faisons un rapide résumé. Jusqu'à maintenant nous avons vu comment lire d"
"es échantillons :"

#: 03.5-Partial-Samples.md:13
#, fuzzy
msgid ""
"We then looked at how we can change the rate of samples such as playing them a"
"t half speed:"
msgstr ""
"Nous avons ensuite vu comment changer la vitesse de lecture des échantillons e"
"n les jouant par exemple à moitié vitesse :"

#: 03.5-Partial-Samples.md:20
#, fuzzy
msgid "Next, we looked at how we could fade a sample in (let's do it at half speed):"
msgstr ""
"Ensuite, nous avons vu comment nous pouvions obtenir une attaque progressive ("
"faisons-le à moitié vitesse) :"

#: 03.5-Partial-Samples.md:23
#, no-wrap
msgid "sample :loop_amen, rate: 0.5, attack: 1"
msgstr "sample :loop_amen, rate: 0.5, attack: 1"

#: 03.5-Partial-Samples.md:27
#, fuzzy
msgid ""
"We also looked at how we could use the start of a sample percussively by givin"
"g `sustain:` an explicit value and setting both the attack and release to be s"
"hort values:"
msgstr ""
"Nous avons aussi vu comment nous pouvions utiliser le début d'un échantillon d"
"e manière percussive en donnant à `sustain:` une valeur explicite et en assign"
"ant des valeurs faibles à la fois à `attack:` et à `release:`:"

#: 03.5-Partial-Samples.md:31
#, no-wrap
msgid "sample :loop_amen, rate: 2, attack: 0.01, sustain: 0, release: 0.35"
msgstr "sample :loop_amen, rate: 2, attack: 0.01, sustain: 0, release: 0.35"

#: 03.5-Partial-Samples.md:35
#, fuzzy
msgid ""
"However, wouldn't it be nice if we didn't have to always start at the beginnin"
"g of the sample? Wouldn't it also be nice if we didn't have to always finish a"
"t the end of the sample?"
msgstr ""
"Toutefois ne serait-il pas sympathique de ne pas avoir à toujours démarrer au "
"début de l'échantillon ? Ne serait-ce pas également sympathique de ne pas avoi"
"r à finir toujours à la fin de l'échantillon ?"

#: 03.5-Partial-Samples.md:39
#, fuzzy
msgid "Choosing a starting point"
msgstr "Choix d'un point de départ"

#: 03.5-Partial-Samples.md:41
#, fuzzy
msgid ""
"It is possible to choose an arbitrary starting point in the sample as a value "
"between 0 and 1 where 0 is the start of the sample, 1 is the end and 0.5 is ha"
"lf way through the sample. Let's try playing only the last half of the amen br"
"eak:"
msgstr ""
"Il est possible de choisir un point arbitraire de départ dans l'échantillon au"
" moyen d'une valeur comprise entre 0 et 1 où 0 est le début de l'échantillon e"
"t 1 la fin et 0.5 le milieu. Essayons de jouer seulement la dernière moitié de"
" \"Amen\":"

#: 03.5-Partial-Samples.md:46
#, no-wrap
msgid "sample :loop_amen, start: 0.5"
msgstr "sample :loop_amen, start: 0.5"

#: 03.5-Partial-Samples.md:50
#, fuzzy
msgid "How about the last quarter of the sample:"
msgstr "Ou pour le dernier quart de l'échantillon :"

#: 03.5-Partial-Samples.md:52
#, no-wrap
msgid "sample :loop_amen, start: 0.75"
msgstr "sample :loop_amen, start: 0.75"

#: 03.5-Partial-Samples.md:56
#, fuzzy
msgid "Choosing a finish point"
msgstr "Choix d'un point de terminaison"

#: 03.5-Partial-Samples.md:58
#, fuzzy
msgid ""
"Similarly, it is possible to choose an arbitrary finish point in the sample as"
" a value between 0 and 1. Let's finish the amen break half way through:"
msgstr ""
"De manière similaire, il est possible de choisir un point de terminaison arbit"
"raire au moyen d'une valeur comprise entre 0 et 1. Terminons l'\"Amen\" à la moi"
"tié de son parcours :"

#: 03.5-Partial-Samples.md:62 A.12-sample-slicing.md:62
#, no-wrap
msgid "sample :loop_amen, finish: 0.5"
msgstr "sample :loop_amen, finish: 0.5"

#: 03.5-Partial-Samples.md:66
#, fuzzy
msgid "Specifying start and finish"
msgstr "Spécification du départ et de la terminaison"

#: 03.5-Partial-Samples.md:68
#, fuzzy
msgid ""
"Of course, we can combine these two to play arbitrary segments of the audio fi"
"le. How about only a small section in the middle:"
msgstr ""
"Bien sûr, nous pouvons combiner ces deux paramètres pour jouer des segments ar"
"bitraires. Comment jouer uniquement une petite section au milieu :"

#: 03.5-Partial-Samples.md:71
#, no-wrap
msgid "sample :loop_amen, start: 0.4, finish: 0.6"
msgstr "sample :loop_amen, start: 0.4, finish: 0.6"

#: 03.5-Partial-Samples.md:75
#, fuzzy
msgid "What happens if we choose a start position after the finish position?"
msgstr ""
"Que se passe-t-il si nous choisissons une position de départ postérieure au po"
"int de terminaison ?"

#: 03.5-Partial-Samples.md:78
#, no-wrap
msgid "sample :loop_amen, start: 0.6, finish: 0.4"
msgstr "sample :loop_amen, start: 0.6, finish: 0.4"

#: 03.5-Partial-Samples.md:82
#, fuzzy
msgid "Cool! It plays it backwards!"
msgstr "Cool ! Ça joue à l'envers !"

#: 03.5-Partial-Samples.md:84
#, fuzzy
msgid "Combining with rate"
msgstr "Combinaison avec la vitesse"

#: 03.5-Partial-Samples.md:86
#, fuzzy
msgid ""
"We can combine this new ability to play arbitrary segments of audio with our f"
"riend `rate:`. For example, we can play a very small section of the middle of "
"the amen break very slowly:"
msgstr ""
"Nous pouvons combiner cette nouvelle possibilité avec l'ami `rate:` pour jouer"
" des segments arbitraires. Par exemple, nous pouvons jouer une très petite sec"
"tion d'\"Amen\" très lentement :"

#: 03.5-Partial-Samples.md:90
#, no-wrap
msgid "sample :loop_amen, start: 0.5, finish: 0.7, rate: 0.2"
msgstr "sample :loop_amen, start: 0.5, finish: 0.7, rate: 0.2"

#: 03.5-Partial-Samples.md:94
#, fuzzy
msgid "Combining with envelopes"
msgstr "Combinaison avec les enveloppes"

#: 03.5-Partial-Samples.md:96
#, fuzzy
msgid ""
"Finally, we can combine all of this with our ADSR envelopes to produce interes"
"ting results:"
msgstr ""
"Finalement, nous pouvons combiner tout ceci avec nos enveloppes ADSR pour prod"
"uire des résultats intéressants :"

#: 03.5-Partial-Samples.md:99
#, no-wrap
msgid ""
"sample :loop_amen, start: 0.5, finish: 0.8, rate: -0.2, attack: 0.3, release: "
"1"
msgstr ""
"sample :loop_amen, start: 0.5, finish: 0.8, rate: -0.2, attack: 0.3, release: "
"1"

#: 03.5-Partial-Samples.md:103
#, fuzzy
msgid "Now go and have a play mashing up samples with all of this fun stuff..."
msgstr ""
"Maintenant allez et jouez un moment en triturant les échantillons avec ces cho"
"ses amusantes."

#: 03.6-External-Samples.md:1
#, fuzzy
msgid "3.6 External Samples"
msgstr "3.6 Échantillons externes"

#: 03.6-External-Samples.md:3
#, fuzzy
msgid "External Samples"
msgstr "Échantillons externes"

#: 03.6-External-Samples.md:5
#, fuzzy
msgid ""
"Whilst the built-in samples can get you up and started quickly, you might wish"
" to experiment with other recorded sounds in your music. Sonic Pi totally supp"
"orts this. First though, let's have a quick discussion on the portability of y"
"our piece."
msgstr ""
"Bien que les échantillons fournis en interne puissent vous motiver et vous fai"
"re démarrer rapidement, vous pourriez souhaiter d'expérimenter d'autres sons p"
"ré-enregistrés dans votre musique. Sonic Pi supporte complètement cela. En pre"
"mier lieu toutefois ayons une rapide discussion sur la portabilité de votre oe"
"uvre."

#: 03.6-External-Samples.md:10
#, fuzzy
msgid "Portability"
msgstr "Portabilité"

#: 03.6-External-Samples.md:12
#, fuzzy
msgid ""
"When you compose your piece purely with built-in synths and samples, the code "
"is all you need to faithfully reproduce your music. Think about that for a mom"
"ent - that's amazing! A simple piece of text you can email around or stick in "
"a [Gist](https://gist.github.com) represents everything you need to reproduce "
"your sounds. That makes it *really easy to share* with your friends as they ju"
"st need to get hold of the code."
msgstr ""
"Quand vous composez votre morceau uniquement avec des synthés et des échantill"
"ons internes, le code est tout ce dont vous avez besoin pour reproduire fidèle"
"ment votre musique. Pensez à cela un instant - C'est étonnant ! Un simple morc"
"eau de texte que vous pouvez envoyer par mail ou coller dans un [Gist](https:/"
"/gist.github.com) représente tout ce que vous avez besoin pour reproduire vos "
"sons. Cela le rend *vraiment facile à partager* avec vos amis puisqu'ils ont j"
"uste besoin de se procurer le code."

#: 03.6-External-Samples.md:19
#, fuzzy
msgid ""
"However, if you start using your own pre-recorded samples, you lose this porta"
"bility. This is because to reproduce your music other people not only need you"
"r code, they need your samples too. This limits the ability for others to mani"
"pulate, mash-up and experiment with your work. Of course this shouldn't stop y"
"ou from using your own samples, it's just something to consider."
msgstr ""
"Toutefois, si vous commencez à utiliser vos propres échantillons pré-enregistr"
"és, vous perdez cette portabilité. C'est parce que non seulement les autres on"
"t besoin de votre code, mais aussi de vos échantillons. Ceci limite la capacit"
"é pour les autres de manipuler, triturer et expérimenter votre oeuvre. Bien en"
"tendu, ceci ne devrait pas vous faire arrêter d'utiliser vos propres échantill"
"ons, c'est juste quelque chose à prendre en compte."

#: 03.6-External-Samples.md:26
#, fuzzy
msgid "Local Samples"
msgstr "Échantillons locaux"

#: 03.6-External-Samples.md:28
#, fuzzy
msgid ""
"So how do you play any arbitrary WAV, AIFF or FLAC file on your computer? All "
"you need to do is pass the path of that file to `sample`:"
msgstr ""
"Alors comment jouez-vous n'importe quel fichier WAV, AIFF ou FLAC sur votre or"
"dinateur ? Tout ce dont vous avez besoin est de passer le chemin de ce fichier"
" à `sample`:"

#: 03.6-External-Samples.md:31
#, no-wrap
msgid ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\"\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\""
msgstr ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\"\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\""

#: 03.6-External-Samples.md:38
#, fuzzy
msgid ""
"Sonic Pi will automatically load and play the sample. You can also pass all th"
"e standard params you're used to passing `sample`:"
msgstr ""
"Sonic Pi chargera automatiquement et jouera votre échantillon. Vous pouvez aus"
"si passer tous les paramètres que vous avez l'habitude de passer à `sample`:"

#: 03.6-External-Samples.md:41
#, no-wrap
#, fuzzy
msgid ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3"
msgstr ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\"\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\""

#: 03.7-Sample-Packs.md:1
#, fuzzy
msgid "3.7 Sample Packs"
msgstr "3.7 Paquets de samples"

#: 03.7-Sample-Packs.md:3
#, fuzzy
msgid "Sample Packs"
msgstr "Paquets de samples"

#: 03.7-Sample-Packs.md:5
#, fuzzy
msgid ""
"**Note: this section of the tutorial covers the advanced topic of working with"
" large directories of your own samples. This will be the case if you've downlo"
"aded or bought your own sample packs and wish to use them within Sonic Pi.**"
msgstr ""
"**Note: cette section du tutoriel couvre le sujet avancé de travailler avec de"
"s grands dossiers de vos propres samples. Ce sera le cas si vous avez téléchar"
"gé ou acheté vos propre paquets de samples et souhaitez les utiliser dans Soni"
"c Pi.**"

#: 03.7-Sample-Packs.md:10
#, fuzzy
msgid "**Feel free to skip this if you're happy working with the built-in samples.**"
msgstr ""
"**N'hésitez pas à sauter cette section si vous vous contentez des samples four"
"nis dans Sonic Pi.**"

#: 03.7-Sample-Packs.md:13
#, fuzzy
msgid ""
"When working with large folders of external samples it can be cumbersome to ha"
"ve to type the whole path every time to trigger an individual sample."
msgstr ""
"Quand on travaille avec de grands dossiers de samples externes il peut être en"
"nuyeux de taper le chemin entier chaque fois qu'on veut déclencher un sample p"
"articulier."

#: 03.7-Sample-Packs.md:17
#, fuzzy
msgid "For example, say you have the following folder on your machine:"
msgstr "Par exemple, imaginons que vous avez le dossier suivant sur votre machine :"

#: 03.7-Sample-Packs.md:19
#, no-wrap
msgid "/path/to/my/samples/"
msgstr "/path/to/my/samples/"

#: 03.7-Sample-Packs.md:23
#, fuzzy
msgid "When we look inside that folder we find the following samples:"
msgstr "Quand on regarde dans ce dossier on voit les samples suivants :"

#: 03.7-Sample-Packs.md:25 03.7-Sample-Packs.md:86
msgid "`100_A#_melody1.wav`"
msgstr ""

#: 03.7-Sample-Packs.md:26 03.7-Sample-Packs.md:87
msgid "`100_A#_melody2.wav`"
msgstr ""

#: 03.7-Sample-Packs.md:27 03.7-Sample-Packs.md:88
msgid "`100_A#_melody3.wav`"
msgstr ""

#: 03.7-Sample-Packs.md:28 03.7-Sample-Packs.md:89
msgid "`120_A#_melody4.wav`"
msgstr ""

#: 03.7-Sample-Packs.md:29 03.7-Sample-Packs.md:90
msgid "`120_Bb_guit1.wav`"
msgstr ""

#: 03.7-Sample-Packs.md:30 03.7-Sample-Packs.md:91
msgid "`120_Bb_piano1.wav`"
msgstr ""

#: 03.7-Sample-Packs.md:32
#, fuzzy
msgid "Typically in order to play the piano sample we can use the full path:"
msgstr "Typiquement pour jouer le sample de piano on peut utiliser le chemin complet :"

#: 03.7-Sample-Packs.md:34
#, no-wrap
msgid "sample \"/path/to/my/samples/120_Bb_piano1.wav\""
msgstr "sample \"/path/to/my/samples/120_Bb_piano1.wav\""

#: 03.7-Sample-Packs.md:38
#, fuzzy
msgid "If we want to then play the guitar sample we can use its full path too:"
msgstr ""
"Si on veut jouer le sample de guitare on peut aussi utiliser son chemin comple"
"t :"

#: 03.7-Sample-Packs.md:40
#, no-wrap
msgid "sample \"/path/to/my/samples/120_Bb_guit.wav\""
msgstr "sample \"/path/to/my/samples/120_Bb_guit.wav\""

#: 03.7-Sample-Packs.md:44
#, fuzzy
msgid ""
"However, both of these calls to sample requires us to *know* the names of the "
"samples within our directory. What if we just want to listen to each sample in"
" turn quickly?"
msgstr ""
"Cependant ces deux appels de samples nous forcent à *connaître* le nom de chac"
"un des samples de notre dossier. Et si on voulait juste écouter chaque sample "
"à son tour rapidement ?"

#: 03.7-Sample-Packs.md:48
#, fuzzy
msgid "Indexing Sample Packs"
msgstr "Indexer les paquets de samples"

#: 03.7-Sample-Packs.md:50
#, fuzzy
msgid ""
"If we want to play the first sample in a directory we just need to pass the di"
"rectory's name to `sample` and the index `0` as follows:"
msgstr ""
"Si on veut jouer le premier sample d'un dossier on peut juste passer le nom du"
" dossier à `sample` et l'index `0` comme suit :"

#: 03.7-Sample-Packs.md:53
#, no-wrap
msgid "sample \"/path/to/my/samples/\", 0"
msgstr "sample \"/path/to/my/samples/\", 0"

#: 03.7-Sample-Packs.md:57
#, fuzzy
msgid "We can even make a shortcut to our directory path using a variable:"
msgstr ""
"On peut même construire un raccourci vers notre chemin de dossier en utilisant"
" une variable :"

#: 03.7-Sample-Packs.md:59
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 0"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 0"

#: 03.7-Sample-Packs.md:64
#, fuzzy
msgid ""
"Now, if we want to play the second sample in our directory, we just need to ad"
"d 1 to our index:"
msgstr ""
"Maintenant, si on veut jouer le deuxième sample de notre dossier, on peut just"
"e incrémenter notre index :"

#: 03.7-Sample-Packs.md:67
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 1"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 1"

#: 03.7-Sample-Packs.md:72
#, fuzzy
msgid ""
"Notice that we no longer need to know the names of the samples in the director"
"y - we just need to know the directory itself (or have a shortcut to it). If w"
"e ask for an index which is larger than the number of samples, it simply wraps"
" round just like Rings. Therefore, whatever number we use we're guaranteed to "
"get one of the samples in that directory."
msgstr ""
"Remarquez qu'on n'a plus besoin de connaître le nom des samples du dossier : o"
"n doit juste connaître le dossier lui-même (ou avoir un raccourci vers lui). S"
"i on demande un index qui est plus grand que le nombre de samples, il va juste"
" boucler comme pour les anneaux. Ainsi, quel que soit le nombre qu'on utilise "
"on a la garantie de récupérer un des samples de ce dossier."

#: 03.7-Sample-Packs.md:79
#, fuzzy
msgid "Filtering Sample Packs"
msgstr "Filtrer des paquets de samples"

#: 03.7-Sample-Packs.md:81
#, fuzzy
msgid ""
"Usually indexing is enough, but sometimes we need more power to sort and organ"
"ise our samples. Luckily many sample packs add useful information in the filen"
"ames. Let's take another look at the sample file names in our directory:"
msgstr ""
"D'habitude indexer suffit, mais parfois on a besoin de plus de puissance pour "
"trier et organiser nos samples. Heureusement de nombreux paquets de samples aj"
"outent des informations utiles dans les noms de fichiers. Jetons un autre oeil"
" aux noms de fichier des samples de notre dossier :"

#: 03.7-Sample-Packs.md:93
#, fuzzy
msgid ""
"Notice that in these filenames we have quite a bit of information. Firstly, we"
" have the BPM of the sample (beats per minute) at the start. So, the piano sam"
"ple is at 120 BPM and our first three melodies are at 100 BPM. Also, our sampl"
"e names contain the key. So the guitar sample is in Bb and the melodies are in"
" A#. This information is very useful for mixing in these samples with our othe"
"r code. For example, we know we can only play the piano sample with code that'"
"s in 120 BPM and in the key of Bb."
msgstr ""
"Remarquez que dans ces noms de fichier nous avons pas mal d'informations. On a"
" le BPM du sample (nombre de battements par minute) au début. Donc le sample d"
"e piano est à 120 BPM et nos trois premières mélodies sont à 100 BPM. Nos noms"
" de samples contiennent aussi la clef. Donc le sample de guitare est en Bb (si"
" bémol) et les mélodies sont en A# (la dièse). Cette information est très util"
"e pour mélanger ces samples avec le reste de notre code. Par exemple, on sait "
"qu'on ne peut jouer le sample de piano que dans du code qui est à 120 BPM et d"
"ans la clef de Bb."

#: 03.7-Sample-Packs.md:102
#, fuzzy
msgid ""
"It turns out that we can use this particular naming convention of our sample s"
"ets in the code to help us filter out the ones we want. For example, if we're "
"working at 120 BPM, we can filter down to all the samples that contain the str"
"ing `\"120\"` with the following:"
msgstr ""
"Il se trouve qu'on peut utiliser cette convention de nommage particulière de n"
"os ensembles de samples dans le code pour nous aider à ne garder que ceux qu'o"
"n veut. Par exemple, si nous travaillons à 120 BPM, on peut ne garder que les "
"samples qui contiennent la chaîne `\"120\"` avec le code suivant :"

#: 03.7-Sample-Packs.md:107
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\""
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\""

#: 03.7-Sample-Packs.md:112
#, fuzzy
msgid ""
"This will play us the first match. If we want the second match we just need to"
" use the index:"
msgstr ""
"Cela jouera le premier sample qui correspond. Si on veut le deuxième, on n'a q"
"u'à utiliser l'index :"

#: 03.7-Sample-Packs.md:115
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", 1"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", 1"

#: 03.7-Sample-Packs.md:120
#, fuzzy
msgid ""
"We can even use multiple filters at the same time. For example, if we want a s"
"ample whose filename contains both the substrings \"120\" and \"A#\" we can find i"
"t easily with the following code:"
msgstr ""
"On peut même utiliser de multiples filtres en même temps. Par exemple, si on v"
"eut un sample dont le nom de fichier contient à la fois les sous-chaînes \"120\""
" et \"A#\", on peut le trouver facilement avec le code suivant :"

#: 03.7-Sample-Packs.md:124
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"A#\""
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"A#\""

#: 03.7-Sample-Packs.md:129
#, fuzzy
msgid "Finally, we're still free to add our usual opts to the call to `sample`:"
msgstr ""
"Enfin, on a toujours la possibilité d'ajouter nos options habituelles lors de "
"l'appel à `sample`:"

#: 03.7-Sample-Packs.md:131
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"Bb\", 1, lpf: 70, amp: 2"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"Bb\", 1, lpf: 70, amp: 2"

#: 03.7-Sample-Packs.md:136
msgid "Sources"
msgstr ""

#: 03.7-Sample-Packs.md:138
#, fuzzy
msgid ""
"The sample filter pre-arg system understands two types of information: sources"
" and filters. Sources are information used to create the list of potential can"
"didates. A source can take two forms:"
msgstr ""
"Le système de pré-argument de filtre de samples comprend deux types d'informat"
"ion : les sources et les filtres. Les sources sont des informations utilisées "
"pour créer la liste des candidats potentiels. Une source peut prendre deux for"
"mes :"

#: 03.7-Sample-Packs.md:142
#, fuzzy
msgid "\"/path/to/samples\" - a string representing a valid path to a directory"
msgstr "\"/path/to/samples\": une chaîne représentant un chemin valide vers un dossier"

#: 03.7-Sample-Packs.md:143
#, fuzzy
msgid "\"/path/to/samples/foo.wav\" - a string representing a valid path to a sample"
msgstr ""
"\"/path/to/samples/foo.wav\": une chaîne représentant un chemin valide vers un s"
"ample"

#: 03.7-Sample-Packs.md:145
#, fuzzy
msgid ""
"The `sample` fn will first gather all sources and use them to create a large l"
"ist of candidates. This list is constructed by first adding all valid paths an"
"d then by adding all the valid `.flac`, `.aif`, `.aiff`, `.wav`, `.wave` files"
" contained within the directories."
msgstr ""
"La fonction `sample` va d'abord rassembler toutes les sources et les utiliser "
"pour créer une grande liste de candidats. Cette liste est construite en ajouta"
"nt d'abord tous les chemins valides et puis en ajoutant tous les fichiers vali"
"des `.flac`, `.aif`, `.aiff`, `.wav`, et `.wave` contenus dans les dossiers."

#: 03.7-Sample-Packs.md:150
#, fuzzy
msgid "For example, take a look at the following code:"
msgstr "Par exemple, regardez le code suivant :"

#: 03.7-Sample-Packs.md:152
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"samps2 = \"/path/to/my/samples2/\"\n"
"path = \"/path/to/my/samples3/foo.wav\"\n"
"sample samps, samps2, path, 0"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"samps2 = \"/path/to/my/samples2/\"\n"
"path = \"/path/to/my/samples3/foo.wav\"\n"
"sample samps, samps2, path, 0"

#: 03.7-Sample-Packs.md:160
#, fuzzy
msgid ""
"Here, we're combining the contents of the samples within two directories and a"
"dding a specific sample. If `\"/path/to/my/samples/\"` contained 3 samples and `"
"\"/path/to/my/samples2/\"` contained 12, we'd have 16 potential samples to index"
" and filter (3 + 12 + 1)."
msgstr ""
"Ici nous combinons les contenus des samples de deux dossiers en y ajoutant un "
"sample en particulier. Si `\"/path/to/my/samples/\"` contient trois samples et `"
"\"/path/to/my/samples2/\"` en contient douze, on aurait seize samples potentiels"
" à indexer et filtrer (3 + 12 + 1)."

#: 03.7-Sample-Packs.md:165
#, fuzzy
msgid ""
"By default, only the sample files within a directory are gathered into the can"
"didate list. Sometimes you might have a number of nested folders of samples yo"
"u wish to search and filter within. You can therefore do a recursive search fo"
"r all samples within all subfolders of a particular folder by adding `**` to t"
"he end of the path:"
msgstr ""
"Par défaut, seuls les fichiers de samples d'un dossier sont rassemblés dans la"
" liste de candidats. Parfois vous pourriez avoir un certain nombre de dossiers"
" imbriqués dans lesquels vous aimeriez chercher et filtrer. Vous pouvez faire "
"une recherche récursive dans tous les samples de tous les sous-dossiers d'un d"
"ossier en particulier en ajoutant `**` à la fin du chemin :"

#: 03.7-Sample-Packs.md:171
#, no-wrap
msgid ""
"samps = \"/path/to/nested/samples/**\"\n"
"sample samps, 0"
msgstr ""
"samps = \"/path/to/nested/samples/**\"\n"
"sample samps, 0"

#: 03.7-Sample-Packs.md:176
#, fuzzy
msgid ""
"Take care though as searching through a very large set of folders may take a l"
"ong time. However, the contents of all folder sources are cached, so the delay"
" will only happen the first time."
msgstr ""
"Attention parce que chercher dans un très grand ensemble de dossiers peut pren"
"dre beaucoup de temps. Cela dit, le contenu des dossiers sources est mis en ca"
"che, donc le retard n'arrivera que la première fois."

#: 03.7-Sample-Packs.md:180
#, fuzzy
msgid ""
"Finally, note that the sources *must go first*. If no source is given, then th"
"e set of built-in samples will be selected as the default list of candidates t"
"o work with."
msgstr ""
"Enfin, notez que les sources doivent *être en premier*. Si aucune source n'est"
" donnée, alors l'ensemble de samples fourni par défaut sera pris comme liste d"
"es candidats."

#: 03.7-Sample-Packs.md:184
#, fuzzy
msgid "Filters"
msgstr "Filtres"

#: 03.7-Sample-Packs.md:186
#, fuzzy
msgid ""
"Once you have a list of candidates you may use the following filtering types t"
"o further reduce the selection:"
msgstr ""
"Une fois qu'on a une liste de candidats on peut utiliser les types de filtres "
"suivants pour réduire la sélection :"

#: 03.7-Sample-Packs.md:189
#, fuzzy
msgid ""
"`\"foo\"` Strings will filter on substring occurrence within file name (minus di"
"rectory path and extension)."
msgstr ""
"`\"foo\"`: les chaînes vont filtrer sur les occurrences de sous-chaîne dans le n"
"om du fichier (moins le chemin du dossier et l'extension)"

#: 03.7-Sample-Packs.md:190
#, fuzzy
msgid ""
"`/fo[oO]/` Regular Expressions will filter on pattern matching of file name (m"
"inus directory path and extension)."
msgstr ""
"`/fo[oO]/`: les expressions régulières filtrent sur des motifs du nom du fichi"
"er (moins le chemin du dossier et l'extension)"

#: 03.7-Sample-Packs.md:191
#, fuzzy
msgid ""
"`:foo` - Keywords will filter candidates on whether the keyword is a direct ma"
"tch of the filename (minus directory path and extension)."
msgstr ""
"`:foo`: les mots-clefs filtrent les candidats si le mot-clef correspond exacte"
"ment au nom du fichier (moins le chemin du dossier et l'extension)"

#: 03.7-Sample-Packs.md:192
#, fuzzy
msgid ""
"`lambda{|a| ... }` - Procs with one argument will be treated as a candidate fi"
"lter or generator function. It will be passed the list of current candidates a"
"nd must return a new list of candidates (a list of valid paths to sample files"
")."
msgstr ""
"`lambda{|a| ... }`: les procédures avec un argument seront traitées comme un f"
"iltre de candidat ou une fonction génératrice. On lui passera la liste des can"
"didats actuels et elle doit retourner une nouvelle liste de candidats (une lis"
"te de chemins valides vers des fichiers de samples)"

#: 03.7-Sample-Packs.md:193
#, fuzzy
msgid ""
"`1` - Numbers will select the candidate with that index (wrapping round like a"
" ring if necessary)."
msgstr ""
"`1`: Les nombres sélectionnent le candidat avec cet index (en bouclant comme u"
"n anneau si nécessaire)"

#: 03.7-Sample-Packs.md:195
#, fuzzy
msgid ""
"For example, we can filter over all the samples in a directory containing the "
"string `\"foo\"` and play the first matching sample at half speed:"
msgstr ""
"Par exemple on peut filtrer tous les samples d'un dossier qui contiennent la c"
"haîne \"foo\" et jouer le premier sample correspondant deux fois moins vite :"

#: 03.7-Sample-Packs.md:199
#, no-wrap
msgid "sample \"/path/to/samples\", \"foo\", rate: 0.5"
msgstr "sample \"/path/to/samples\", \"foo\", rate: 0.5"

#: 03.7-Sample-Packs.md:203
#, fuzzy
msgid ""
"See the help for `sample` for many detailed usage examples. Note that the orde"
"ring of the filters is honoured."
msgstr ""
"Regardez l'aide pour `sample`, elle contient plusieurs exemples détaillés d'ut"
"ilisation. Notez que l'ordre des filtres est respecté."

#: 03.7-Sample-Packs.md:206
msgid "Composites"
msgstr ""

#: 03.7-Sample-Packs.md:208
#, fuzzy
msgid ""
"Finally, you may use lists wherever you may place a source or filter. The list"
" will be automatically flattened and the contents will be treated as regular s"
"ources and filters. Therefore the following calls to `sample` are semantically"
" equivalent:"
msgstr ""
"Enfin vous pouvez utiliser des listes partout où on peut placer une source ou "
"un filtre. La liste sera automatiquement aplatie et son contenu sera traité co"
"mme des sources et filtres. Ainsi les appels suivants à `sample` sont sémantiq"
"uement équivalents :"

#: 03.7-Sample-Packs.md:213
#, no-wrap
msgid ""
"sample \"/path/to/dir\", \"100\", \"C#\"\n"
"sample [\"/path/to/dir\", \"100\", \"C#\"]\n"
"sample \"/path/to/dir\", [\"100\", \"C#\"]\n"
"sample [\"/path/to/dir\", [\"100\", [\"C#\"]]]"
msgstr ""
"sample \"/path/to/dir\", \"100\", \"C#\"\n"
"sample [\"/path/to/dir\", \"100\", \"C#\"]\n"
"sample \"/path/to/dir\", [\"100\", \"C#\"]\n"
"sample [\"/path/to/dir\", [\"100\", [\"C#\"]]]"

#: 03.7-Sample-Packs.md:220
#, fuzzy
msgid "Wrapping Up"
msgstr "Résumé"

#: 03.7-Sample-Packs.md:222
#, fuzzy
msgid ""
"This was an advanced section for people that need real power to manipulate and"
" use sample packs. If most of this section didn't make too much sense, don't w"
"orry. It's likely you don't need any of this functionality just yet. However, "
"you'll know when you do need it and you can come back and re-read this when yo"
"u start working with large directories of samples."
msgstr ""
"C'était une section avancée pour les gens qui ont besoin de vraie puissance po"
"ur manipuler et utiliser des paquets de samples. Si la plupart de cette sectio"
"n n'avait pas trop de sens pour vous, ne vous inquiétez pas. Vous n'avez proba"
"blement pas encore besoin de cette fonctionnalité. Mais vous vous rendrez comp"
"te quand vous en aurez besoin et vous pourrez revenir et relire ceci quand vou"
"s commencerez à travailler avec de grands dossiers de samples."

#: 04-Randomisation.md:1
msgid "4 Randomisation"
msgstr ""

#: 04-Randomisation.md:3
msgid "Randomisation"
msgstr ""

#: 04-Randomisation.md:5
#, fuzzy
msgid ""
"A great way to add some interest into your music is using some random numbers."
" Sonic Pi has some great functionality for adding randomness to your music, bu"
"t before we start we need to learn a shocking truth: in Sonic Pi *random is no"
"t truly random*. What on earth does this mean? Well, let's see."
msgstr ""
"Un grand moyen d'ajouter de l'intérêt à votre musique est d'utiliser quelques "
"nombres aléatoires (\"random\"). Sonic Pi a des fonctions remarquables pour ajou"
"ter de l'aléatoire à votre musique, mais avant de commencer, nous devons appre"
"ndre une vérité choquante : dans Sonic Pi *aléatoire n'est pas vraiment aléato"
"ire*. Qu'est-ce qu'ici-bas cela signifie ? Eh bien, voyons-le."

#: 04-Randomisation.md:11
#, fuzzy
msgid "Repeatability"
msgstr "Répétabilité"

#: 04-Randomisation.md:13
#, fuzzy
msgid ""
"A really useful random function is `rrand` which will give you a random value "
"between two numbers - a *min* and a *max*. (`rrand` is short for ranged random"
"). Let's try playing a random note:"
msgstr ""
"Une fonction vraiment utile est `rrand` qui vous donnera une valeur aléatoire "
"comprise entre deux nombres - un *min* et un *max*. (`rrand` est l'abréviation"
" de \"ranged random\"). Essayons de jouer une note aléatoire :"

#: 04-Randomisation.md:17
#, no-wrap
#, fuzzy
msgid "play rrand(50, 95)"
msgstr "play rrand(50, 100)"

#: 04-Randomisation.md:21
#, fuzzy
msgid ""
"Ooh, it played a random note. It played note `83.7527`. A nice random note bet"
"ween 50 and 95. Woah, wait, did I just predict the exact random note you got t"
"oo? Something fishy is going on here. Try running the code again. What? It cho"
"se `83.7527` again? That can't be random!"
msgstr ""
"Ooh, une note aléatoire a été jouée. La note `77.4407` a été jouée - une note "
"aléatoire sympathique entre 50 et 100. Wooh , attendez, est-ce que je viens ju"
"ste de prédire exactement la note que vous avez obtenue ? Quelque chose de lou"
"che se passe ici. Essayez d'exécuter le code une nouvelle fois. Quoi ? `77.440"
"7` a encore été choisi ? Ce ne peut être aléatoire !"

#: 04-Randomisation.md:26
#, fuzzy
msgid ""
"The answer is that it is not truly random, it's pseudo-random. Sonic Pi will g"
"ive you random-like numbers in a repeatable manner. This is very useful for en"
"suring that the music you create on your machine sounds identical on everybody"
" else's machine - even if you use some randomness in your composition."
msgstr ""
"La réponse est que ce n'est pas vraiment aléatoire, c'est pseudo-aléatoire. So"
"nic Pi vous donne une suite d'un semblant de nombres aléatoires de manière rep"
"roductible. C'est très utile pour s'assurer que la musique que vous avez créée"
" sur votre machine sonnera de façon identique sur n'importe quelle autre machi"
"ne - même si vous utilisez de l'aléatoire dans votre composition."

#: 04-Randomisation.md:32
#, fuzzy
msgid ""
"Of course, in a given piece of music, if it 'randomly' chose `83.7527` every t"
"ime, then it wouldn't be very interesting. However, it doesn't. Try the follow"
"ing:"
msgstr ""
"Bien sûr, dans un morceau de musique donné, si `77.4407` était choisi 'aléatoi"
"rement' à chaque fois, ce ne serait pas très intéressant. Ce n'est cependant p"
"as le cas. Essayez ce qui suit :"

#: 04-Randomisation.md:36
#, no-wrap
#, fuzzy
msgid ""
"loop do\n"
"  play rrand(50, 95)\n"
"  sleep 0.5\n"
"end "
msgstr ""
"loop do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end "

#: 04-Randomisation.md:43
#, fuzzy
msgid ""
"Yes! It finally sounds random. Within a given *run* subsequent calls to random"
" functions will return random values. However, the next run will produce exact"
"ly the same sequence of random values and sound exactly the same. It's as if a"
"ll Sonic Pi code went back in time to exactly the same point every time the Ru"
"n button was pressed. It's the Groundhog Day of music synthesis!"
msgstr ""
"Oui ! ça sonne aléatoire finalement. A l'intérieur d'un *run* donné, des appel"
"s successifs à des fonction aléatoires retournent des valeurs aléatoires. Cepe"
"ndant, une nouvelle exécution produira exactement la même séquence de valeurs "
"aléatoires et sonnera exactement pareil. C'est comme si tout le code de Sonic "
"Pi revenait en arrière exactement au même point de départ chaque fois que le b"
"outon \"Run\" était pressé. C'est le jour de la marmotte de la synthèse musicale"
"."

#: 04-Randomisation.md:50
#, fuzzy
msgid "Haunted Bells"
msgstr "Cloches hantées"

#: 04-Randomisation.md:52
#, fuzzy
msgid ""
"A lovely illustration of randomisation in action is the haunted bells example "
"which loops the `:perc_bell` sample with a random rate and sleep time between "
"bell sounds:"
msgstr ""
"Une agréable illustration de la randomisation en action est l'exemple des cloc"
"hes hantées en faisant boucler l'échantillon `:perc_bell` avec une vitesse et "
"un temps de repos aléatoires entre les sons de cloche :"

#: 04-Randomisation.md:56
#, no-wrap
msgid ""
"loop do\n"
"  sample :perc_bell, rate: (rrand 0.125, 1.5)\n"
"  sleep rrand(0.2, 2)\n"
"end"
msgstr ""
"loop do\n"
"  sample :perc_bell, rate: (rrand 0.125, 1.5)\n"
"  sleep rrand(0.2, 2)\n"
"end"

#: 04-Randomisation.md:63
#, fuzzy
msgid "Random cutoff"
msgstr "Limite (\"cutoff\") aléatoire"

#: 04-Randomisation.md:65
#, fuzzy
msgid ""
"Another fun example of randomisation is to modify the cutoff of a synth random"
"ly. A great synth to try this out on is the `:tb303` emulator:"
msgstr ""
"Un autre exemple sympathique de randomisation est de modifier la limite d'un s"
"on de synthé aléatoirement. Un synthé super pour essayer cela est l'émulateur "
"du `:tb303`:"

#: 04-Randomisation.md:69
#, no-wrap
msgid ""
"use_synth :tb303\n"
"loop do\n"
"  play 50, release: 0.1, cutoff: rrand(60, 120)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_synth :tb303\n"
"loop do\n"
"  play 50, release: 0.1, cutoff: rrand(60, 120)\n"
"  sleep 0.125\n"
"end"

#: 04-Randomisation.md:78
#, fuzzy
msgid "Random seeds"
msgstr "Tête de série aléatoire"

#: 04-Randomisation.md:80
#, fuzzy
msgid ""
"So, what if you don't like this particular sequence of random numbers Sonic Pi"
" provides? Well it's totally possible to choose a different starting point via"
" `use_random_seed`. The default seed happens to be 0, so choose a different se"
"ed for a different random experience!"
msgstr ""
"Alors que faire si vous n'aimez pas cette particulière séquence de nombres alé"
"atoires que fournit Sonic Pi ? Eh bien, c'est tout à fait possible de choisir "
"un point de départ via `use_random_seed`. Il est établi que la tête de série p"
"ar défaut est 0, aussi choisissez une autre tête de série pour une expérience "
"aléatoire différente !"

#: 04-Randomisation.md:85
#, fuzzy
msgid "Consider the following:"
msgstr "Envisagez ce qui suit :"

#: 04-Randomisation.md:87
#, no-wrap
msgid ""
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"
msgstr ""
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"

#: 04-Randomisation.md:94
#, fuzzy
msgid ""
"Every time you run this code, you'll hear the same sequence of 5 notes. To get"
" a different sequence simply change the seed:"
msgstr ""
"Chaque fois que vous exécuterez ce code, vous entendrez la même séquence de 5 "
"notes. Pour obtenir une séquence différente, changez simplement la tête de sér"
"ie :"

#: 04-Randomisation.md:97
#, no-wrap
msgid ""
"use_random_seed 40\n"
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"
msgstr ""
"use_random_seed 40\n"
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"

#: 04-Randomisation.md:105
#, fuzzy
msgid ""
"This will produce a different sequence of 5 notes. By changing the seed and li"
"stening to the results you can find something that you like - and when you sha"
"re it with others, they will hear exactly what you heard too."
msgstr ""
"Ceci va produire une séquence différente de 5 notes. En changeant le tête de s"
"érie et en écoutant les résultats, vous pouvez trouver quelque chose que vous "
"aimez - et quand vous le partagerez avec d'autres, ils entendront exactement c"
"e que vous avez aussi écouté."

#: 04-Randomisation.md:110
#, fuzzy
msgid "Let's have a look at some other useful random functions."
msgstr "Jetons un œil sur d'autres fonctions de randomisation utiles."

#: 04-Randomisation.md:113
#, fuzzy
msgid "choose"
msgstr "Choix (\"choose\")"

#: 04-Randomisation.md:115
#, fuzzy
msgid ""
"A very common thing to do is to choose an item randomly from a list of known i"
"tems. For example, I may want to play one note from the following: 60, 65 or 7"
"2. I can achieve this with `choose` which lets me choose an item from a list. "
"First, I need to put my numbers in a list which is done by wrapping them in sq"
"uare brackets and separating them with commas: `[60, 65, 72]`. Next I just nee"
"d to pass them to `choose`:"
msgstr ""
"Une chose très commune est de choisir un item aléatoirement dans une liste d'i"
"tems connus. Par exemple, je peux vouloir jouer une note parmi les suivantes :"
" 60, 65 ou 72. Je peux y arriver avec `choose` qui me choisit un item dans une"
" liste. En premier, je dois mettre mes nombres dans une liste, ce qui est réal"
"isé en les encadrant entre crochets et en les séparant avec des virgules : `[6"
"0, 65, 72]`. Ensuite, j'ai juste besoin de leur passer `choose`:"

#: 04-Randomisation.md:122
#, no-wrap
msgid "choose([60, 65, 72])"
msgstr "choose([60, 65, 72])"

#: 04-Randomisation.md:126
#, fuzzy
msgid "Let's hear what that sounds like:"
msgstr "Écoutons comment cela sonne :"

#: 04-Randomisation.md:128
#, no-wrap
msgid ""
"loop do\n"
"  play choose([60, 65, 72])\n"
"  sleep 1\n"
"end"
msgstr ""
"loop do\n"
"  play choose([60, 65, 72])\n"
"  sleep 1\n"
"end"

#: 04-Randomisation.md:135
msgid "rrand"
msgstr ""

#: 04-Randomisation.md:137
#, fuzzy
msgid ""
"We've already seen `rrand`, but let's run over it again. It returns a random n"
"umber between two values exclusively. That means it will never return either t"
"he top or bottom number - always something in between the two. The number will"
" always be a float - meaning it's not a whole number but a fraction of a numbe"
"r. Examples of floats returned by `rrand(20, 110)`:"
msgstr ""
"Nous avons déja vu `rrand`, mais examinons-le encore. Il retourne un nombre al"
"éatoire entre 2 valeurs exclues. Cela signifie qu'il ne retournera jamais soit"
" la borne basse, soit la borne haute - toujours quelque chose entre les deux. "
"Le nombre sera toujours un nombre flottant - ce qui signifie que ce n'est pas "
"un nombre entier, mais une fraction de nombre. Exemple de flottants retournés "
"par `rrand(20, 110)`:"

#: 04-Randomisation.md:148
msgid "rrand_i"
msgstr ""

#: 04-Randomisation.md:150
#, fuzzy
msgid ""
"Occasionally you'll want a whole random number, not a float. This is where `rr"
"and_i` comes to the rescue. It works similarly to `rrand` except it may return"
" the min and max values as potential random values (which means it's inclusive"
" rather than exclusive of the range). Examples of numbers returned by `rrand_i"
"(20, 110)` are:"
msgstr ""
"Occasionnellement, vous désirez un nombre entier aléatoire, pas un flottant. C"
"'est là que `rrand_i` arrive à la rescousse. Il fonctionne de façon similaire "
"à `rrand` sauf qu'il peut retourner potentiellement les valeurs minimales et m"
"aximales comme valeurs aléatoires (ce qui signifie que c'est inclusif plutôt q"
"u'exclusif des bornes). Exemple de nombres retournés par `rrand_i(20, 110)`:"

#: 04-Randomisation.md:160
msgid "rand"
msgstr ""

#: 04-Randomisation.md:162
#, fuzzy
msgid ""
"This will return a random float between 0 (inclusive) and the max value you sp"
"ecify (exclusive). By default it will return a value between 0 and one. It's t"
"herefore useful for choosing random `amp:` values:"
msgstr ""
"Cette fonction va retourner un flottant aléatoire entre 0 (inclus) et la valeu"
"r maximale que vous spécifiez (exclue). Par défaut, elle retourne une valeur e"
"ntre 0 et 1. C'est par conséquent utile pour choisir une valeur de `amp:` aléa"
"toire :"

#: 04-Randomisation.md:167
#, no-wrap
msgid ""
"loop do\n"
"  play 60, amp: rand\n"
"  sleep 0.25\n"
"end"
msgstr ""
"loop do\n"
"  play 60, amp: rand\n"
"  sleep 0.25\n"
"end"

#: 04-Randomisation.md:174
msgid "rand_i"
msgstr ""

#: 04-Randomisation.md:176
#, fuzzy
msgid ""
"Similar to the relationship between `rrand_i` and `rrand`, `rand_i` will retur"
"n a random whole number between 0 and the max value you specify."
msgstr ""
"Similaire à la relation entre `rrand_i` et `rrand`, `rand_i` retournera un nom"
"bre entier compris entre 0 et la valeur maximale que vous spécifierez."

#: 04-Randomisation.md:179
#, fuzzy
msgid "dice"
msgstr "dice (dé)"

#: 04-Randomisation.md:181
#, fuzzy
msgid ""
"Sometimes you want to emulate a dice throw - this is a special case of `rrand_"
"i` where the lower value is always 1. A call to `dice` requires you to specify"
" the number of sides on the dice. A standard dice has 6 sides, so `dice(6)` wi"
"ll act very similarly - returning values of either 1, 2, 3, 4, 5, or 6. Howeve"
"r, just like fantasy role-play games, you might find value in a 4 sided dice, "
"or a 12 sided dice, or a 20 sided dice - perhaps even a 120 sided dice!"
msgstr ""
"Quelquefois, vous souhaitez émuler un jet de dés - c'est un cas particulier de"
" `rrand_i` où la valeur minimale est toujours 1. Un appel à `dice` nécessite q"
"ue vous spécifiez le nombre de faces du dé. Un dé standard a 6 faces, donc `di"
"ce(6)` agira de manière très similaire - retournant l'une des valeurs 1, 2, 3,"
" 4, 5, ou 6. Cependant, juste comme dans des jeux de rôle fantaisistes, vous p"
"ourriez trouver des dés à 4 faces, ou à 12 faces, peut-être même à 120 faces !"

#: 04-Randomisation.md:189
msgid "one_in"
msgstr ""

#: 04-Randomisation.md:191
#, fuzzy
msgid ""
"Finally you may wish to emulate throwing the top score of a dice such as a 6 i"
"n a standard dice. `one_in` therefore returns true with a probability of one i"
"n the number of sides on the dice. Therefore `one_in(6)` will return true with"
" a probability of 1 in 6 or false otherwise. True and false values are very us"
"eful for `if` statements which we will cover in a subsequent section of this t"
"utorial."
msgstr ""
"Finalement, vous pouvez souhaiter simuler la chance que vous avez de tomber su"
"r le nombre le plus élevé d'un dé, soit 6 pour un dé standard. Ainsi `one_in` "
"retourne vrai (\"true\") avec une probabilité de 1 sur le nombre de faces du dé."
" Par conséquent `one_in(6)` retournera vrai avec une probabilité de 1 sur 6 ou"
" faux (\"false\") autrement. Les valeurs True et False sont très utiles pour les"
" ordres `if` que nous couvrirons dans une section suivante de ce tutoriel."

#: 04-Randomisation.md:198
#, fuzzy
msgid "Now, go and jumble up your code with some randomness!"
msgstr "Maintenant allez et introduisez de l'aléatoire dans votre code !"

#: 05-Programming-Structures.md:1
#, fuzzy
msgid "5 Programming Structures"
msgstr "5 Structures de Programmations"

#: 05-Programming-Structures.md:3
#, fuzzy
msgid "Programming Structures"
msgstr "Structures de Programmation"

#: 05-Programming-Structures.md:5
#, fuzzy
msgid ""
"Now that you've learned the basics of creating sounds with `play` and `sample`"
" and creating simple melodies and rhythms by `sleep`ing between sounds, you mi"
"ght be wondering what else the world of code can offer you..."
msgstr ""
"Maintenant que vous avez appris les bases de la création des sons avec `play` "
"et `sample` et la création de mélodies simples et de rythmes avec `sleep` entr"
"e les sons, vous pourriez être en train de vous demander ce que le monde du co"
"de peut vous offrir en plus..."

#: 05-Programming-Structures.md:10
#, fuzzy
msgid ""
"Well, you're in for an exciting treat! It turns out that basic programming str"
"uctures such as looping, conditionals, functions and threads give you amazingl"
"y powerful tools to express your musical ideas."
msgstr ""
"Eh bien, vous y êtes et pour un voyage passionnant ! Il ressort que les struct"
"ures de programmation de base telles les boucles, les conditionnels, les fonct"
"ions, les fils (\"threads\") vont vous procurer des outils puissants et étonnant"
"s pour exprimer vos idées musicales."

#: 05-Programming-Structures.md:14
#, fuzzy
msgid "Let's get stuck in with the basics..."
msgstr "Plongeons dans les bases..."

#: 05.1-Blocks.md:1
#, fuzzy
msgid "5.1 Blocks"
msgstr "5.1 Blocs"

#: 05.1-Blocks.md:3
#, fuzzy
msgid "Blocks"
msgstr "Blocs"

#: 05.1-Blocks.md:5
#, fuzzy
msgid ""
"A structure you'll see a lot in Sonic Pi is the block. Blocks allow us to do u"
"seful things with large chunks of code. For example, with synth and sample par"
"ameters we were able to change something that happened on a single line. Howev"
"er, sometimes we want to do something meaningful to a number of lines of code."
" For example, we may wish to loop it, to add reverb to it, to only run it 1 ti"
"me out of 5, etc. Consider the following code:"
msgstr ""
"Une structure que vous verrez souvant dans Sonic Pi est le bloc. Les blocs vou"
"s permettent de faire des choses utiles avec de grands morceaux de code. Par e"
"xemple, avec les paramètres des synthés et des échantillons, nous sommes capab"
"les de changer sur une seule ligne quelque chose qui s'est passé. Cependant, n"
"ous souhaitons quelquefois faire quelque chose de significatif sur un certain "
"nombre de lignes de code. Par exemple, nous souhaiterions les faire boucler, l"
"eur ajouter de la réverbération, les exécuter seulement une fois sur 5, etc. C"
"onsidérez le code suivant :"

#: 05.1-Blocks.md:13
#, no-wrap
msgid ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_plip\n"
"sleep 0.5\n"
"play 62"
msgstr ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_plip\n"
"sleep 0.5\n"
"play 62"

#: 05.1-Blocks.md:21
#, fuzzy
msgid ""
"To do something with a chunk of code, we need to tell Sonic Pi where the code "
"block *starts* and where it *ends*. We use `do` for start and `end` for end. F"
"or example:"
msgstr ""
"Pour faire quelque chose avec un morceau de code, nous devons dire à Sonic Pi "
"où *commence* le bloc et où il *finit*. Nous utilisons `do` pour le début et `"
"end` pour la fin. Par exemple :"

#: 05.1-Blocks.md:25
#, no-wrap
msgid ""
"do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 05.1-Blocks.md:35
#, fuzzy
msgid ""
"However, this isn't yet complete and won't work (try it and you'll get an erro"
"r) as we haven't told Sonic Pi what we want to do with this *do/end block*. We"
" tell Sonic Pi this by writing some special code before the `do`. We'll see a "
"number of these special pieces of code later on in this tutorial. For now, it'"
"s important to know that wrapping your code within `do` and `end` tells Sonic "
"Pi you wish to do something special with that chunk of code."
msgstr ""
"Toutefois, ce n'est pas encore complet et ne fonctionnera pas (essayez-le et v"
"ous obtiendrez une erreur) puique nous n'avons pas dit à Sonic Pi ce que nous "
"voulions faire avec ce *bloc do/end*. On le dit à Sonic Pi en écrivant du code"
" spécial avant le `do`. Nous verrons un certain nombre de ces bouts de code sp"
"éciaux plus tard dans ce tutoriel. Pour l'instant, il est important de savoir "
"que d'encadrer votre code entre `do` et `end` dit à Sonic Pi que vous voulez f"
"aire quelque chose de spécial avec ce morceau de code."

#: 05.2-Iteration-and-Loops.md:1
#, fuzzy
msgid "5.2 Iteration and Loops"
msgstr "5.2 Itérations et Boucles"

#: 05.2-Iteration-and-Loops.md:3
#, fuzzy
msgid "Iteration and Loops"
msgstr "Itérations et Boucles"

#: 05.2-Iteration-and-Loops.md:5
#, fuzzy
msgid ""
"So far we've spent a lot of time looking at the different sounds you can make "
"with `play` and `sample` blocks. We've also learned how to trigger these sound"
"s through time using `sleep`."
msgstr ""
"Jusqu'à maintenant nous avons passé beaucoup de temps à rechercher les différe"
"nts sons que vous pouvez faire avec des blocs de `play` et de `sample`. Nous a"
"vons aussi appris comment déclencher ces sons dans le temps en utilisant `slee"
"p`."

#: 05.2-Iteration-and-Loops.md:9
#, fuzzy
msgid ""
"As you've probably found out, there's a *lot* of fun you can have with these b"
"asic building blocks. However, a whole new dimension of fun opens up when you "
"start using the power of code to structure your music and compositions. In the"
" next few sections we'll explore some of these powerful new tools. First up is"
" iteration and loops."
msgstr ""
"Comme vous vous en êtes probablement rendu compte, il y a *beaucoup* de plaisi"
"r à avoir avec la construction de ces blocs de base. Toutefois, une dimension "
"totalement nouvelle de plaisir se découvre quand vous commencez à utiliser la "
"puissance du code pour structurer votre musique et vos compositions. Dans les "
"quelques sections suivantes, nous allons explorer quelques uns de ces nouveaux"
" outils puissants. En premier, découvrons l'itération et les boucles."

#: 05.2-Iteration-and-Loops.md:15
#, fuzzy
msgid "Repetition"
msgstr "Répétition"

#: 05.2-Iteration-and-Loops.md:17
#, fuzzy
msgid ""
"Have you written some code you'd like to repeat a few times? For example, you "
"might have something like this:"
msgstr ""
"Avez-vous écrit du code que vous aimeriez répéter quelques fois ? Par exemple,"
" vous pourriez avoir quelque chose comme ceci :"

#: 05.2-Iteration-and-Loops.md:20
#, no-wrap
msgid ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"
msgstr ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"

#: 05.2-Iteration-and-Loops.md:29
#, fuzzy
msgid ""
"What if we wished to repeat this 3 times? Well, we could do something simple a"
"nd just copy and paste it three times:"
msgstr ""
"Que faire si nous voulions répéter ceci 3 fois ? Eh bien, nous pourrions faire"
" simple et juste le copier et le coller trois fois :"

#: 05.2-Iteration-and-Loops.md:32
#, no-wrap
msgid ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"
msgstr ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"

#: 05.2-Iteration-and-Loops.md:55
#, fuzzy
msgid ""
"Now that's a lot of code! What happens if you want to change the sample to `:e"
"lec_plip`? You're going to have to find all the places with the original `:ele"
"c_blup` and switch them over. More importantly, what if you wanted to repeat t"
"he original piece of code 50 times or 1000? Now that would be a lot of code, a"
"nd a lot of lines of code to alter if you wanted to make a change."
msgstr ""
"Maintenant, c'est beaucoup de code ! Que se passe-t-il si nous voulions change"
"r l'échantillon en `:elec_plip` ? Vous aller devoir trouver tous les endroits "
"avec l'original `:elec_blup` et les modifier un par un. De façon plus importan"
"te, que faire si vous voulez répéter le bout de code original 50 fois ou 1000 "
"fois ? Ça ferait alors beaucoup de code, et beaucoup de lignes de code à modif"
"ier si vous vouliez faire un changement."

#: 05.2-Iteration-and-Loops.md:62
#, fuzzy
msgid "Iteration"
msgstr "Itération"

#: 05.2-Iteration-and-Loops.md:64
#, fuzzy
msgid ""
"In fact, repeating the code should be as easy as saying *do this three times*."
" Well, it pretty much is. Remember our old friend the code block? We can use i"
"t to mark the start and end of the code we'd like to repeat three times. We th"
"en use the special code `3.times`. So, instead of writing *do this three times"
"*, we write `3.times do` - that's not too hard. Just remember to write `end` a"
"t the end of the code you'd like to repeat:"
msgstr ""
"En fait, répéter le code devrait être aussi facile que de dire *fais ceci troi"
"s fois*. Eh bien, c'est presque cela. Souvenez-vous de notre vieil ami le bloc"
" de code. Nous pouvons l'utiliser pour marquer le début et la fin du code que "
"nous aimerions répéter trois fois. Nous utilisons alors le code spécial `3.tim"
"es`. Ainsi, à la place d'écrire *fais cela trois fois*, nous écrivons `3.times"
" do` - Ce n'est pas trop dur. Rappelez-vous juste d'écrire `end` à la fin du c"
"ode que vous devez répéter :"

#: 05.2-Iteration-and-Loops.md:72
#, no-wrap
msgid ""
"3.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_blup\n"
"  sleep 0.5\n"
"  play 62\n"
"  sleep 0.25\n"
"end"
msgstr ""
"3.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_blup\n"
"  sleep 0.5\n"
"  play 62\n"
"  sleep 0.25\n"
"end"

#: 05.2-Iteration-and-Loops.md:83
#, fuzzy
msgid ""
"Now isn't that much neater than cutting and pasting! We can use this to create"
" lots of nice repeating structures:"
msgstr ""
"Alors, est-ce que ce n'est pas plus propre que de copier-coller ! Nous pouvons"
" l'utiliser pour créér beaucoup de chouettes structures répétitives."

#: 05.2-Iteration-and-Loops.md:86
#, no-wrap
msgid ""
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end\n"
"8.times do\n"
"  play 55, release: 0.2\n"
"  sleep 0.25\n"
"end\n"
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end"
msgstr ""
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end\n"
"8.times do\n"
"  play 55, release: 0.2\n"
"  sleep 0.25\n"
"end\n"
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end"

#: 05.2-Iteration-and-Loops.md:103
#, fuzzy
msgid "Nesting Iterations"
msgstr "Imbrication d'itérations"

#: 05.2-Iteration-and-Loops.md:105
#, fuzzy
msgid ""
"We can put iterations inside other iterations to create interesting patterns. "
"For example:"
msgstr ""
"Nous pouvons mettre des itérations à l'intérieur d'autres itérations pour créé"
"r des motifs intéressants. Par exemple :"

#: 05.2-Iteration-and-Loops.md:108
#, no-wrap
msgid ""
"4.times do\n"
"  sample :drum_heavy_kick\n"
"  2.times do\n"
"    sample :elec_blip2, rate: 2\n"
"    sleep 0.25\n"
"  end\n"
"  sample :elec_snare\n"
"  4.times do\n"
"    sample :drum_tom_mid_soft\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"4.times do\n"
"  sample :drum_heavy_kick\n"
"  2.times do\n"
"    sample :elec_blip2, rate: 2\n"
"    sleep 0.25\n"
"  end\n"
"  sample :elec_snare\n"
"  4.times do\n"
"    sample :drum_tom_mid_soft\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 05.2-Iteration-and-Loops.md:123
#, fuzzy
msgid "Looping"
msgstr "Bouclage"

#: 05.2-Iteration-and-Loops.md:125
#, fuzzy
msgid ""
"If you want something to repeat a lot of times, you might find yourself using "
"really large numbers such as `1000.times do`. In this case, you're probably be"
"tter off asking Sonic Pi to repeat forever (at least until you press the stop "
"button!). Let's loop the amen break forever:"
msgstr ""
"Si vous voulez répéter quelque chose un grand nombre de fois, vous pourriez vo"
"us trouvez en situation d'utiliser des nombres vraiment grands comme `1000.tim"
"es do`. Dans ce cas, vous feriez probablement mieux de demander à Sonic Pi de "
"répéter à jamais (au moins jusqu'à ce que vous pressiez le bouton stop !). Bou"
"clons l'échantillon amen à jamais :"

#: 05.2-Iteration-and-Loops.md:130
#, no-wrap
msgid ""
"loop do\n"
"  sample :loop_amen\n"
"  sleep sample_duration :loop_amen\n"
"end"
msgstr ""
"loop do\n"
"  sample :loop_amen\n"
"  sleep sample_duration :loop_amen\n"
"end"

#: 05.2-Iteration-and-Loops.md:137
#, fuzzy
msgid ""
"The important thing to know about loops is that they act like black holes for "
"code. Once the code enters a loop it can never leave until you press stop - it"
" will just go round and round the loop forever. This means if you have code af"
"ter the loop you will *never* hear it. For example, the cymbal after this loop"
" will never play:"
msgstr ""
"La chose importante à savoir à propos des boucles est qu'elles se comportent c"
"omme des trous noirs pour le code. Une fois que le code est entré dans une bou"
"cle, il ne peut pas en sortir tant que vous n'avez pas pressé stop - il va jus"
"te tourner en rond dans la boucle à jamais. Ce qui signifie que si vous avez d"
"u code après la boucle, vous ne l'entendrez *jamais*. Par exemple, la cymbale "
"suivant cette boucle ne sera jamais jouée :"

#: 05.2-Iteration-and-Loops.md:143
#, no-wrap
msgid ""
"loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"sample :drum_cymbal_open"
msgstr ""
"loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"sample :drum_cymbal_open"

#: 05.2-Iteration-and-Loops.md:152
#, fuzzy
msgid "Now, get structuring your code with iteration and loops!"
msgstr "Maintenant, structurez votre code avec des itérations et des boucles !"

#: 05.3-Conditionals.md:1
#, fuzzy
msgid "5.3 Conditionals"
msgstr "5.3 Conditionnels"

#: 05.3-Conditionals.md:3
#, fuzzy
msgid "Conditionals"
msgstr "Conditionnels"

#: 05.3-Conditionals.md:5
#, fuzzy
msgid ""
"A common thing you'll likely find yourself wanting to do is to not only play a"
" random note (see the previous section on randomness) but also make a random d"
"ecision and based on the outcome run some code or some other code. For example"
", you might want to randomly play a drum or a cymbal. We can achieve this with"
" an `if` statement."
msgstr ""
"Une situation commune dans laquelle vous vous trouverez probablement est de no"
"n seulement jouer une note aléatoire (voir la précédente section sur l'aléatoi"
"re) mais de prendre une décision aléatoire basée sur le résultat de l'exécutio"
"n d'un code ou de tel autre code. Par exemple, vous pourriez vouloir jouer alé"
"atoirement un tambour ou une cymbale. Nous pouvons y parvenir avec un ordre `i"
"f` (si)."

#: 05.3-Conditionals.md:11
#, fuzzy
msgid "Flipping a Coin"
msgstr "Pile ou Face"

#: 05.3-Conditionals.md:13
#, fuzzy
msgid ""
"So, let's flip a coin: if it's heads, play a drum, if it's tails, play a cymba"
"l. Easy. We can emulate a coin flip with our `one_in` function (introduced in "
"the section on randomness) specifying a probability of 1 in 2: `one_in(2)`. We"
" can then use the result of this to decide between two pieces of code, the cod"
"e to play the drum and the code to play the cymbal:"
msgstr ""
"Ainsi, faisons sauter une pièce : si c'est pile, joue un tambour, si c'est fac"
"e, joue une cymbale. Facile. Nous pouvons émuler le saut d'une pièce avec notr"
"e fonction `one_in` (introduite dans la section traitant de l'aléatoire) en sp"
"écifiant une probabilité de 1 sur 2 : `one_in(2)`. Nous pouvons alors en utili"
"ser le résultat pour décider entre deux bouts de code, le code pour jouer le t"
"ambour et le code pour jouer la cymbale :"

#: 05.3-Conditionals.md:20
#, no-wrap
msgid ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"  end\n"
"  \n"
"  sleep 0.5\n"
"  \n"
"end"
msgstr ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"  end\n"
"  \n"
"  sleep 0.5\n"
"  \n"
"end"

#: 05.3-Conditionals.md:34
#, fuzzy
msgid "Notice that `if` statements have three parts:"
msgstr "Notez que les ordres `if` ont trois parties :"

#: 05.3-Conditionals.md:36
#, fuzzy
msgid "The question to ask"
msgstr "La question à poser"

#: 05.3-Conditionals.md:37
#, fuzzy
msgid "The first choice of code to run (if the answer to the question is yes)"
msgstr "Le premier choix de code à exécuter (si la réponse à la question est oui)"

#: 05.3-Conditionals.md:38
#, fuzzy
msgid "The second choice of code to run (if the answer to the question is no)"
msgstr "Le second choix de code à exécuter (si la réponse à la question est non)"

#: 05.3-Conditionals.md:40
#, fuzzy
msgid ""
"Typically in programming languages, the notion of yes is represented by the te"
"rm `true` and the notion of no is represented by the term `false`. So we need "
"to find a question that will give us a `true` or `false` answer which is exact"
"ly what `one_in` does."
msgstr ""
"Typiquement, dans les langages de programmation, la notion de oui est représen"
"té par le terme `true` (vrai) et la notion de non par le terme `false` (faux)."
" Nous avons donc besoin de trouver une question qui nous donnera une réponse `"
"vraie (\"true\")` ou `fausse (\"false\")`, ce qui est exactement ce que fait `one_"
"in`."

#: 05.3-Conditionals.md:45
#, fuzzy
msgid ""
"Notice how the first choice is wrapped between the `if` and the `else` and the"
" second choice is wrapped between the `else` and the `end`. Just like do/end b"
"locks you can put multiple lines of code in either place. For example:"
msgstr ""
"Notez comment le premier choix est encadré entre le `if` et le `else`, et le s"
"econd choix est encadré entre le `else` et le `end`. Juste comme pour les bloc"
"s do/end, vous pouvez mettre plusieurs lignes dans chacun de ces endroits. Par"
" exemple :"

#: 05.3-Conditionals.md:50
#, no-wrap
msgid ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"    sleep 0.5\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"    sleep 0.25\n"
"  end\n"
"  \n"
"end"
msgstr ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"    sleep 0.5\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"    sleep 0.25\n"
"  end\n"
"  \n"
"end"

#: 05.3-Conditionals.md:64
#, fuzzy
msgid ""
"This time we're sleeping for a different amount of time depending on which cho"
"ice we make."
msgstr ""
"Cette fois nous \"dormons\" pour une durée différente et dépendante du choix qui"
" est fait."

#: 05.3-Conditionals.md:68
#, fuzzy
msgid "Simple if"
msgstr "If simple"

#: 05.3-Conditionals.md:70
#, fuzzy
msgid ""
"Sometimes you want to optionally execute just one line of code. This is possib"
"le by placing `if` and then the question at the end. For example:"
msgstr ""
"Quelquefois, nous voulons optionnellement exécuter seulement une ligne de code"
". C'est possible en plaçant `if` à la fin et la question à la suite. Par exemp"
"le :"

#: 05.3-Conditionals.md:73
#, no-wrap
msgid ""
"use_synth :dsaw\n"
"loop do\n"
"  play 50, amp: 0.3, release: 2\n"
"  play 53, amp: 0.3, release: 2 if one_in(2)\n"
"  play 57, amp: 0.3, release: 2 if one_in(3)\n"
"  play 60, amp: 0.3, release: 2 if one_in(4)\n"
"  sleep 1.5\n"
"end"
msgstr ""
"use_synth :dsaw\n"
"loop do\n"
"  play 50, amp: 0.3, release: 2\n"
"  play 53, amp: 0.3, release: 2 if one_in(2)\n"
"  play 57, amp: 0.3, release: 2 if one_in(3)\n"
"  play 60, amp: 0.3, release: 2 if one_in(4)\n"
"  sleep 1.5\n"
"end"

#: 05.3-Conditionals.md:85
#, fuzzy
msgid ""
"This will play chords of different numbers with the chance of each note playin"
"g having a different probability."
msgstr ""
"Ceci va jouer des accords de différents nombres avec la chance pour chaque not"
"e d'être jouée avec une probabilité différente."

#: 05.4-Threads.md:1
msgid "5.4 Threads"
msgstr ""

#: 05.4-Threads.md:3
msgid "Threads"
msgstr ""

#: 05.4-Threads.md:5
#, fuzzy
msgid ""
"So you've made your killer bassline and a phat beat. How do you play them at t"
"he same time? One solution is to weave them together manually - play some bass"
", then a bit of drums, then more bass... However, the timing soon gets hard to"
" think about, especially when you start weaving in more elements."
msgstr ""
"(\"Thread\" = terme technique intraduisible et dont la traduction la plus proche"
" est \"fil\".) Ainsi vous avez fait votre géniale ligne de basse et un super mot"
"if de batterie. Comment les jouez-vous en même temps ? Une solution est de les"
" intercaler manuellement - joue quelques basses, puis quelques sons de batteri"
"e, puis encore des basses... Cependant, la synchronisation devient rapidement "
"dure à concevoir, en particulier quand vous commencez à intercaler plus d'élém"
"ents."

#: 05.4-Threads.md:11
#, fuzzy
msgid ""
"What if Sonic Pi could weave things for you automatically? Well, it can, and y"
"ou do it with a special thing called a *thread*."
msgstr ""
"Et si Sonic Pi pouvait vous synchroniser les choses automatiquement... Eh bien"
", il le peut, et vous le faites avec une chose spéciale appelée *thread*."

#: 05.4-Threads.md:14
#, fuzzy
msgid "Infinite Loops"
msgstr "Boucles infinies"

#: 05.4-Threads.md:16
#, fuzzy
msgid ""
"To keep this example simple, you'll have to imagine that this is a phat beat a"
"nd a killer bassline:"
msgstr ""
"Pour garder cet exemple simple, vous devez imaginer que ceci est un super moti"
"f de batterie et une géniale ligne de basse :"

#: 05.4-Threads.md:19
#, no-wrap
msgid ""
"loop do\n"
"  sample :drum_heavy_kick\n"
"  sleep 1\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"
msgstr ""
"loop do\n"
"  sample :drum_heavy_kick\n"
"  sleep 1\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"

#: 05.4-Threads.md:32
#, fuzzy
msgid ""
"As we've discussed previously, loops are like *black holes* for the program. O"
"nce you enter a loop you can never exit from it until you hit stop. How do we "
"play both loops at the same time? We have to tell Sonic Pi that we want to sta"
"rt something at the same time as the rest of the code. This is where threads c"
"ome to the rescue."
msgstr ""
"Comme nous en avons parlé précédemment, les boucles sont comme des *trous noir"
"s* pour un programme. Dès que vous êtes entré dans une boucle, vous ne pouvez "
"jamais en sortir à moins de presser stop. Comment pouvons-nous jouer les deux "
"boucles en même temps ? Nous devons dire à Sonic Pi que nous voulons démarrer "
"quelque chose en même temps que le reste du code. C'est là que les threads arr"
"ivent à la rescousse."

#: 05.4-Threads.md:38
#, fuzzy
msgid "Threads to the Rescue"
msgstr "Threads à la rescousse"

#: 05.4-Threads.md:40
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"

#: 05.4-Threads.md:55
#, fuzzy
msgid ""
"By wrapping the first loop in an `in_thread` do/end block we tell Sonic Pi to "
"run the contents of the do/end block at *exactly* the same time as the next st"
"atement after the do/end block (which happens to be the second loop). Try it a"
"nd you'll hear both the drums and the bassline weaved together!"
msgstr ""
"En encadrant la première boucle dans un bloc `in_thread` do/end, nous disons à"
" Sonic Pi d'exécuter le contenu du bloc do/end *exactement* en même temps que "
"l'ordre suivant le bloc do/end (qui se trouve être la seconde boucle). Essayez"
"-le et vous entendrez à la fois la batterie et la ligne de basse synchronisées"
" !"

#: 05.4-Threads.md:61
#, fuzzy
msgid "Now, what if we wanted to add a synth on top. Something like:"
msgstr ""
"Maintenant, que faire si nous voulons ajouter un synthé par-dessus. quelque ch"
"ose comme :"

#: 05.4-Threads.md:63
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"

#: 05.4-Threads.md:84
#, fuzzy
msgid ""
"Now we have the same problem as before. The first loop is played at the same t"
"ime as the second loop due to the `in_thread`. However, *the third loop is nev"
"er reached*. We therefore need another thread:"
msgstr ""
"Maintenant, nous avons le même problème qu'avant. La première boucle est jouée"
" en même temps que la seconde grâce au `in_thread`. Toutefois, *la troisième b"
"oucle n'est jamais atteinte*. Nous avons donc besoin d'un nouveau thread :"

#: 05.4-Threads.md:88
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    use_synth :fm\n"
"    play 40, release: 0.2\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    use_synth :fm\n"
"    play 40, release: 0.2\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"

#: 05.4-Threads.md:111
#, fuzzy
msgid "Runs as threads"
msgstr "Runs en tant que threads"

#: 05.4-Threads.md:113
#, fuzzy
msgid ""
"What may surprise you is that when you press the Run button, you're actually c"
"reating a new thread for the code to run. This is why pressing it multiple tim"
"es will layer sounds over each other. As the runs themselves are threads, they"
" will automatically weave the sounds together for you."
msgstr ""
"Ce qui peut vous surprendre est que quand vous pressez le bouton Run, vous ête"
"s réellement en train de créér un nouveau thread pour l'exécution du code. C'e"
"st pour cela qu'en le pressant de multiples fois, vous superposerez des couche"
"s de sons les unes sur les autres. Comme les \"runs\" sont eux-même des threads,"
" ils intercaleront les sons automatiquement pour vous."

#: 05.4-Threads.md:119
#, fuzzy
msgid "Scope"
msgstr "Portée"

#: 05.4-Threads.md:121
#, fuzzy
msgid ""
"As you learn how to master Sonic Pi, you'll learn that threads are the most im"
"portant building blocks for your music. One of the important jobs they have is"
" to isolate the notion of *current settings* from other threads. What does thi"
"s mean? Well, when you switch synths using `use_synth` you're actually just sw"
"itching the synth in the *current thread* - no other thread will have their sy"
"nth switched. Let's see this in action:"
msgstr ""
"Etudiant comment maîtriser Sonic Pi, vous apprendrez que les threads sont les "
"composants les plus importants de votre musique. L'une des responsabilités imp"
"ortantes qu'ils ont est d'isoler la notion de *paramètres courants* vis à vis "
"des autres threads. Qu'est-ce que cela signifie ? Eh bien, quand vous commutez"
" les synthés avec `use_synth`, vous ne commutez réellement que le synthé dans "
"le *thread courant* - aucun autre thread n'aura son synthé commuté. Voyons cel"
"a en action :"

#: 05.4-Threads.md:129
#, no-wrap
msgid ""
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  use_synth :tb303\n"
"  play 50\n"
"end\n"
"sleep 1\n"
"play 50"
msgstr ""
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  use_synth :tb303\n"
"  play 50\n"
"end\n"
"sleep 1\n"
"play 50"

#: 05.4-Threads.md:142
#, fuzzy
msgid ""
"Notice how the middle sound was different to the others? The `use_synth` state"
"ment only affected the thread it was in and not the outer main run thread."
msgstr ""
"Notez comme que le son du milieu était différent des autres. L'ordre `use_synt"
"h` affecte uniquement le thread dans lequel il était et pas le thread principa"
"l et extérieur du run."

#: 05.4-Threads.md:146
#, fuzzy
msgid "Inheritance"
msgstr "Héritage"

#: 05.4-Threads.md:148
#, fuzzy
msgid ""
"When you create a new thread with `in_thread`, the new thread will automatical"
"ly inherit all of the current settings from the current thread. Let's see that"
":"
msgstr ""
"Quand vous créez un nouveau thread avec `in_thread`, le nouveau thread hérite "
"automatiquement de tous les paramètres courants du thread courant. Voyons cela"
" :"

#: 05.4-Threads.md:152
#, no-wrap
msgid ""
"use_synth :tb303\n"
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  play 55\n"
"end"
msgstr ""
"use_synth :tb303\n"
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  play 55\n"
"end"

#: 05.4-Threads.md:162
#, fuzzy
msgid ""
"Notice how the second note is played with the `:tb303` synth even though it wa"
"s played from a separate thread? Any of the settings modified with the various"
" `use_*` functions will behave in the same way."
msgstr ""
"Notez que la seconde note est jouée avec le synthé `:tb303` bien qu'elle soit "
"jouée depuis un thread distinct. L'un quelconque des paramètres modifiés avec "
"les différentes fonctions `use_*` se comportera exactement de la même manière."

#: 05.4-Threads.md:166
#, fuzzy
msgid ""
"When threads are created, they inherit all the settings from their parent but "
"they don't share any changes back."
msgstr ""
"Quand les threads sont créés, ils héritent de tous les paramètres de leur pare"
"nt mais dès lors, ils ne partagent plus aucun changement."

#: 05.4-Threads.md:169
#, fuzzy
msgid "Naming Threads"
msgstr "Nommage des Threads"

#: 05.4-Threads.md:171
#, fuzzy
msgid "Finally, we can give our threads names:"
msgstr "Finalement, nous pouvons donner des noms à nos threads :"

#: 05.4-Threads.md:173
#, no-wrap
msgid ""
"in_thread(name: :bass) do\n"
"  loop do\n"
"    use_synth :prophet\n"
"    play chord(:e2, :m7).choose, release: 0.6\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread(name: :drums) do\n"
"  loop do\n"
"    sample :elec_snare\n"
"    sleep 1\n"
"  end\n"
"end"
msgstr ""
"in_thread(name: :bass) do\n"
"  loop do\n"
"    use_synth :prophet\n"
"    play chord(:e2, :m7).choose, release: 0.6\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread(name: :drums) do\n"
"  loop do\n"
"    sample :elec_snare\n"
"    sleep 1\n"
"  end\n"
"end"

#: 05.4-Threads.md:190
#, fuzzy
msgid ""
"Look at the log pane when you run this code. See how the log reports the name "
"of the thread with the message?"
msgstr ""
"Regardez le panneau \"trace\" quand vous exécutez ce code. Regardez comment le \""
"trace\" rapporte le nom du thread avec le message."

#: 05.4-Threads.md:193
#, no-wrap
msgid ""
"[Run 36, Time 4.0, Thread :bass]\n"
" |- synth :prophet, {release: 0.6, note: 47}"
msgstr ""
"[Run 36, Time 4.0, Thread :bass]\n"
" |- synth :prophet, {release: 0.6, note: 47}"

#: 05.4-Threads.md:198
#, fuzzy
msgid "Only One Thread per Name Allowed"
msgstr "Seulement un thread autorisé par nom"

#: 05.4-Threads.md:200
#, fuzzy
msgid ""
"One last thing to know about named threads is that only one thread of a given "
"name may be running at the same time. Let's explore this. Consider the followi"
"ng code:"
msgstr ""
"Une dernière chose à savoir au sujet des threads nommés est que seul un thread"
" d'un nom donné peut être en cours d'exécution au même moment. Explorons ceci."
" Considérez le code suivant :"

#: 05.4-Threads.md:204
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"

#: 05.4-Threads.md:213
#, fuzzy
msgid ""
"Go ahead and paste that into a buffer and press the Run button. Press it again"
" a couple of times. Listen to the cacophony of multiple amen breaks looping ou"
"t of time with each other. Ok, you can press Stop now."
msgstr ""
"Allez de l'avant et collez cela dans un buffer et pressez le bouton \"run\". Pre"
"ssez-le encore quelquefois. Ecoutez la cacaphonie des échantillons amen boucla"
"nt de façon désynchronisée. Ok, vous pouvez maintenant presser \"stop\"."

#: 05.4-Threads.md:217
#, fuzzy
msgid ""
"This is the behaviour we've seen again and again - if you press the Run button"
", sound layers on top of any existing sound. Therefore if you have a loop and "
"press the Run button three times, you'll have three layers of loops playing si"
"multaneously."
msgstr ""
"C'est le comportement que nous avons vu encore et encore - si vous pressez le "
"bouton \"run\", le son s'étend au dessus de tout son existant. Donc, si vous ave"
"z une boucle et que vous pressez le bouton \"run\" trois fois, vous aurez trois "
"couches de boucles jouant simultanément."

#: 05.4-Threads.md:222
#, fuzzy
msgid "However, with named threads it is different:"
msgstr "Cependant, avec les threads nommés, c'est différent :"

#: 05.4-Threads.md:224
#, no-wrap
msgid ""
"in_thread(name: :amen) do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"
msgstr ""
"in_thread(name: :amen) do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"

#: 05.4-Threads.md:233
#, fuzzy
msgid ""
"Try pressing the Run button multiple times with this code. You'll only ever he"
"ar one amen break loop. You'll also see this in the log:"
msgstr ""
"Essayez de presser le bouton \"run\" plusieurs fois avec ce code. Vous entendrez"
" seulement une boucle de l'échantillon amen. Vous allez aussi voir ceci dans l"
"a trace :"

#: 05.4-Threads.md:236
#, no-wrap
#, fuzzy
msgid "==> Skipping thread creation: thread with name :amen already exists."
msgstr ""
"==> Skipping thread creation: thread with name :amen already exists.\n"
"   (sautant la création d'un thread : le thread avec le nom :amen existe déjà."
")"

#: 05.4-Threads.md:240
#, fuzzy
msgid ""
"Sonic Pi is telling you that a thread with the name `:amen` is already playing"
", so it's not creating another."
msgstr ""
"Sonic Pi vous dit qu'un thread avec le nom `:amen` est déjà en train d'être jo"
"ué, donc il ne va pas en créer un autre."

#: 05.4-Threads.md:243
#, fuzzy
msgid ""
"This behaviour may not seem immediately useful to you now - but it will be ver"
"y handy when we start to live code..."
msgstr ""
"Ce comportement peut ne pas vous sembler utile immédiatement - mais il sera tr"
"ès pratique quand nous commencerons à coder en \"live\"..."

#: 05.5-Functions.md:1
#, fuzzy
msgid "5.5 Functions"
msgstr "5.5 Fonctions"

#: 05.5-Functions.md:3
#, fuzzy
msgid "Functions"
msgstr "Fonctions"

#: 05.5-Functions.md:5
#, fuzzy
msgid ""
"Once you start writing lots of code, you may wish to find a way to organise an"
"d structure things to make them tidier and easier to understand. Functions are"
" a very powerful way to do this. They give us the ability to give a name to a "
"bunch of code. Let's take a look."
msgstr ""
"Une fois que vous commencez à écrire beaucoup de code, vous pouvez souhaiter t"
"rouver le moyen d'organiser et de structurer les choses pour les rendre plus o"
"rdonnées et faciles à comprendre. Les fonctions sont un moyen très puissant po"
"ur le faire. Elles vous donnent la capacité de donner un nom à un morceau de c"
"ode. Jetons-y un œil."

#: 05.5-Functions.md:10
#, fuzzy
msgid "Defining functions"
msgstr "Definition des fonctions"

#: 05.5-Functions.md:12
#, no-wrap
msgid ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 2\n"
"end"
msgstr ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 2\n"
"end"

#: 05.5-Functions.md:21
#, fuzzy
msgid ""
"Here, we've defined a new function called `foo`. We do this with our old frien"
"d the do/end block and the magic word `define` followed by the name we wish to"
" give to our function. We didn't have to call it `foo`, we could have called i"
"t anything we want such as `bar`, `baz` or ideally something meaningful to you"
" like `main_section` or `lead_riff`."
msgstr ""
"Ici, nous avons défini une nouvelle fonction appelée `foo`. Nous faisons cela "
"avec notre vieil ami, le bloc do/end et le mot magique `define` suivi par le n"
"om que nous voulons donner à notre fonction. Nous ne sommes pas tenus de l'app"
"eler `foo`, nous aurions pu l'appeler avec n'importe quel nom que nous voulion"
"s, comme `bar`, `baz` ou idéalement quelque chose de significatif pour vous co"
"mme `section_principale` ou `lead_riff`."

#: 05.5-Functions.md:27
#, fuzzy
msgid ""
"Remember to prepend a colon `:` to the name of your function when you define i"
"t."
msgstr ""
"Rappelez-vous d'ajouter un deux-points `:` devant le nom de votre fonction qua"
"nd vous la définissez."

#: 05.5-Functions.md:30
#, fuzzy
msgid "Calling functions"
msgstr "Appel des fonctions"

#: 05.5-Functions.md:32
#, fuzzy
msgid "Once we have defined our function we can call it by just writing its name:"
msgstr ""
"Une fois que nous avons défini notre fonction, nous pouvons l'appeler simpleme"
"nt en écrivant son nom :"

#: 05.5-Functions.md:35
#, no-wrap
msgid ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 0.5\n"
"end\n"
"foo\n"
"sleep 1\n"
"2.times do\n"
"  foo\n"
"end"
msgstr ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 0.5\n"
"end\n"
"foo\n"
"sleep 1\n"
"2.times do\n"
"  foo\n"
"end"

#: 05.5-Functions.md:52
#, fuzzy
msgid ""
"We can even use `foo` inside iteration blocks or anywhere we may have written "
"`play` or `sample`. This gives us a great way to express ourselves and to crea"
"te new meaningful words for use in our compositions."
msgstr ""
"Nous pouvons même utiliser `foo` à l'intérieur de blocs d'itération ou n'impor"
"te où nous aurions pu écrire `play` ou `sample`. Ceci nous donne un super moye"
"n de nous exprimer et de créér de nouveaux mots significatifs à utiliser dans "
"nos compositions."

#: 05.5-Functions.md:56
#, fuzzy
msgid "Functions are remembered across runs"
msgstr "Les fonctions sont mémorisées à travers des runs"

#: 05.5-Functions.md:58
#, fuzzy
msgid ""
"So far, every time you've pressed the Run button, Sonic Pi has started from a "
"completely blank slate. It knows nothing except for what is in the buffer. You"
" can't reference code in another buffer or another thread. However, functions "
"change that. When you define a function, Sonic Pi *remembers* it. Let's try it"
". Delete all the code in your buffer and replace it with:"
msgstr ""
"Pour le moment, chaque fois que nous avons pressé le bouton Run, Sonic Pi a dé"
"marré d'un état complètement vierge. Il ne savait rien à part ce qui était dan"
"s le buffer. Vous ne pouviez pas référencer du code d'un autre buffer ou d'un "
"autre thread. Toutefois, les fonctions changent cela. Quand vous définissez un"
"e fonction, Sonic Pi s'en *rappelle*. Essayons-le. Effacez tout le code dans v"
"otre buffer et remplacez-le par :"

#: 05.5-Functions.md:65
#, no-wrap
msgid "foo"
msgstr "foo"

#: 05.5-Functions.md:69
#, fuzzy
msgid ""
"Press the Run button - and hear your function play. Where did the code go? How"
" did Sonic Pi know what to play? Sonic Pi just remembered your function - so e"
"ven after you deleted it from the buffer, it remembered what you had typed. Th"
"is behaviour only works with functions created using `define` (and `defonce`)."
msgstr ""
"Pressez le bouton Run et écoutez votre fonction qui est jouée. Où le code est-"
"il allé ? Comment Sonic Pi sait-il quoi jouer ? Sonic Pi s'est simplement souv"
"enu de votre fonction - ainsi, même après l'avoir effacée de votre buffer, il "
"se rappelle de ce que vous avez tapé. Ce comportement fonctionne uniquement av"
"ec les fonctions créées en utilisant `define` (et `defonce`)."

#: 05.5-Functions.md:75
#, fuzzy
msgid "Parameterised functions"
msgstr "Fonctions paramétrées"

#: 05.5-Functions.md:77
#, fuzzy
msgid ""
"You might be interested in knowing that just like you can pass min and max val"
"ues to `rrand`, you can teach your functions to accept arguments. Let's take a"
" look:"
msgstr ""
"Vous pourriez être intéressé à savoir que juste comme vous pouvez passer les v"
"aleurs min et max à `rrand`, vous pouvez apprendre à vos fonctions à accepter "
"des arguments. Jetons-y un œil."

#: 05.5-Functions.md:81
#, no-wrap
msgid ""
"define :my_player do |n|\n"
"  play n\n"
"end\n"
"my_player 80\n"
"sleep 0.5\n"
"my_player 90"
msgstr ""
"define :my_player do |n|\n"
"  play n\n"
"end\n"
"my_player 80\n"
"sleep 0.5\n"
"my_player 90"

#: 05.5-Functions.md:91
#, fuzzy
msgid ""
"This isn't very exciting, but it illustrates the point. We've created our own "
"version of `play` called `my_player` which is parameterised."
msgstr ""
"Ce n'est pas très excitant, mais ça illustre le point. Nous avons créé notre p"
"ropre version de `play` appelée `my_player` et qui est paramétrée."

#: 05.5-Functions.md:94
#, fuzzy
msgid ""
"The parameters need to go after the `do` of the `define` do/end block, surroun"
"ded by vertical goalposts `|` and separated by commas `,`. You may use any wor"
"ds you want for the parameter names."
msgstr ""
"Les paramètres doivent être placés après le `do` du bloc do/end de `define`, e"
"ntourés par des barres verticales `|` et séparés par des virgules `,`. Vous po"
"uvez utiliser tout mot que vous souhaitez pour les noms de paramètres."

#: 05.5-Functions.md:98
#, fuzzy
msgid ""
"The magic happens inside the `define` do/end block. You may use the parameter "
"names as if they were real values. In this example I'm playing note `n`. You c"
"an consider the parameters as a kind of promise that when the code runs, they "
"will be replaced with actual values. You do this by passing a parameter to the"
" function when you call it. I do this with `my_player 80` to play note 80. Ins"
"ide the function definition, `n` is now replaced with 80, so `play n` turns in"
"to `play 80`. When I call it again with `my_player 90`, `n` is now replaced wi"
"th 90, so `play n` turns into `play 90`."
msgstr ""
"La magie se passe à l'intérieur du bloc do/end de `define`. Vous pouvez utilis"
"er les noms de paramètres comme si c'étaient des valeurs réelles. Dans cet exe"
"mple, je joue la note `n`. Vous pouvez considérer les paramètres comme une sor"
"te de promesse qui fait que, lorsque le code s'exécute, ils sont remplacés par"
" des valeurs réelles. Vous faites ceci en passant un argument à la fonction qu"
"and vous l'appelez. Je le fais avec `my_player 80` pour jouer la note 80. À l'"
"intérieur de la définition de la fonction, `n` est alors remplacé par 80, donc"
" `play n` est changé en `play 80`. Quand je l'appelle une nouvelle fois avec `"
"my_player 90`, `n` est alors remplacé par 90, donc `play n` est changé en `pla"
"y 90`."

#: 05.5-Functions.md:108
#, fuzzy
msgid "Let's see a more interesting example:"
msgstr "Voyons un exemple plus intéressant :"

#: 05.5-Functions.md:110
#, no-wrap
msgid ""
"define :chord_player do |root, repeats| \n"
"  repeats.times do\n"
"    play chord(root, :minor), release: 0.3\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"chord_player :e3, 2\n"
"sleep 0.5\n"
"chord_player :a3, 3\n"
"chord_player :g3, 4\n"
"sleep 0.5\n"
"chord_player :e3, 3"
msgstr ""
"define :chord_player do |root, repeats| \n"
"  repeats.times do\n"
"    play chord(root, :minor), release: 0.3\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"chord_player :e3, 2\n"
"sleep 0.5\n"
"chord_player :a3, 3\n"
"chord_player :g3, 4\n"
"sleep 0.5\n"
"chord_player :e3, 3"

#: 05.5-Functions.md:126
#, fuzzy
msgid ""
"Here I used `repeats` as if it was a number in the line `repeats.times do`. I "
"also used `root` as if it was a note name in my call to `play`."
msgstr ""
"Ici j'ai utilisé `repeats` comme si c'était un nombre dans la ligne `repeats.t"
"imes do`. J'ai aussi utilisé `root` comme si c'était un nom de note dans mon a"
"ppel à `play`."

#: 05.5-Functions.md:129
#, fuzzy
msgid ""
"See how we're able to write something very expressive and easy to read by movi"
"ng a lot of our logic into a function!"
msgstr ""
"Voyez comme nous sommes capables d'écrire quelque chose de très expressif et f"
"acile à lire en déplaçant beaucoup de notre logique à l'intérieur d'une foncti"
"on !"

#: 05.6-Variables.md:1
msgid "5.6 Variables"
msgstr ""

#: 05.6-Variables.md:3
msgid "Variables"
msgstr ""

#: 05.6-Variables.md:5
#, fuzzy
msgid ""
"A useful thing to do in your code is to create names for things. Sonic Pi make"
"s this very easy, you write the name you wish to use, an equal sign (`=`), the"
"n the thing you want to remember:"
msgstr ""
"Une chose utile à faire dans votre code est d'attribuer des noms aux choses. S"
"onic Pi rend cela très facile, vous écrivez le nom que vous voulez utiliser, u"
"n signe égal (`=`), puis la chose dont vous voulez vous rappeler :"

#: 05.6-Variables.md:9
#, no-wrap
msgid "sample_name = :loop_amen"
msgstr "sample_name = :loop_amen"

#: 05.6-Variables.md:13
#, fuzzy
msgid ""
"Here, we've 'remembered' the symbol `:loop_amen` in the variable `sample_name`"
". We can now use `sample_name` everywhere we might have used `:loop_amen`. For"
" example:"
msgstr ""
"Ici, nous nous sommes 'rappelés' du symbole `:loop_amen` dans la variable `sam"
"ple_name`. Nous pouvons maintenant utiliser `sample_name` partout où nous auri"
"ons utilisé `:loop_amen`. Par exemple :"

#: 05.6-Variables.md:17
#, no-wrap
msgid ""
"sample_name = :loop_amen\n"
"sample sample_name"
msgstr ""
"sample_name = :loop_amen\n"
"sample sample_name"

#: 05.6-Variables.md:22
#, fuzzy
msgid ""
"There are three main reasons for using variables in Sonic Pi: communicating me"
"aning, managing repetition and capturing the results of things."
msgstr ""
"Il y a trois raisons principales pour utiliser des variables dans Sonic Pi : c"
"ommunication de la signification, gestion de la répétition et capture des résu"
"ltats des choses."

#: 05.6-Variables.md:26
#, fuzzy
msgid "Communicating Meaning"
msgstr "Communication de la signification"

#: 05.6-Variables.md:28
#, fuzzy
msgid ""
"When you write code it's easy to just think you're telling the computer how to"
" do stuff - as long as the computer understands it's OK. However, it's importa"
"nt to remember that it's not just the computer that reads the code. Other peop"
"le may read it too and try to understand what's going on. Also, you're likely "
"to read your own code in the future and try to understand what's going on. Alt"
"hough it might seem obvious to you now - it might not be so obvious to others "
"or even your future self!"
msgstr ""
"Quand vous écrivez du code, c'est facile de ne penser qu'à dire à l'ordinateur"
" comment faire le boulot - tant que l'ordinateur comprend, c'est OK. Toutefois"
", il est important de se rappeler qu'il n'y a pas que l'ordinateur qui lit le "
"code. D'autres personnes peuvent aussi le lire et essayer de comprendre ce qu'"
"il fait. En outre, il est probable que vous ayez à lire votre propre code dans"
" le futur et à essayer de comprendre ce qui s'y passe. Bien que cela puisse vo"
"us sembler évident maintenant, ce pourrait ne pas être si évident pour les aut"
"res et pour vous-même dans le futur."

#: 05.6-Variables.md:36
#, fuzzy
msgid ""
"One way to help others understand what your code is doing is to write comments"
" (as we saw in a previous section). Another is to use meaningful variable name"
"s. Look at this code:"
msgstr ""
"Un moyen d'aider les autres à comprendre ce que fait votre code est d'écrire d"
"es commentaires (comme nous l'avons vu dans une section précédente). Une autre"
" façon est d'utiliser des noms de variables significatifs. Regardez ce code :"

#: 05.6-Variables.md:40
#, no-wrap
msgid "sleep 1.7533"
msgstr "sleep 1.7533"

#: 05.6-Variables.md:44
#, fuzzy
msgid ""
"Why does it use the number `1.7533`? Where did this number come from? What doe"
"s it mean? However, look at this code:"
msgstr ""
"Pourquoi utilise-t-il le nombre `1.7533` ? D'où est-il venu ? Qu'est-ce que ce"
"la signifie ? En revanche, regardez ce code :"

#: 05.6-Variables.md:47
#, no-wrap
msgid ""
"loop_amen_duration = 1.7533\n"
"sleep loop_amen_duration"
msgstr ""
"loop_amen_duration = 1.7533\n"
"sleep loop_amen_duration"

#: 05.6-Variables.md:52
#, fuzzy
msgid ""
"Now, it's much clearer what `1.7533` means: it's the duration of the sample `:"
"loop_amen`! Of course, you might say why not simply write:"
msgstr ""
"Maintenant,; il est beaucoup plus clair que `1.7533` signifie la durée de l'éc"
"hantillon `:loop_amen` ! Bien sûr, vous pourriez dire pourquoi ne pas simpleme"
"nt écrire :"

#: 05.6-Variables.md:55
#, no-wrap
msgid "sleep sample_duration(:loop_amen)"
msgstr "sleep sample_duration(:loop_amen)"

#: 05.6-Variables.md:59
#, fuzzy
msgid "Which, of course, is a very nice way of communicating the intent of the code."
msgstr ""
"Qui, bien entendu, est un moyen très sympathique de communiquer l'intention du"
" code."

#: 05.6-Variables.md:62
#, fuzzy
msgid "Managing Repetition"
msgstr "Gestion de la répétition"

#: 05.6-Variables.md:64
#, fuzzy
msgid ""
"Often you see a lot of repetition in your code and when you want to change thi"
"ngs, you have to change it in a lot of places. Take a look at this code:"
msgstr ""
"Vous voyez souvent beaucoup de répétitions dans votre code et quand vous voule"
"z changer les choses, vous devez les changer à beaucoup d'endroits. Jetez un œ"
"il à ce code :"

#: 05.6-Variables.md:68
#, no-wrap
msgid ""
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)\n"
"sample :loop_amen, rate: 0.5\n"
"sleep sample_duration(:loop_amen, rate: 0.5)\n"
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)"
msgstr ""
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)\n"
"sample :loop_amen, rate: 0.5\n"
"sleep sample_duration(:loop_amen, rate: 0.5)\n"
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)"

#: 05.6-Variables.md:77
#, fuzzy
msgid ""
"We're doing a lot of things with `:loop_amen`! What if we wanted to hear what "
"it sounded like with another loop sample such as `:loop_garzul`? We'd have to "
"find and replace all `:loop_amen`s with `:loop_garzul`. That might be fine if "
"you have lots of time - but what if you're performing on stage? Sometimes you "
"don't have the luxury of time - especially if you want to keep people dancing."
msgstr ""
"Nous sommes en train de faire beaucoup de choses avec `:loop_amen` ! Que faire"
" si nous voulons écouter comment ça sonne avec un autre échantillon tel que `:"
"loop_garzul` ? Nous aurons à trouver et remplacer tous les `:loop_amen` par `:"
"loop_garzul`. Ce serait bien si vous disposiez de beaucoup de temps - mais que"
" faire si vous œuvrez sur scène ? Quelquefois, vous n'aurez pas le luxe de tem"
"ps disponible - en particulier si vous voulez que les gens continuent à danser"
"."

#: 05.6-Variables.md:84
#, fuzzy
msgid "What if you'd written your code like this:"
msgstr "Et si vous aviez écrit votre code comme ceci :"

#: 05.6-Variables.md:86
#, no-wrap
msgid ""
"sample_name = :loop_amen\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)\n"
"sample sample_name, rate: 0.5\n"
"sleep sample_duration(sample_name, rate: 0.5)\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)"
msgstr ""
"sample_name = :loop_amen\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)\n"
"sample sample_name, rate: 0.5\n"
"sleep sample_duration(sample_name, rate: 0.5)\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)"

#: 05.6-Variables.md:96
#, fuzzy
msgid ""
"Now, that does exactly the same as above (try it). It also gives us the abilit"
"y to just change one line `sample_name = :loop_amen` to `sample_name = :loop_g"
"arzul` and we change it in many places through the magic of variables."
msgstr ""
"Maintenant, ça fait exactement la même chose qu'au dessus (essayez-le). Ça nou"
"s procure aussi la capacité de changer juste une ligne : `sample_name = :loop_"
"amen` en `sample_name = :loop_garzul` et la magie des variables nous le change"
" dans beaucoup d'endroits."

#: 05.6-Variables.md:101
#, fuzzy
msgid "Capturing Results"
msgstr "Capture des résultats"

#: 05.6-Variables.md:103
#, fuzzy
msgid ""
"Finally, a good motivation for using variables is to capture the results of th"
"ings. For example, you may wish to do things with the duration of a sample:"
msgstr ""
"Finalement, une bonne motivation pour utiliser des variables est de capturer l"
"es résultats des choses. Par exemple, vous pouvez vouloir faire des choses ave"
"c la durée d'un échantillon :"

#: 05.6-Variables.md:107
#, no-wrap
msgid "sd = sample_duration(:loop_amen)"
msgstr "sd = sample_duration(:loop_amen)"

#: 05.6-Variables.md:111
#, fuzzy
msgid "We can now use `sd` anywhere we need the duration of the `:loop_amen` sample."
msgstr ""
"Nous pouvons maintenant utiliser `sd` partout où nous avons besoin de la durée"
" de l'échantillon `:loop_amen`."

#: 05.6-Variables.md:114
#, fuzzy
msgid ""
"Perhaps more importantly, a variable allows us to capture the result of a call"
" to `play` or `sample`:"
msgstr ""
"Plus important peut-être, une variable nous permet de capturer le résultat d'u"
"n appel à `play` ou `sample`:"

#: 05.6-Variables.md:117
#, no-wrap
msgid "s = play 50, release: 8"
msgstr "s = play 50, release: 8"

#: 05.6-Variables.md:121
#, fuzzy
msgid ""
"Now we have caught and remembered `s` as a variable, which allows us to contro"
"l the synth as it is running:"
msgstr ""
"Maintenant, nous avons capturé et mémorisé `s` comme une variable, ce qui nous"
" permet de contrôler le synthé pendant qu'il est actif :"

#: 05.6-Variables.md:124
#, no-wrap
msgid ""
"s = play 50, release: 8\n"
"sleep 2\n"
"control s, note: 62"
msgstr ""
"s = play 50, release: 8\n"
"sleep 2\n"
"control s, note: 62"

#: 05.6-Variables.md:130
#, fuzzy
msgid "We'll look into controlling synths in more detail in a later section."
msgstr ""
"Nous verrons le contrôle des synthés en plus détaillé dans une prochaine secti"
"on."

#: 05.7-Thread-Synchronisation.md:1
#, fuzzy
msgid "5.7 Thread Synchronisation"
msgstr "5.7 Synchronisation des Threads"

#: 05.7-Thread-Synchronisation.md:3
#, fuzzy
msgid "Thread Synchronisation"
msgstr "Synchronisation des Threads"

#: 05.7-Thread-Synchronisation.md:5
#, fuzzy
msgid ""
"Once you have become sufficiently advanced live coding with a number of functi"
"ons and threads simultaneously, you've probably noticed that it's pretty easy "
"to make a mistake in one of the threads which kills it. That's no big deal, be"
"cause you can easily restart the thread by hitting Run. However, when you rest"
"art the thread it is now *out of time* with the original threads."
msgstr ""
"Une fois que vous êtes suffisamment avancés en codage \"live\" avec un certain n"
"ombre de fonctions et de threads en simultanéité, vous avez probablement remar"
"qué que c'est plutôt facile de faire une faute dans l'un des threads et qui lu"
"i met fin. Ce n'est pas un gros problème car vous pouvez facilement redémarrer"
" le thread en pressant Run. Toutefois, quand vous redémarrez le thread, il se "
"trouve alors *déphasé* avec les threads d'origine."

#: 05.7-Thread-Synchronisation.md:12
#, fuzzy
msgid "Inherited Time"
msgstr "Temps hérité"

#: 05.7-Thread-Synchronisation.md:14
#, fuzzy
msgid ""
"As we discussed earlier, new threads created with `in_thread` inherit all of t"
"he settings from the parent thread. This includes the current time. This means"
" that threads are always in time with each other when started simultaneously."
msgstr ""
"Comme nous en avons discuté auparavant, les nouveaux threads créés avec `in_th"
"read` héritent de tous les paramètres du thread parent. Ceci inclut l'heure ac"
"tuelle. Ce qui signifie que les threads sont toujours en phase entre eux quand"
" ils sont démarrés simultanément."

#: 05.7-Thread-Synchronisation.md:19
#, fuzzy
msgid ""
"However, when you start a thread on its own it starts with its own time which "
"is unlikely to be in sync with any of the other currently running threads."
msgstr ""
"Toutefois quand vous démarrez un thread tout seul, il démarre avec sa propre h"
"eure qui n'est probablement pas en phase avec l'un quelconque des autres threa"
"ds en cours d'exécution."

#: 05.7-Thread-Synchronisation.md:23
#, fuzzy
msgid "Cue and Sync"
msgstr "Cue et Sync"

#: 05.7-Thread-Synchronisation.md:25
#, fuzzy
msgid ""
"Sonic Pi provides a solution to this problem with the functions `cue` and `syn"
"c`."
msgstr "Sonic Pi fourni une solution à ce problème avec les fonctions `cue` et `sync`."

#: 05.7-Thread-Synchronisation.md:28
#, fuzzy
msgid ""
"`cue` allows us to send out heartbeat messages to all other threads. By defaul"
"t the other threads aren't interested and ignore these heartbeat messages. How"
"ever, you can easily register interest with the `sync` function."
msgstr ""
"`cue` nous permet d'envoyer nos messages de battement de coeur à tous les autr"
"es threads. Par défaut, les autres threads ne sont pas intéressés et ignorent "
"ces messages de battement de coeur. Cependant, vous pouvez leur déclarer de l'"
"intérêt avec la fonction `sync`."

#: 05.7-Thread-Synchronisation.md:33
#, fuzzy
msgid ""
"The important thing to be aware of is that `sync` is similar to `sleep` in tha"
"t it stops the current thread from doing anything for a period of time. Howeve"
"r, with `sleep` you specify how long you want to wait while with `sync` you do"
"n't know how long you will wait - as `sync` waits for the next `cue` from anot"
"her thread which may be soon or a long time away."
msgstr ""
"La chose importante à laquelle il faut être attentif est similaire à `sleep`, "
"en ce sens que cela arrête le thread courant en l'empêchant de faire quoi que "
"ce soit pendant un moment. Toutefois, avec `sleep`, vous spécifiez combien de "
"temps vous voulez attendre tandis qu'avec `sync`, vous ne savez pas combien de"
" temps vous allez attendre - étant donné que `sync` attend le `cue` suivant d'"
"un autre thread, ce qui peut être court ou long."

#: 05.7-Thread-Synchronisation.md:40
#, fuzzy
msgid "Let's explore this in a little more detail:"
msgstr "Explorons ceci en un peu plus de détail :"

#: 05.7-Thread-Synchronisation.md:42
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"

#: 05.7-Thread-Synchronisation.md:58
#, fuzzy
msgid ""
"Here we have two threads - one acting like a metronome, not playing any sounds"
" but sending out `:tick` heartbeat messages every beat. The second thread is s"
"ynchronising on `tick` messages and when it receives one it inherits the time "
"of the `cue` thread and continues running."
msgstr ""
"Nous avons ici deux threads - l'un agissant comme un métronome, ne jouant aucu"
"n son mais envoyant des messages de battement de coeur `tick` à chaque temps. "
"Le second thread se synchronise sur les messages `tick` et quand il en reçoit "
"un, il hérite de l'heure du thread `cue` et continue de jouer."

#: 05.7-Thread-Synchronisation.md:63
#, fuzzy
msgid ""
"As a result, we will hear the `:drum_heavy_kick` sample exactly when the other"
" thread sends the `:tick` message, even if the two threads didn't start their "
"execution at the same time:"
msgstr ""
"Par conséquent, nous entendons l'échantillon `:drum_heavy_kick`   exactement q"
"uand l'autre thread envoie le message `tick`, même si les deux threads n'ont p"
"as démarré leur exécution en même temps :"

#: 05.7-Thread-Synchronisation.md:67
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"sleep(0.3)\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"sleep(0.3)\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"

#: 05.7-Thread-Synchronisation.md:85
#, fuzzy
msgid ""
"That naughty `sleep` call would typically make the second thread out of phase "
"with the first. However, as we're using `cue` and `sync`, we automatically syn"
"c the threads bypassing any accidental timing offsets."
msgstr ""
"Ce vilain appel à `sleep` mettrait typiquement le second thread en déphasage a"
"vec le premier. Cependant, comme nous utilisons `cue` et `sync`, nous synchron"
"isons automatiquement les threads en évitant un décalage de temps accidentel."

#: 05.7-Thread-Synchronisation.md:90
#, fuzzy
msgid "Cue Names"
msgstr "Noms des \"Cue\""

#: 05.7-Thread-Synchronisation.md:92
#, fuzzy
msgid ""
"You are free to use whatever name you'd like for your `cue` messages - not jus"
"t `:tick`. You just need to ensure that any other threads are `sync`ing on the"
" correct name - otherwise they'll be waiting for ever (or at least until you p"
"ress the Stop button)."
msgstr ""
"Vous êtes libre d'utiliser n'importe quel nom que vous aimeriez pour vos messa"
"ges `cue`. Vous devez juste vous assurer que tout autre thread se synchronise "
"sur le bon nom - autrement il attendrait à jamais (au moins jusqu'à ce que vou"
"s pressiez le bouton Stop)."

#: 05.7-Thread-Synchronisation.md:97
#, fuzzy
msgid "Let's play with a few `cue` names:"
msgstr "Jouons avec quelques noms de `cue`:"

#: 05.7-Thread-Synchronisation.md:99
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do \n"
"    cue [:foo, :bar, :baz].choose\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do \n"
"    sync :foo \n"
"    sample :elec_beep\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :bar\n"
"    sample :elec_flip\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :baz\n"
"    sample :elec_blup\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do \n"
"    cue [:foo, :bar, :baz].choose\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do \n"
"    sync :foo \n"
"    sample :elec_beep\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :bar\n"
"    sample :elec_flip\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :baz\n"
"    sample :elec_blup\n"
"  end\n"
"end"

#: 05.7-Thread-Synchronisation.md:129
#, fuzzy
msgid ""
"Here we have a main `cue` loop which is randomly sending one of the heartbeat "
"names `:foo`, `:bar` or `:baz`. We then also have three loop threads syncing o"
"n each of those names independently and then playing a different sample. The n"
"et effect is that we hear a sound every 0.5 beats as each of the `sync` thread"
"s is randomly synced with the `cue` thread and plays its sample."
msgstr ""
"Ici, nous avons une boucle principale `cue` qui envoie aléatoirement un des ba"
"ttements de coeur nommés `:foo`, `:bar` ou `:baz`. Nous avons aussi ensuite tr"
"ois boucles en thread se synchronisant sur ces noms indépendamment et jouant u"
"n échantillon différent. Il est clair que nous entendons un son à chaque demi-"
"temps puisque chacun des threads `sync` est aléatoirement synchronisé avec le "
"thread `cue` et joue son échantillon."

#: 05.7-Thread-Synchronisation.md:136
#, fuzzy
msgid ""
"This of course also works if you order the threads in reverse as the `sync` th"
"reads will simply sit and wait for the next `cue`."
msgstr ""
"Ceci, bien entendu, marche aussi si vous ordonnez les threads en sens inverse "
"puisque les threads `sync` restent en attente du `cue` suivant."

#: 06-FX.md:1
#, fuzzy
msgid "6 FX"
msgstr "6 FX (effets)"

#: 06-FX.md:3
#, fuzzy
msgid "Studio FX"
msgstr "Studio FX (effets de studio)"

#: 06-FX.md:5
#, fuzzy
msgid ""
"One of the most rewarding and fun aspects of Sonic Pi is the ability to easily"
" add studio effects to your sounds. For example, you may wish to add some reve"
"rb to parts of your piece, or some echo or perhaps even distort or wobble your"
" basslines."
msgstr ""
"Un des aspects les plus gratifiants et sympathiques de Sonic Pi est la capacit"
"é d'ajouter des effets de studio à vos sons. Par exemple, vous pouvez vouloir "
"ajouter de la réverbération à des parties de votre œuvre, ou de l'écho et peut"
"-être même de la distorsion ou du trémolo à vos lignes de basse."

#: 06-FX.md:10
#, fuzzy
msgid ""
"Sonic Pi provides a very simple yet powerful way of adding FX. It even allows "
"you to chain them (so you can pass your sounds through distortion, then echo a"
"nd then reverb) and also control each individual FX unit with opts (in a simil"
"ar way to giving params to synths and samples). You can even modify the opts o"
"f the FX whilst it's still running. So, for example, you could increase the re"
"verb on your bass throughout the track..."
msgstr ""
"Sonic Pi fournit un moyen très simple mais cependant puissant pour ajouter des"
" effets (FX). Il vous autorise même à les chaîner (ainsi vous pouvez passer vo"
"s sons dans la distorsion, puis dans l'écho, puis dans la réverbération) et au"
"ssi à contrôler chaque unité FX individuellement avec des paramètres (d'une fa"
"çon similaire à la spécification des paramètres pour les synthés et les échant"
"illons). Vous pouvez même modifier les paramètres d'un FX pendant qu'il est en"
"core en train d'agir. Ainsi, par exemple, vous pouvez augmenter la réverbérati"
"on de vos basses tout au long de la piste..."

#: 06-FX.md:18
#, fuzzy
msgid "Guitar Pedals"
msgstr "Pédales de Guitare"

#: 06-FX.md:20
#, fuzzy
msgid ""
"If all of this sounds a bit complicated, don't worry. Once you play around wit"
"h it a little, it will all become quite clear. Before you do though, a simple "
"analogy is that of guitar FX pedals. There are many kinds of FX pedals you can"
" buy. Some add reverb, others distort etc. A guitarist will plug his or her gu"
"itar into one FX pedal - i.e. distortion -, then take another cable and connec"
"t (chain) a reverb pedal. The output of the reverb pedal can then be plugged i"
"nto the amplifier:"
msgstr ""
"Si tout ceci paraît un tantinet compliqué, ne vous inquiétez pas. Une fois que"
" vous aurez joué un peu avec, tout deviendra complètement clair. Avant qu'il e"
"n soit ainsi, faisons une simple analogie avec des pédales FX de guitare. Il y"
" a des tas de sortes de pédales FX que vous pouvez acheter. Quelques unes ajou"
"tent de la réverbération, d'autres de la distorsion, etc. Un guitariste va bra"
"ncher sa guitare à une pédale FX - de distorsion par exemple - puis prendre un"
" autre câble pour lui connecter (chaîner) une pédale de réverbération. La sort"
"ie de la pédale de réverbération pourra alors être branchée à l'amplificateur "
":"

#: 06-FX.md:29
#, no-wrap
#, fuzzy
msgid "Guitar -> Distortion -> Reverb -> Amplifier"
msgstr "Guitare -> Distorsion -> Réverbération -> Amplificateur"

#: 06-FX.md:33
#, fuzzy
msgid ""
"This is called FX chaining. Sonic Pi supports exactly this. Additionally, each"
" pedal often has dials and sliders to allow you to control how much distortion"
", reverb, echo etc. to apply. Sonic Pi also supports this kind of control. Fin"
"ally, you can imagine a guitarist playing whilst someone plays with the FX con"
"trols whilst they're playing. Sonic Pi also supports this - but instead of nee"
"ding someone else to control things for you, that's where the computer steps i"
"n."
msgstr ""
"Cela s'appelle le chaînage des FX. Sonic Pi supporte exactement cela. De plus,"
" chaque pédale a souvent des molettes et des curseurs pour vous permettre de c"
"ontrôler le montant de la distorsion, de la réverbération, de l'écho, etc. à a"
"ppliquer. Sonic Pi supporte aussi ce type de contrôle. Finalement, vous pouvez"
" imaginer un guitariste jouant pendant que quelqu'un joue avec les contrôles F"
"X même s'ils sont en train d'agir. Sonic Pi supporte aussi ceci - mais au lieu"
" d'avoir besoin de quelqu'un d'autre pour contrôler les choses pour vous, c'es"
"t l'ordinateur qui intervient."

#: 06-FX.md:42
#, fuzzy
msgid "Let's explore FX!"
msgstr "Explorons les FX !"

#: 06.1-Adding-FX.md:1
#, fuzzy
msgid "6.1 Adding FX"
msgstr "6.1 Ajout de FX"

#: 06.1-Adding-FX.md:3
#, fuzzy
msgid "Adding FX"
msgstr "Ajout d'effets (FX)"

#: 06.1-Adding-FX.md:5
#, fuzzy
msgid ""
"In this section we'll look at a couple of FX: reverb and echo. We'll see how t"
"o use them, how to control their opts and how to chain them."
msgstr ""
"Dans cette section, nous allons regarder un couple de FX : réverbération et éc"
"ho. Nous allons voir comment les utiliser, comment contrôler leurs paramètres "
"et comment les chaîner."

#: 06.1-Adding-FX.md:9
#, fuzzy
msgid ""
"Sonic Pi's FX system uses blocks. So if you haven't read section 5.1 you might"
" want to take a quick look and then head back."
msgstr ""
"Le système des FX de Sonic Pi utilise les blocs. Donc, si vous n'avez pas lu l"
"a section 5.1, vous pourriez vouloir lui jeter un œil et puis revenir ici."

#: 06.1-Adding-FX.md:12
#, fuzzy
msgid "Reverb"
msgstr "Réverbération"

#: 06.1-Adding-FX.md:14
#, fuzzy
msgid ""
"If we want to use reverb we write `with_fx :reverb` as the special code to our"
" block like this:"
msgstr ""
"Si nous voulons utiliser la réverbération, nous écrivons `with_fx :reverb` en "
"tant qu'entête particulière de notre bloc, comme ceci :"

#: 06.1-Adding-FX.md:17
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:27
#, fuzzy
msgid ""
"Now play this code and you'll hear it played with reverb. It sounds good, does"
"n't it! Everything sounds pretty nice with reverb."
msgstr ""
"Maintenant exécutez ce code et vous l'entendrez joué avec réverbération. Ça so"
"nne bien, n'est-ce pas ! Toute chose sonne plutôt agréablement avec de la réve"
"rbération."

#: 06.1-Adding-FX.md:30
#, fuzzy
msgid "Now let's look what happens if we have code outside the do/end block:"
msgstr ""
"Maintenant, voyons ce qui se passe si nous avons du code en dehors du bloc do/"
"end :"

#: 06.1-Adding-FX.md:32
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"
msgstr ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"

#: 06.1-Adding-FX.md:45
#, fuzzy
msgid ""
"Notice how the final `play 55` isn't played with reverb. This is because it is"
" *outside* the do/end block, so it isn't captured by the reverb FX."
msgstr ""
"Remarquez que le dernier `play 55` n'est pas joué avec de la réverbération. C'"
"est parce qu'il est *en dehors* du bloc do/end, ainsi le FX de réverbération n"
"'agit pas sur lui."

#: 06.1-Adding-FX.md:48
#, fuzzy
msgid ""
"Similarly, if you make sounds before the do/end block, they also won't be capt"
"ured:"
msgstr ""
"Similairement, si vous placez des sons avant le bloc do/end, ils ne seront pas"
" non plus affectés :"

#: 06.1-Adding-FX.md:51
#, no-wrap
msgid ""
"play 55\n"
"sleep 1\n"
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"
msgstr ""
"play 55\n"
"sleep 1\n"
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"

#: 06.1-Adding-FX.md:67
#, fuzzy
msgid "Echo"
msgstr "Écho"

#: 06.1-Adding-FX.md:69
#, fuzzy
msgid "There are many FX to choose from. How about some echo?"
msgstr "Il y a beaucoup de FX au choix. Que dire au sujet de l'écho ?"

#: 06.1-Adding-FX.md:71
#, no-wrap
msgid ""
"with_fx :echo do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:81
#, fuzzy
msgid ""
"One of the powerful aspects of Sonic Pi's FX blocks is that they may be passed"
" opts similar to opts we've already seen with `play` and `sample`. For example"
" a fun echo opt to play with is `phase:` which represents the duration of a gi"
"ven echo in beats. Let's make the echo slower:"
msgstr ""
"Un des puissants aspects des blocs FX de Sonic Pi est qu'on peut leur passer d"
"es paramètres de manière similaire aux paramètres que nous avons déjà vus avec"
" `play` et `sample`. Par exemple, un paramètre sympa d'écho avec lequel jouer "
"est `phase:`. Il représente la durée d'un écho en temps musicaux. Faisons l'éc"
"ho plus lent :"

#: 06.1-Adding-FX.md:87
#, no-wrap
msgid ""
"with_fx :echo, phase: 0.5 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo, phase: 0.5 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:97
#, fuzzy
msgid "Let's also make the echo faster:"
msgstr "Faisons aussi l'écho plus rapide :"

#: 06.1-Adding-FX.md:99
#, no-wrap
msgid ""
"with_fx :echo, phase: 0.125 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo, phase: 0.125 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:109
#, fuzzy
msgid ""
"Let's make the echo take longer to fade away by setting the `decay:` time to 8"
" beats:"
msgstr ""
"Faisons décroître l'écho plus longuement en spécifiant la durée de `decay:` à "
"8 temps :"

#: 06.1-Adding-FX.md:112
#, no-wrap
msgid ""
"with_fx :echo, phase: 0.5, decay: 8 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo, phase: 0.5, decay: 8 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:122
#, fuzzy
msgid "Nesting FX"
msgstr "Imbrication des FX"

#: 06.1-Adding-FX.md:124
#, fuzzy
msgid ""
"One of the most powerful aspects of the FX blocks is that you can nest them. T"
"his allows you to very easily chain FX together. For example, what if you want"
"ed to play some code with echo and then with reverb? Easy, just put one inside"
" the other:"
msgstr ""
"Un des aspects les plus puissants des blocs FX est que vous pouvez les imbriqu"
"er. Ce qui vous permet de chaîner facilement les FX entre eux. Par exemple, qu"
"e faire si vous vouliez jouer du code avec de l'écho et ensuite de la réverbér"
"ation ? Facile, mettez simplement l'un à l'intérieur de l'autre :"

#: 06.1-Adding-FX.md:129
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  with_fx :echo, phase: 0.5, decay: 8 do\n"
"    play 50\n"
"    sleep 0.5\n"
"    sample :elec_blup\n"
"    sleep 0.5\n"
"    play 62\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  with_fx :echo, phase: 0.5, decay: 8 do\n"
"    play 50\n"
"    sleep 0.5\n"
"    sample :elec_blup\n"
"    sleep 0.5\n"
"    play 62\n"
"  end\n"
"end"

#: 06.1-Adding-FX.md:141
#, fuzzy
msgid ""
"Think about the audio flowing from the inside out. The sound of all the code w"
"ithin the inner do/end block such as `play 50` is first sent to the echo FX an"
"d the sound of the echo FX is in turn sent out to the reverb FX."
msgstr ""
"Pensez à du son provenant de l'intérieur et se propageant vers l'extérieur. Le"
" son de tout le code situé dans le bloc intérieur dont `play 50` est d'abord e"
"nvoyé vers le FX écho et le son produit par le FX écho est à son tour envoyé v"
"ers le FX réverbération."

#: 06.1-Adding-FX.md:146
#, fuzzy
msgid ""
"We may use very deep nestings for crazy results. However, be warned, the FX ca"
"n use a lot of resources and when you nest them you're effectively running mul"
"tiple FX simultaneously. So be sparing with your use of FX especially on low p"
"owered platforms such as the Raspberry Pi."
msgstr ""
"Nous pouvons utiliser des imbrications très profondes pour des résultats délir"
"ants. Toutefois, soyez averti, les FX peuvent utiliser beaucoup de ressources "
"et quand vous les imbriquez, vous allez effectivement faire agir de multiples "
"FX simultanément. Donc soyez économe avec l'utilisation des FX, en particulier"
" sur des plateformes peu puissantes telles que le Raspberry Pi."

#: 06.1-Adding-FX.md:151
#, fuzzy
msgid "Discovering FX"
msgstr "À la découverte des FX"

#: 06.1-Adding-FX.md:153
#, fuzzy
msgid ""
"Sonic Pi ships with a large number of FX for you to play with. To find out whi"
"ch ones are available, click on FX in the far left of this help system and you"
"'ll see a list of available options. Here's a list of some of my favourites:"
msgstr ""
"Sonic Pi est livré avec un grand nombre de FX avec lesquels vous pouvez jouer."
" Pour trouver ceux qui sont disponibles, cliquez sur \"FX\" dans le menu horizon"
"tal du système d'aide et vous verrez une liste des options disponibles. Voici "
"une liste de mes préférés :"

#: 06.1-Adding-FX.md:158
msgid "wobble,"
msgstr ""

#: 06.1-Adding-FX.md:159
msgid "reverb,"
msgstr ""

#: 06.1-Adding-FX.md:160
msgid "echo,"
msgstr ""

#: 06.1-Adding-FX.md:161
msgid "distortion,"
msgstr ""

#: 06.1-Adding-FX.md:162
msgid "slicer"
msgstr ""

#: 06.1-Adding-FX.md:164
#, fuzzy
msgid "Now go crazy and add FX everywhere for some amazing new sounds!"
msgstr ""
"Maintenant, défoulez-vous et ajoutez des effets partout pour obtenir d'étonnan"
"ts sons nouveaux !"

#: 06.2-FX-in-Practice.md:1
#, fuzzy
msgid "6.2 FX in Practice"
msgstr "6.2 FX en Pratique"

#: 06.2-FX-in-Practice.md:3
#, fuzzy
msgid "FX in Practice"
msgstr "FX en pratique"

#: 06.2-FX-in-Practice.md:5
#, fuzzy
msgid ""
"Although they look deceptively simple on the outside, FX are actually quite co"
"mplex beasts internally. Their simplicity often entices people to overuse them"
" in their pieces. This may be fine if you have a powerful machine, but if - li"
"ke me - you use a Raspberry Pi to jam with, you need to be careful about how m"
"uch work you ask it to do if you want to ensure the beats keep flowing."
msgstr ""
"Bien qu'ils paraissent trompeusement simples extérieurement, les FX sont réell"
"ement des bêtes plutôt complexes à l'intérieur. Leur simplicité incite souvent"
" les gens à en abuser dans leurs morceaux. Ce peut être sympathique si vous av"
"ez une machine puissante, mais si - comme moi - vous utilisez un Raspberry Pi "
"pour improviser, vous devez prendre garde à la somme de travail que vous lui d"
"emandez de faire si vous voulez vous assurer que la cadence reste fluide."

#: 06.2-FX-in-Practice.md:12
#, fuzzy
msgid "Consider this code:"
msgstr "Considérez ce code :"

#: 06.2-FX-in-Practice.md:14
#, no-wrap
msgid ""
"loop do\n"
"  with_fx :reverb do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"loop do\n"
"  with_fx :reverb do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:23
#, fuzzy
msgid ""
"In this code we're playing note 60 with a very short release time, so it's a s"
"hort note. We also want reverb so we've wrapped it in a reverb block. All good"
" so far. Except..."
msgstr ""
"Dans ce code, nous jouons la note 60 avec une durée d'extinction très courte, "
"c'est donc une note courte. Nous voulons aussi de la réverbération, alors nous"
" l'avons imbriqué dans un bloc de réverbération. Jusqu'à maintenant, tout est "
"bon. Sauf que..."

#: 06.2-FX-in-Practice.md:27
#, fuzzy
msgid ""
"Let's look at what the code does. First we have a `loop` which means everythin"
"g inside of it is repeated forever. Next we have a `with_fx` block. This means"
" we will create a new reverb FX *every time we loop*. This is like having a se"
"parate FX reverb pedal for every time you pluck a string on a guitar. It's coo"
"l that you can do this, but it's not always what you want. For example, this c"
"ode will struggle to run nicely on a Raspberry Pi. All the work of creating th"
"e reverb and then waiting until it needs to be stopped and removed is all hand"
"led by `with_fx` for you, but this takes CPU power which may be precious."
msgstr ""
"Regardons ce que fait le code. En premier lieu, nous avons une boucle (`loop`)"
", ce qui signifie que tout ce qui est à l'intérieur est répété sans fin. Ensui"
"te, nous avons un bloc `with_fx`. Ceci veut dire que nous allons créer un nouv"
"el FX de réverbération *chaque fois que nous bouclons*. C'est comme si nous di"
"sposions d'une pédale de réverbération distincte à chaque fois que nous pincio"
"ns une corde sur une guitare. C'est super de pouvoir faire ça, mais ce n'est p"
"as toujours ce que vous voulez. Par exemple, ce code va avoir du mal à s'exécu"
"ter comme il faut sur un Raspberry Pi. Tout le travail de création de la réver"
"bération puis d'attente jusqu'à ce qu'elle doive être stoppée et enlevée est c"
"omplètement pris en charge par `with_fx` pour vous, mais ceci prend de la puis"
"sance du microprocesseur (CPU) qui peut être précieuse."

#: 06.2-FX-in-Practice.md:37
#, fuzzy
msgid ""
"How do we make it more similar to a traditional setup where our guitarist has "
"just *one* reverb pedal which all sounds pass through? Simple:"
msgstr ""
"Comment le faire d'une manière plus proche d'une installation traditionnelle o"
"ù notre guitariste n'a *qu'une* pédale de réverbération dans laquelle passent "
"tous les sons ? Simple :"

#: 06.2-FX-in-Practice.md:41
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  loop do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  loop do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:50
#, fuzzy
msgid ""
"We put our loop *inside* the `with_fx` block. This way we only create a single"
" reverb for all notes played in our loop. This code is a lot more efficient an"
"d would work fine on a Raspberry Pi."
msgstr ""
"Nous mettons notre boucle *à l'intérieur* du bloc `with_fx`. De cette façon, n"
"ous créons seulement une unique réverbération pour toutes les notes jouées dan"
"s notre boucle. Ce code est beaucoup plus efficace et fonctionnerait bien sur "
"un Raspberry Pi."

#: 06.2-FX-in-Practice.md:54
#, fuzzy
msgid "A compromise is to use `with_fx` over an iteration within a loop:"
msgstr ""
"Un compromis est d'utiliser `with_fx` sur une itération à l'intérieur d'une bo"
"ucle :"

#: 06.2-FX-in-Practice.md:56
#, no-wrap
msgid ""
"loop do\n"
"  with_fx :reverb do\n"
"    16.times do\n"
"      play 60, release: 0.1\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"loop do\n"
"  with_fx :reverb do\n"
"    16.times do\n"
"      play 60, release: 0.1\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:67
#, fuzzy
msgid ""
"This way we've lifted the `with_fx` out of the inner part of the `loop` and we"
"'re now creating a new reverb every 16 notes."
msgstr ""
"De cette façon, nous avons remonté le `with_fx` en dehors de la partie la plus"
" intérieure de la boucle, et nous créons maintenant une nouvelle réverbération"
" toutes les 16 notes."

#: 06.2-FX-in-Practice.md:70
#, fuzzy
msgid ""
"This is such a common pattern that `with_fx` supports an opt to do exactly thi"
"s but without having to write the `16.times` block:"
msgstr ""
"C'est quelque chose que l'on fait si souvent que `with_fx` supporte une option"
" pour faire exactement cela sans devoir écrire le bloc `16.times`:"

#: 06.2-FX-in-Practice.md:73
#, no-wrap
msgid ""
"loop do\n"
"  with_fx :reverb, reps: 16 do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"loop do\n"
"  with_fx :reverb, reps: 16 do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:82
#, fuzzy
msgid ""
"Both the `reps: 16` and `16.times do` examples will behave identically. The `r"
"eps: 16` essentially repeats the code in the `do/end` block 16 times so you ca"
"n use them both interchangeably and choose the one that feels best for you."
msgstr ""
"Les deux exemples `reps: 16` et `16.times do` se comporteront de la même maniè"
"re. L'exemple avec `reps: 16` répète en fait le code dans le bloc `do/end` sei"
"ze fois donc vous pouvez choisir l'un ou l'autre en fonction de vos préférence"
"s."

#: 06.2-FX-in-Practice.md:87
#, fuzzy
msgid ""
"Remember, there are no mistakes, just possibilities. However, some of these ap"
"proaches will have a different sound and also different performance characteri"
"stics. So play around and use the approach that sounds best to you whilst also"
" working within the performance constraints of your platform."
msgstr ""
"Rappelez-vous, il n'y a pas de fautes, juste des possibilités. Toutefois, cert"
"aines de ces approches donneront un son différent et auront des caractéristiqu"
"es de performance différentes. Donc, jouez et utilisez l'approche qui sonne le"
" mieux pour vous tout en restant dans les contraintes de performance de votre "
"plateforme."

#: 07-Control.md:1
#, fuzzy
msgid "7 Control"
msgstr "7 Contrôle"

#: 07-Control.md:3
#, fuzzy
msgid "Controlling running sounds"
msgstr "Contrôle des sons en cours d'écoute"

#: 07-Control.md:5
#, fuzzy
msgid ""
"So far we've looked at how you can trigger synths and samples, and also how to"
" change their default opts such as amplitude, pan, envelope settings and more."
" Each sound triggered is essentially its own sound with its own list of option"
"s set for the duration of the sound."
msgstr ""
"Pour l'instant, nous avons regardé comment déclencher des sons de synthé et de"
"s échantillons, et aussi comment changer leur paramètres par défaut comme ampl"
"itude, balance, paramètres d'enveloppe, et plus. Chaque son émis est essentiel"
"lement son propre son avec son propre ensemble de paramètres fixés pour la dur"
"ée du son."

#: 07-Control.md:11
#, fuzzy
msgid ""
"Wouldn't it also be cool if you could change a sound's opts whilst it's still "
"playing, just like you might bend a string of a guitar whilst it's still vibra"
"ting?"
msgstr ""
"Ne serait-ce pas sympathique si nous pouvions changer les paramètres d'un son "
"pendant qu'il est encore en train d'être joué, juste comme vous pourriez tendr"
"e une corde de guitare pendant qu'elle est en train de vibrer ?"

#: 07-Control.md:15
#, fuzzy
msgid "You're in luck - this section will show you how to do exactly this."
msgstr ""
"Vous êtes chanceux - cette section va vous montrer précisément comment le fair"
"e."

#: 07.1-Controlling-Running-Synths.md:1
#, fuzzy
msgid "7.1 Controlling Running Synths"
msgstr "7.1 Contrôle des synthés en cours de jeu"

#: 07.1-Controlling-Running-Synths.md:3
#, fuzzy
msgid "Controlling Running Synths"
msgstr "Contrôle des synthés en train de jouer"

#: 07.1-Controlling-Running-Synths.md:5
#, fuzzy
msgid ""
"So far we've only concerned ourselves with triggering new sounds and FX. Howev"
"er, Sonic Pi gives us the ability to manipulate and control currently running "
"sounds. We do this by using a variable to capture a reference to a synth:"
msgstr ""
"Pour l'instant, nous nous sommes seulement préoccupés de déclencher de nouveau"
"x sons et effets (FX). Toutefois, Sonic Pi nous offre la capacité de manipuler"
" et de contrôler les sons pendant qu'il sont joués. Nous le faisons en utilisa"
"nt une variable pour mémoriser la référence à un synthé."

#: 07.1-Controlling-Running-Synths.md:10
#, no-wrap
msgid "s = play 60, release: 5"
msgstr "s = play 60, release: 5"

#: 07.1-Controlling-Running-Synths.md:14
#, fuzzy
msgid ""
"Here, we have a run-local variable `s` which represents the synth playing note"
" 60. Note that this is *run-local* - you can't access it from other runs like "
"functions."
msgstr ""
"Ici, nous avons une variable locale d'exécution `s` qui représente le synthé j"
"ouant la note 60. Notez que c'est *local à l'exécution* - vous ne pouvez pas y"
" accéder depuis d'autres exécutions comme les fonctions."

#: 07.1-Controlling-Running-Synths.md:18
#, fuzzy
msgid "Once we have `s`, we can start controlling it via the `control` function:"
msgstr ""
"Une fois que nous avons `s`, nous pouvons commencer à le contrôler via la fonc"
"tion `control`:"

#: 07.1-Controlling-Running-Synths.md:21 07.3-Sliding-Parameters.md:13
#, no-wrap
msgid ""
"s = play 60, release: 5\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"
msgstr ""
"s = play 60, release: 5\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"

#: 07.1-Controlling-Running-Synths.md:31
#, fuzzy
msgid ""
"The thing to notice is that we're not triggering 4 different synths here - we'"
"re just triggering one synth and then change the pitch 3 times afterwards, whi"
"le it's playing."
msgstr ""
"La chose à remarquer est que nous ne sommes pas en train de déclencher 4 synth"
"és différents - Nous en déclenchons seulement un et puis nous changeons ensuit"
"e 3 fois la hauteur, pendant qu'il joue."

#: 07.1-Controlling-Running-Synths.md:35
#, fuzzy
msgid ""
"We can pass any of the standard opts to `control`, so you can control things l"
"ike `amp:`, `cutoff:` or `pan:`."
msgstr ""
"Nous pouvons passer n'importe quel paramètre standard à `control`, vous pouvez"
" donc contrôler des choses telles que `amp:`, `cutoff:` ou `pan`."

#: 07.1-Controlling-Running-Synths.md:38
#, fuzzy
msgid "Non-controllable Options"
msgstr "Paramètres non contrôlables"

#: 07.1-Controlling-Running-Synths.md:40
#, fuzzy
msgid ""
"Some of the opts can't be controlled once the synth has started. This is the c"
"ase for all the ADSR envelope parameters. You can find out which opts are cont"
"rollable by looking at their documentation in the help system. If the document"
"ation says *Can not be changed once set*, you know it's not possible to contro"
"l the opt after the synth has started."
msgstr ""
"Quelques paramètres ne peuvent pas être contrôlés une fois que le synthé joue."
" C'est le cas pour tous les paramètres d'enveloppe ADSR. Vous pouvez trouver q"
"uels paramètres sont contrôlables en regardant leur documentation dans le syst"
"ème d'aide. Si la documentation dit *Can not be changed once set (ne peut être"
" modifié une fois attribué)*, vous savez que ce n'est pas possible de contrôle"
"r le paramètre après que le synthé ait commencé à jouer."

#: 07.2-Controlling-FX.md:1
#, fuzzy
msgid "7.2 Controlling FX"
msgstr "7.2 Contrôle des effets (FX)"

#: 07.2-Controlling-FX.md:3
#, fuzzy
msgid "Controlling FX"
msgstr "Contrôle des effets (FX)"

#: 07.2-Controlling-FX.md:5
#, fuzzy
msgid ""
"It is also possible to control FX, although this is achieved in a slightly dif"
"ferent way:"
msgstr ""
"Il est aussi possible de contrôler les FX, bien que ce soit accompli d'une man"
"ière légèrement différente :"

#: 07.2-Controlling-FX.md:8
#, no-wrap
msgid ""
"with_fx :reverb do |r|\n"
"  play 50\n"
"  sleep 0.5\n"
"  control r, mix: 0.7\n"
"  play 55\n"
"  sleep 1\n"
"  control r, mix: 0.9\n"
"  sleep 1\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :reverb do |r|\n"
"  play 50\n"
"  sleep 0.5\n"
"  control r, mix: 0.7\n"
"  play 55\n"
"  sleep 1\n"
"  control r, mix: 0.9\n"
"  sleep 1\n"
"  play 62\n"
"end"

#: 07.2-Controlling-FX.md:21
#, fuzzy
msgid ""
"Instead of using a variable, we use the goalpost parameters of the do/end bloc"
"k. Inside the `|` bars, we need to specify a unique name for our running FX wh"
"ich we then reference from the containing do/end block. This behaviour is iden"
"tical to using parameterised functions."
msgstr ""
"Au lieu d'utiliser une variable, nous utilisons le paramètre cible d'un bloc d"
"o/end. A l'intérieur des barres verticales `|`, nous devons attribuer un nom u"
"nique à notre FX en cours, nom que nous référençons alors depuis l'intérieur d"
"u bloc do/end."

#: 07.2-Controlling-FX.md:26
#, fuzzy
msgid "Now go and control some synths and FX!"
msgstr "Maintenant, allez et contrôlez des synthés et des FX !"

#: 07.3-Sliding-Parameters.md:1
#, fuzzy
msgid "7.3 Sliding Options"
msgstr "7.3 Paramètres glissants"

#: 07.3-Sliding-Parameters.md:3
#, fuzzy
msgid "Sliding Opts"
msgstr "Paramètres glissants"

#: 07.3-Sliding-Parameters.md:5
#, fuzzy
msgid ""
"Whilst exploring the synth and FX opts, you might have noticed that there are "
"a number of opts ending with `_slide`. You might have even tried calling them "
"and seeing no effect. This is because they're not normal parameters, they're s"
"pecial opts that only work when you control synths as introduced in the previo"
"us section."
msgstr ""
"Pendant l'exploration des arguments de pilotage des synthés et des FX, vous po"
"urriez avoir remarqué qu'il y a un certain nombre de paramètres finissant par "
"`_slide`. Vous avez peut-être même essayé de les appeler et n'avez constaté au"
"cun effet. C'est parce que ce ne sont pas des paramètres normaux, ce sont des "
"paramètres spéciaux qui n'agissent que quand vous contrôlez les synthés comme "
"cela est décrit dans la section précédente."

#: 07.3-Sliding-Parameters.md:11
#, fuzzy
msgid "Consider the following example:"
msgstr "Considérez l'exemple suivant :"

#: 07.3-Sliding-Parameters.md:23
#, fuzzy
msgid ""
"Here, you can hear the synth pitch changing immediately on each `control` call"
". However, we might want the pitch to slide between changes. As we're controll"
"ing the `note:` parameter, to add slide, we need to set the `note_slide` param"
"eter of the synth:"
msgstr ""
"Ici, vous pouvez entendre la hauteur du son changer instantanément après l'app"
"el à `control`. Toutefois, nous pourrions souhaiter que la hauteur glisse entr"
"e les changements. Comme nous sommes en train de contrôler le paramètre `note:"
"`, pour ajouter un glissement, nous devons fixer le paramètre `note_slide` du "
"synthé :"

#: 07.3-Sliding-Parameters.md:28
#, no-wrap
msgid ""
"s = play 60, release: 5, note_slide: 1\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"
msgstr ""
"s = play 60, release: 5, note_slide: 1\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"

#: 07.3-Sliding-Parameters.md:38
#, fuzzy
msgid ""
"Now we hear the notes being bent between the `control` calls. It sounds nice, "
"doesn't it? You can speed up the slide by using a shorter time such as `note_s"
"lide: 0.2` or slow it down by using a longer slide time."
msgstr ""
"Maintenant, nous entendons la hauteur des notes glisser entre les appels à `co"
"ntrol`. Ça sonne agréablement, n'est-ce pas ? Vous pouvez accélérer le glissem"
"ent en utilisant une durée plus courte comme `note_slide: 0.2` ou le ralentir "
"en utilisant une durée de glissement plus longue."

#: 07.3-Sliding-Parameters.md:43
#, fuzzy
msgid ""
"Every parameter that can be controlled has a corresponding `_slide` parameter "
"for you to play with."
msgstr ""
"Chaque paramètre qui peut être contrôlé a un paramètre correspondant avec `_sl"
"ide` à votre disposition."

#: 07.3-Sliding-Parameters.md:46
#, fuzzy
msgid "Sliding is sticky"
msgstr "Le glissement est rémanent"

#: 07.3-Sliding-Parameters.md:48
#, fuzzy
msgid ""
"Once you've set a `_slide` parameter on a running synth, it will be remembered"
" and used every time you slide the corresponding parameter. To stop sliding yo"
"u must set the `_slide` value to 0 before the next `control` call."
msgstr ""
"Une fois que vous avez fixé un paramètre `_slide` à un synthé en cours de jeu,"
" il sera mémorisé et appliqué à chaque fois que le paramètre correspondant ser"
"a utilisé. Pour arrêter le glissement, vous devez fixer la valeur de `_slide` "
"à 0 avant l'appel suivant à `control`."

#: 07.3-Sliding-Parameters.md:53
#, fuzzy
msgid "Sliding FX Opts"
msgstr "Paramètres FX glissants"

#: 07.3-Sliding-Parameters.md:55
#, fuzzy
msgid "It is also possible to slide FX opts:"
msgstr "Il est aussi possible de faire glisser les paramètres FX :"

#: 07.3-Sliding-Parameters.md:57
#, no-wrap
msgid ""
"with_fx :wobble, phase: 1, phase_slide: 5 do |e|\n"
"  use_synth :dsaw\n"
"  play 50, release: 5\n"
"  control e, phase: 0.025\n"
"end"
msgstr ""
"with_fx :wobble, phase: 1, phase_slide: 5 do |e|\n"
"  use_synth :dsaw\n"
"  play 50, release: 5\n"
"  control e, phase: 0.025\n"
"end"

#: 07.3-Sliding-Parameters.md:65
#, fuzzy
msgid ""
"Now have fun sliding things around for smooth transitions and flowing control."
".."
msgstr ""
"Maintenant ayez du plaisir à faire glisser les choses pour obtenir des transit"
"ions douces et un contrôle fluide..."

#: 08-Data-Structures.md:1
#, fuzzy
msgid "8 Data Structures"
msgstr "8 Structures de données"

#: 08-Data-Structures.md:3
#, fuzzy
msgid "Data Structures"
msgstr "Structures de données"

#: 08-Data-Structures.md:5
#, fuzzy
msgid "A very useful tool in a programmer's toolkit is a data structure."
msgstr ""
"Un outil très utile de la boîte à outil d'un programmeur est la structuration "
"des données."

#: 08-Data-Structures.md:7
#, fuzzy
msgid ""
"Sometimes you may wish to represent and use more than one thing. For example, "
"you may find it useful to have a series of notes to play one after another. Pr"
"ogramming languages have data structures to allow you do exactly this."
msgstr ""
"Quelquefois, vous souhaiteriez représenter et utiliser plus d'une seule chose "
"à la fois, vous pourriez trouver utile de disposer d'une série de notes à joue"
"r l'une après l'autre. Les langages de programmation offrent des structures de"
" données pour autoriser précisément ceci."

#: 08-Data-Structures.md:12
#, fuzzy
msgid ""
"There are many exciting and exotic data structures available to programmers - "
"and people are always inventing new ones. However, for now we only really need"
" to consider a very simple data structure - the list."
msgstr ""
"Il y a beaucoup de structures de données passionnantes et exotiques à disposit"
"ion des programmeurs - et on en invente toujours de nouvelles. Cependant, pour"
" l'instant nous avons seulement et réellement besoin de nous intéresser à une "
"structure de données très simple - la liste."

#: 08-Data-Structures.md:16
#, fuzzy
msgid ""
"Let's look at it in more detail. We'll cover its basic form and then also how "
"lists can be used to represent scales and chords."
msgstr ""
"Regardons-la de manière plus détaillée. Nous allons décrire sa forme basique e"
"t ensuite montrer comment l'utiliser pour représenter des gammes et des accord"
"s."

#: 08.1-Lists.md:1
#, fuzzy
msgid "8.1 Lists"
msgstr "8.1 Listes"

#: 08.1-Lists.md:3
#, fuzzy
msgid "Lists"
msgstr "Listes"

#: 08.1-Lists.md:5
#, fuzzy
msgid ""
"In this section we'll take a look at a data structure which is very useful - t"
"he list. We met it very briefly before in the section on randomisation when we"
" randomly chose from a list of notes to play:"
msgstr ""
"Dans cette section, nous allons voir une structure de données qui est très uti"
"le - la liste. Nous l'avons rencontrée brièvement auparavant dans la section s"
"ur la randomisation quand nous choisissions aléatoirement des notes à jouer da"
"ns une liste :"

#: 08.1-Lists.md:9
#, no-wrap
msgid "play choose([50, 55, 62])"
msgstr "play choose([50, 55, 62])"

#: 08.1-Lists.md:13
#, fuzzy
msgid ""
"In this section we'll explore using lists to also represent chords and scales."
" First let's recap how we might play a chord. Remember that if we don't use `s"
"leep`, sounds all happen at the same time:"
msgstr ""
"Dans cette section, nous allons explorer l'utilisation des listes également po"
"ur représenter des accords et des gammes. En premier lieu, récapitulons commen"
"t nous jouerions un accord. Souvenez-vous que si nous n'utilisons pas `sleep`,"
" les sons arrivent tous au même moment :"

#: 08.1-Lists.md:17
#, no-wrap
msgid ""
"play 52\n"
"play 55\n"
"play 59"
msgstr ""
"play 52\n"
"play 55\n"
"play 59"

#: 08.1-Lists.md:23
#, fuzzy
msgid "Let's look at other ways to represent this code."
msgstr "Regardons une autre façon d'écrire ce code."

#: 08.1-Lists.md:25
#, fuzzy
msgid "Playing a List"
msgstr "Jeu d'une liste"

#: 08.1-Lists.md:27
#, fuzzy
msgid ""
"One option is to place all the notes in a list: `[52, 55, 59]`. Our friendly `"
"play` function is smart enough to know how to play a list of notes. Try it:"
msgstr ""
"Une option est de placer toutes les notes dans une liste : `[52, 55, 59]`. Not"
"re sympathique fonction `play` est assez évoluée pour savoir comment jouer une"
" liste de notes. Essayez-le :"

#: 08.1-Lists.md:31
#, no-wrap
msgid "play [52, 55, 59]"
msgstr "play [52, 55, 59]"

#: 08.1-Lists.md:35
#, fuzzy
msgid ""
"Ooh, that's already nicer to read. Playing a list of notes doesn't stop you fr"
"om using any of the parameters as normal:"
msgstr ""
"Ooh, c'est déjà plus agréable à lire. Jouer une liste de notes ne vous empêche"
" pas d'utiliser n'importe quel paramètre des spécifications :"

#: 08.1-Lists.md:38
#, no-wrap
msgid "play [52, 55, 59], amp: 0.3"
msgstr "play [52, 55, 59], amp: 0.3"

#: 08.1-Lists.md:42
#, fuzzy
msgid ""
"Of course, you can also use the traditional note names instead of the MIDI num"
"bers:"
msgstr ""
"Bien sûr, vous pouvez aussi utiliser les noms traditionnels des notes (en nota"
"tion anglaise) à la place des nombres de la norme MIDI :"

#: 08.1-Lists.md:45
#, no-wrap
msgid "play [:E3, :G3, :B3]"
msgstr "play [:E3, :G3, :B3]"

#: 08.1-Lists.md:49
#, fuzzy
msgid ""
"Now those of you lucky enough to have studied some music theory might recognis"
"e that chord as *E Minor* played in the 3rd octave."
msgstr ""
"Maintenant, ceux qui sont assez chanceux pour avoir étudié quelques notions de"
" solfège, pourraient reconnaître l'accord de *Mi mineur* joué à la 3ème octave"
"."

#: 08.1-Lists.md:52
#, fuzzy
msgid "Accessing a List"
msgstr "Accès à une liste"

#: 08.1-Lists.md:54
#, fuzzy
msgid ""
"Another very useful feature of a list is the ability to get information out of"
" it. This may sound a bit strange, but it's no more complicated than someone a"
"sking you to turn a book to page 23. With a list, you'd say, what's the elemen"
"t at index 23? The only strange thing is that in programming indexes usually s"
"tart at 0 not 1."
msgstr ""
"Une autre caractéristique très utile d'une liste est d'en extraire de l'inform"
"ation. Ceci peut paraître étrange, mais ce n'est pas plus compliqué que de tou"
"rner les pages d'un livre jusqu'à la page 23. Avec une liste, vous diriez : qu"
"el est l'élément à l'index 23 ? La seule chose étrange est qu'en programmation"
", les index commencent généralement à 0 et non pas 1."

#: 08.1-Lists.md:60
#, fuzzy
msgid "With list indexes we don't count 1, 2, 3... Instead we count 0, 1, 2..."
msgstr "Avec les index de liste, nous ne comptons pas 1, 2, 3... mais 0, 1, 2..."

#: 08.1-Lists.md:62
#, fuzzy
msgid "Let's look at this in a little more detail. Take a look at this list:"
msgstr "Regardons ceci en un peu plus de détails. Jetez un œil sur cette liste :"

#: 08.1-Lists.md:64
#, no-wrap
msgid "[52, 55, 59]"
msgstr "[52, 55, 59]"

#: 08.1-Lists.md:68
#, fuzzy
msgid ""
"There's nothing especially scary about this. Now, what's the second element in"
" that list? Yes, of course, it's `55`. That was easy. Let's see if we can get "
"the computer to answer it for us too:"
msgstr ""
"Il n'y a rien là de particulièrement effrayant. Maintenant, quel est le second"
" élément de la liste ? Oui, bien sûr, c'est `55`. C'était facile. Regardons si"
" nous pouvons obtenir la réponse de l'ordinateur :"

#: 08.1-Lists.md:72 08.4-Rings.md:12
#, no-wrap
msgid "puts [52, 55, 59][1]"
msgstr "puts [52, 55, 59][1]"

#: 08.1-Lists.md:76
#, fuzzy
msgid ""
"OK, that looks a bit weird if you've never seen anything like it before. Trust"
" me though, it's not too hard. There are three parts to the line above: the wo"
"rd `puts` , our list `52, 55, 59` and our index `[1]`. Firstly we're saying `p"
"uts` because we want Sonic Pi to print the answer out for us in the log. Next,"
" we're giving it our list, and finally our index is asking for the second elem"
"ent. We need to surround our index with square brackets and because counting s"
"tarts at `0`, the index for the second element is `1`. Look:"
msgstr ""
"OK, ça semble un peu bizarre si vous n'avez jamais vu quelque chose de la sort"
"e auparavant. Faites-moi confiance toutefois, ce n'est pas trop dur. Il y a tr"
"ois parties dans la ligne ci-dessus : le mot `puts`, notre liste `52, 55, 59` "
"et notre index `[1]`. En premier, nous disons `puts` parce que nous voulons qu"
"e Sonic Pi nous affiche la réponse dans le panneau \"trace\". Ensuite, nous lui "
"donnons notre liste, et enfin notre index qui demande le second élément. Nous "
"devons encadrer notre index avec des crochets et parce que le compte commence "
"à 0, l'index pour le second élément est `1`. Regardez :"

#: 08.1-Lists.md:85
#, no-wrap
#, fuzzy
msgid ""
"# indexes:  0   1   2\n"
"           [52, 55, 59]"
msgstr ""
"# index :  0   1   2\n"
"          [52, 55, 59]"

#: 08.1-Lists.md:90
#, fuzzy
msgid ""
"Try running the code `puts [52, 55, 59][1]` and you'll see `55` pop up in the "
"log. Change the index `1` to other indexes, try longer lists and think about h"
"ow you might use a list in your next code jam. For example, what musical struc"
"tures might be represented as a series of numbers..."
msgstr ""
"Essayez d'exécuter le code `puts [52, 55, 59][1]` et vous verrez `55` apparaît"
"re dans le panneau \"trace\". Changez l'index `1` par d'autres valeurs, essayez "
"des listes plus longues et pensez à la façon dont vous pourriez utiliser une l"
"iste dans votre prochaine improvisation avec du code. Par exemple, quelles str"
"uctures musicales pourraient être représentées par une série de nombres..."

#: 08.2-Chords.md:1
#, fuzzy
msgid "8.2 Chords"
msgstr "8.2 Accords"

#: 08.2-Chords.md:5
#, fuzzy
msgid ""
"Sonic Pi has built-in support for chord names which will return lists. Try it "
"for yourself:"
msgstr ""
"Sonic Pi incorpore le support des noms d'accord, lequel retourne des listes. E"
"ssayez-le vous-même :"

#: 08.2-Chords.md:8
#, no-wrap
msgid "play chord(:E3, :minor)"
msgstr "play chord(:E3, :minor)"

#: 08.2-Chords.md:12
#, fuzzy
msgid ""
"Now, we're really getting somewhere. That looks a lot more pretty than the raw"
" lists (and is easier to read for other people). So what other chords does Son"
"ic Pi support? Well, a *lot*. Try some of these:"
msgstr ""
"Maintenant, nous avons vraiment progressé. Ça parait beaucoup plus joli que le"
"s listes brutes (et c'est plus facile à lire pour les autres). Alors quels aut"
"res accords Sonic Pi supporte-t-il ? Eh bien, un *tas*. Essayez quelques uns p"
"armi ceux-ci :"

#: 08.2-Chords.md:16
msgid "`chord(:E3, :m7)`"
msgstr ""

#: 08.2-Chords.md:17
msgid "`chord(:E3, :minor)`"
msgstr ""

#: 08.2-Chords.md:18
msgid "`chord(:E3, :dim7)`"
msgstr ""

#: 08.2-Chords.md:19
msgid "`chord(:E3, :dom7)`"
msgstr ""

#: 08.2-Chords.md:21
#, fuzzy
msgid "Arpeggios"
msgstr "Arpèges"

#: 08.2-Chords.md:23
#, fuzzy
msgid "We can easily turn chords into arpeggios with the function `play_pattern`:"
msgstr ""
"Nous pouvons facilement changer les accords en arpèges avec la fonction `play_"
"pattern`:"

#: 08.2-Chords.md:26
#, no-wrap
msgid "play_pattern chord(:E3, :m7)"
msgstr "play_pattern chord(:E3, :m7)"

#: 08.2-Chords.md:30
#, fuzzy
msgid ""
"Ok, that's not so fun - it played it really slowly. `play_pattern` will play e"
"ach note in the list separated with a call to `sleep 1` between each call to `"
"play`. We can use another function `play_pattern_timed` to specify our own tim"
"ings and speed things up:"
msgstr ""
"OK, ce n'est pas si plaisant - ça le joue vraiment lentement. `play_pattern` v"
"a jouer chaque note de la liste en le séparant par un appel à `sleep 1` entre "
"chaque appel à `play`. Nous pouvons utiliser une autre fonction `play_pattern_"
"timed` pour spécifier nos propres durées et accélérer les choses :"

#: 08.2-Chords.md:35
#, no-wrap
msgid "play_pattern_timed chord(:E3, :m7), 0.25"
msgstr "play_pattern_timed chord(:E3, :m7), 0.25"

#: 08.2-Chords.md:39
#, fuzzy
msgid "We can even pass a list of times which it will treat as a circle of times:"
msgstr ""
"Nous pouvons même passer une liste de durées qui seront traitées de façon circ"
"ulaire :"

#: 08.2-Chords.md:42
#, no-wrap
msgid "play_pattern_timed chord(:E3, :m13), [0.25, 0.5]"
msgstr "play_pattern_timed chord(:E3, :m13), [0.25, 0.5]"

#: 08.2-Chords.md:46
#, fuzzy
msgid "This is the equivalent to:"
msgstr "Ceci est équivalent à :"

#: 08.2-Chords.md:48
#, no-wrap
msgid ""
"play 52\n"
"sleep 0.25\n"
"play 55\n"
"sleep 0.5\n"
"play 59\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.5\n"
"play 66\n"
"sleep 0.25\n"
"play 69\n"
"sleep 0.5\n"
"play 73"
msgstr ""
"play 52\n"
"sleep 0.25\n"
"play 55\n"
"sleep 0.5\n"
"play 59\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.5\n"
"play 66\n"
"sleep 0.25\n"
"play 69\n"
"sleep 0.5\n"
"play 73"

#: 08.2-Chords.md:64
#, fuzzy
msgid "Which would you prefer to write?"
msgstr "Que préférez-vous écrire ?"

#: 08.3-Scales.md:1
#, fuzzy
msgid "8.3 Scales"
msgstr "8.3 Gammes"

#: 08.3-Scales.md:3
#, fuzzy
msgid "Scales"
msgstr "Gammes"

#: 08.3-Scales.md:5
#, fuzzy
msgid ""
"Sonic Pi has support for a wide range of scales. How about playing a C3 major "
"scale?"
msgstr ""
"Sonic Pi supporte un large éventail de gammes. Comment faire pour jouer une ga"
"mme majeure de Do3 (C3) ?"

#: 08.3-Scales.md:8
#, no-wrap
msgid "play_pattern_timed scale(:c3, :major), 0.125, release: 0.1"
msgstr "play_pattern_timed scale(:c3, :major), 0.125, release: 0.1"

#: 08.3-Scales.md:12
#, fuzzy
msgid "We can even ask for more octaves:"
msgstr "Nous pouvons même demander plusieurs octaves :"

#: 08.3-Scales.md:14
#, no-wrap
msgid "play_pattern_timed scale(:c3, :major, num_octaves: 3), 0.125, release: 0.1"
msgstr "play_pattern_timed scale(:c3, :major, num_octaves: 3), 0.125, release: 0.1"

#: 08.3-Scales.md:18
#, fuzzy
msgid "How about all the notes in a pentatonic scale?"
msgstr "Comment obtenir toutes les notes d'une gamme pentatonique ?"

#: 08.3-Scales.md:20
#, no-wrap
msgid ""
"play_pattern_timed scale(:c3, :major_pentatonic, num_octaves: 3), 0.125, relea"
"se: 0.1"
msgstr ""
"play_pattern_timed scale(:c3, :major_pentatonic, num_octaves: 3), 0.125, relea"
"se: 0.1"

#: 08.3-Scales.md:24
#, fuzzy
msgid "Random notes"
msgstr "Notes aléatoires"

#: 08.3-Scales.md:26
#, fuzzy
msgid ""
"Chords and scales are great ways of constraining a random choice to something "
"meaningful. Have a play with this example which picks random notes from the ch"
"ord E3 minor:"
msgstr ""
"Les accords et les gammes sont un grand moyen de contraindre un choix aléatoir"
"e à quelque chose de significatif. Jouez un instant avec cet exemple qui prend"
" des notes aléatoirement dans l'accord mineur de Mi3 :"

#: 08.3-Scales.md:30
#, no-wrap
msgid ""
"use_synth :tb303\n"
"loop do\n"
"  play choose(chord(:E3, :minor)), release: 0.3, cutoff: rrand(60, 120)\n"
"  sleep 0.25\n"
"end"
msgstr ""
"use_synth :tb303\n"
"loop do\n"
"  play choose(chord(:E3, :minor)), release: 0.3, cutoff: rrand(60, 120)\n"
"  sleep 0.25\n"
"end"

#: 08.3-Scales.md:38
#, fuzzy
msgid "Try switching in different chord names and cutoff ranges."
msgstr ""
"Essayez de modifier cet exemple avec quelques noms d'accord différents et des "
"plages de cutoff différentes."

#: 08.3-Scales.md:40
#, fuzzy
msgid "Discovering Chords and Scales"
msgstr "Découverte des accords et des gammes"

#: 08.3-Scales.md:42
#, fuzzy
msgid ""
"To find out which scales and chords are supported by Sonic Pi simply click the"
" Lang button on the far left of this tutorial and then choose either chord or "
"scale in the API list. In the information in the main panel, scroll down until"
" you see a long list of chords or scales (depending on which you're looking at"
")."
msgstr ""
"Pour trouver quelles gammes et quels accords sont supportés par Sonic   Pi, cl"
"iquez sur le bouton \"Lang\" du menu horizontal à gauche et au bas de la fenêtre"
", et choisissez soit \"chord\" (accord) ou \"scale\" (gamme) dans la liste du dess"
"us. Dans le panneau d'information, faites défiler l'affichage vers le bas jusq"
"u'à voir une longue liste d'accords ou de gammes (selon ce que vous êtes en tr"
"ain de chercher)."

#: 08.3-Scales.md:48
#, fuzzy
msgid "Have fun and remember: there are no mistakes, only opportunities."
msgstr ""
"Faites-vous plaisir et rappelez-vous : il n'y a pas de fautes, que des opportu"
"nités."

#: 08.4-Rings.md:1
#, fuzzy
msgid "8.4 Rings"
msgstr "8.4 Anneaux"

#: 08.4-Rings.md:3 A.11-beat-tracking.md:62
#, fuzzy
msgid "Rings"
msgstr "Anneaux"

#: 08.4-Rings.md:5
#, fuzzy
msgid ""
"An interesting spin on standard lists are rings. If you know some programming,"
" you might have come across ring buffers or ring arrays. Here, we'll just go f"
"or ring - it's short and simple."
msgstr ""
"Un parcours circulaire intéressant sur les listes est fourni par les anneaux ("
"\"rings\"). Si vous avez quelques connaissances en programmation, vous pourriez "
"avoir eu affaire aux \"ring buffers\" ou aux \"ring arrays\". Ici, nous allons jus"
"te voir les \"rings\" - c'est court et simple."

#: 08.4-Rings.md:9
#, fuzzy
msgid ""
"In the previous section on lists we saw how we could fetch elements out of the"
"m by using the indexing mechanism:"
msgstr ""
"Dans la section précédente sur les listes, nous avons vu comment nous pouvions"
" aller en chercher des éléments en utilisant le mécanisme d'indexage :"

#: 08.4-Rings.md:16
#, fuzzy
msgid ""
"Now, what happens if you want index `100`? Well, there's clearly no element at"
" index 100 as the list has only three elements in it. So Sonic Pi will return "
"you `nil` which means nothing."
msgstr ""
"Maintenant, qu'arrive-t-il si vous voulez l'index `100` ? Eh bien, c'est clair"
" qu'il n'y a pas d'élément à l'index 100 puisque la liste ne contient que troi"
"s éléments. Alors Sonic Pi retournera `nil` (qui veut dire \"rien\")."

#: 08.4-Rings.md:20
#, fuzzy
msgid ""
"However, consider you have a counter such as the current beat which continuall"
"y increases. Let's create our counter and our list:"
msgstr ""
"Maintenant, imaginons que nous ayons un compteur tel que celui des temps music"
"aux et qui s'incrémente continuellement. Créons notre compteur et notre liste "
":"

#: 08.4-Rings.md:23
#, no-wrap
msgid ""
"counter = 0\n"
"notes = [52, 55, 59]"
msgstr ""
"counter = 0\n"
"notes = [52, 55, 59]"

#: 08.4-Rings.md:28
#, fuzzy
msgid "We can now use our counter to access a note in our list:"
msgstr ""
"Nous pouvons maintenant utiliser notre compteur pour accéder à une note de not"
"re liste :"

#: 08.4-Rings.md:30
#, no-wrap
msgid "puts notes[counter]"
msgstr "puts notes[counter]"

#: 08.4-Rings.md:34
#, fuzzy
msgid "Great, we got `52`. Now, let's increment our counter and get another note:"
msgstr ""
"Super, nous avons obtenu `52`. Maintenant, incrémentons notre compteur et obte"
"nons une autre note :"

#: 08.4-Rings.md:37
#, no-wrap
msgid ""
"counter = (inc counter)\n"
"puts notes[counter]"
msgstr ""
"counter = (inc counter)\n"
"puts notes[counter]"

#: 08.4-Rings.md:42
#, fuzzy
msgid ""
"Super, we now get `55` and if we do it again we get `59`. However, if we do it"
" again, we'll run out of numbers in our list and get `nil`. What if we wanted "
"to just loop back round and start at the beginning of the list again? This is "
"what rings are for."
msgstr ""
"Super, nous obtenons maintenant `55` et si nous le faisons une nouvelle fois, "
"nous obtenons `59`. Toutefois, si nous le faisons encore une nouvelle fois, no"
"us allons nous trouver en dehors des nombres de notre liste et obtenir `nil`. "
"Que faire si nous voulions juste boucler en revenant en arrière et recommencer"
" au début de la liste ? C'est pour cela que les anneaux (\"rings\") sont faits."

#: 08.4-Rings.md:47
#, fuzzy
msgid "Creating Rings"
msgstr "Création des anneaux"

#: 08.4-Rings.md:49
#, fuzzy
msgid ""
"We can create rings one of two ways. Either we use the `ring` function with th"
"e elements of the ring as parameters:"
msgstr ""
"Nous pouvons créer des anneaux de deux façons. Ou bien nous utilisons la fonct"
"ion `ring` avec les élements de l'anneau comme paramètres :"

#: 08.4-Rings.md:52
#, no-wrap
msgid "(ring 52, 55, 59)"
msgstr "(ring 52, 55, 59)"

#: 08.4-Rings.md:56
#, fuzzy
msgid ""
"Or we can take a normal list and convert it to a ring by sending it the `.ring"
"` message:"
msgstr ""
"Ou bien nous pouvons prendre une liste normale et la convertir en anneau en lu"
"i envoyant le message `.ring`:"

#: 08.4-Rings.md:59
#, no-wrap
msgid "[52, 55, 59].ring"
msgstr "[52, 55, 59].ring"

#: 08.4-Rings.md:63
#, fuzzy
msgid "Indexing Rings"
msgstr "Indexation des anneaux"

#: 08.4-Rings.md:65
#, fuzzy
msgid ""
"Once we have a ring, you can use it in exactly the same way you would use a no"
"rmal list with the exception that you can use indexes that are negative or lar"
"ger than the size of the ring and they'll wrap round to always point at one of"
" the ring's elements:"
msgstr ""
"Une fois que nous avons un anneau, nous pouvons l'utiliser de la même manière "
"que nous utiliserions une liste normale avec l'exception que nous pouvons util"
"iser des index négatifs ou des index qui sont plus grands que la taille de l'a"
"nneau, et ils vont boucler tout autour jusqu'à pointer sur un des éléments de "
"l'anneau :"

#: 08.4-Rings.md:70
#, no-wrap
msgid ""
"(ring 52, 55, 59)[0] #=> 52\n"
"(ring 52, 55, 59)[1] #=> 55\n"
"(ring 52, 55, 59)[2] #=> 59\n"
"(ring 52, 55, 59)[3] #=> 52\n"
"(ring 52, 55, 59)[-1] #=> 59"
msgstr ""
"(ring 52, 55, 59)[0] #=> 52\n"
"(ring 52, 55, 59)[1] #=> 55\n"
"(ring 52, 55, 59)[2] #=> 59\n"
"(ring 52, 55, 59)[3] #=> 52\n"
"(ring 52, 55, 59)[-1] #=> 59"

#: 08.4-Rings.md:78
#, fuzzy
msgid "Using Rings"
msgstr "Utilisation des anneaux"

#: 08.4-Rings.md:80
#, fuzzy
msgid ""
"Let's say we're using a variable to represent the current beat number. We can "
"use this as an index into our ring to fetch notes to play, or release times or"
" anything useful we've stored in our ring regardless of the beat number we're "
"currently on."
msgstr ""
"Mettons que nous utilisions une variable pour représenter le numéro de batteme"
"nt courant. Nous pouvons l'utiliser comme un index de notre anneau pour aller "
"chercher les notes à jouer, ou les durées d'extinction ou n'importe quelle cho"
"se utile que nous avons mémorisée dans notre anneau sans se préoccuper de la v"
"aleur du numéro de battement en cours."

#: 08.4-Rings.md:85
#, fuzzy
msgid "Scales and Chords are Rings"
msgstr "Les gammes et les accords sont des anneaux"

#: 08.4-Rings.md:87
#, fuzzy
msgid ""
"A useful thing to know is that the lists returned by `scale` and `chord` are a"
"lso rings and allow you to access them with arbitrary indexes."
msgstr ""
"Une chose utile à savoir est que les listes retournées par `scale` et `chord` "
"sont aussi des anneaux et cela vous autorise à les accéder avec des valeurs d'"
"index arbitraires."

#: 08.4-Rings.md:90
#, fuzzy
msgid "Ring Constructors"
msgstr "Constructeurs d'anneaux"

#: 08.4-Rings.md:92
#, fuzzy
msgid ""
"In addition to `ring` there are a number of other functions which will constru"
"ct a ring for us."
msgstr ""
"En sus de `ring`, il y a un certain nombre de fonctions qui vous construiront "
"un anneau."

#: 08.4-Rings.md:95
#, fuzzy
msgid "`range` invites you specify a starting point, end point and step size."
msgstr ""
"`range` vous invite à spécifier un point de départ, un point de fin, et la tai"
"lle du pas."

#: 08.4-Rings.md:96
#, fuzzy
msgid "`bools` allows you to use `1`s and `0`s to succinctly represent booleans."
msgstr ""
"`bools` vous permet d'utiliser des `1`s et `0`s pour représenter les booléens "
"de manière condensée."

#: 08.4-Rings.md:97
#, fuzzy
msgid "`knit` allows you to knit a sequence of repeated values."
msgstr "`knit` vous permet de créer une séquence de valeurs dupliquées."

#: 08.4-Rings.md:98
#, fuzzy
msgid "`spread` creates a ring of bools with a Euclidean distribution."
msgstr "`spread` crée un anneau de booléens avec une distribution euclidienne."

#: 08.4-Rings.md:100
#, fuzzy
msgid "Take a look at their respective documentation for more information."
msgstr "Jetez un œil à leur documentation respective pour plus d'information."

#: 08.5-Ring-Chains.md:1
#, fuzzy
msgid "8.5 Ring Chains"
msgstr "8.5 Chaînes d'anneaux"

#: 08.5-Ring-Chains.md:3
#, fuzzy
msgid "Ring Chains"
msgstr "Chaînes d'anneaux"

#: 08.5-Ring-Chains.md:5
#, fuzzy
msgid ""
"In addition to the constructors such as `range` and `spread` another way of cr"
"eating new rings is to manipulate existing rings."
msgstr ""
"En plus des constructeurs comme `range` et `spread`, une autre façon de créer "
"de nouveaux anneaux est de manipuler des anneaux existants."

#: 08.5-Ring-Chains.md:9
#, fuzzy
msgid "Chain Commands"
msgstr "Commandes de chaîne"

#: 08.5-Ring-Chains.md:11
#, fuzzy
msgid "To explore this, take a simple ring:"
msgstr "Pour explorer ceci, prenons un anneau simple :"

#: 08.5-Ring-Chains.md:13
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50)"
msgstr "(ring 10, 20, 30, 40, 50)"

#: 08.5-Ring-Chains.md:17
#, fuzzy
msgid ""
"What if we wanted it backwards? Well we'd use the chain command `.reverse` to "
"take the ring and turn it around:"
msgstr ""
"Et si on voulait son inverse ? Eh bien on utiliserait la commande de chaîne `."
"reverse` pour prendre l'anneau et l'inverser :"

#: 08.5-Ring-Chains.md:20
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50).reverse  #=> (ring 50, 40, 30, 20, 10)"
msgstr "(ring 10, 20, 30, 40, 50).reverse  #=> (ring 50, 40, 30, 20, 10)"

#: 08.5-Ring-Chains.md:24
#, fuzzy
msgid "Now, what if we wanted the first three values from the ring?"
msgstr "Et si on voulait les trois premières valeurs de l'anneau ?"

#: 08.5-Ring-Chains.md:26
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50).take(3)  #=> (ring 10, 20, 30)"
msgstr "(ring 10, 20, 30, 40, 50).take(3)  #=> (ring 10, 20, 30)"

#: 08.5-Ring-Chains.md:30
#, fuzzy
msgid "Finally, what if we wanted to shuffle the ring?"
msgstr "Enfin, et si on voulait mélanger l'anneau ?"

#: 08.5-Ring-Chains.md:32
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50).shuffle  #=> (ring 40, 30, 10, 50, 20)"
msgstr "(ring 10, 20, 30, 40, 50).shuffle  #=> (ring 40, 30, 10, 50, 20)"

#: 08.5-Ring-Chains.md:36
#, fuzzy
msgid "Multiple Chains"
msgstr "Chaînes multiples"

#: 08.5-Ring-Chains.md:38
#, fuzzy
msgid ""
"This is already a powerful way of creating new rings. However, the *real* powe"
"r comes when you chain a few of these commands together."
msgstr ""
"C'est déjà une manière puissante de créer de nouveaux anneaux. Ceci dit la *vr"
"aie* puissance vient quand on enchaîne quelques unes de ces commandes à la sui"
"te."

#: 08.5-Ring-Chains.md:41
#, fuzzy
msgid "How about shuffling the ring, dropping 1 element and then taking the next 3?"
msgstr ""
"Et si on mélangeait l'anneau, on lâchait un élément puis on en prenait les tro"
"is suivants ?"

#: 08.5-Ring-Chains.md:43
#, fuzzy
msgid "Let's take this in stages:"
msgstr "Regardons ceci par étapes :"

#: 08.5-Ring-Chains.md:45
#, fuzzy
msgid "`(ring 10, 20, 30, 40, 50)` - our initial ring"
msgstr "`(ring 10, 20, 30, 40, 50)` - notre anneau initial"

#: 08.5-Ring-Chains.md:46
#, fuzzy
msgid "`(ring 10, 20, 30, 40, 50).shuffle` - shuffles - `(ring 40, 30, 10, 50, 20)`"
msgstr "`(ring 10, 20, 30, 40, 50).shuffle` - mélange - `(ring 40, 30, 10, 50, 20)`"

#: 08.5-Ring-Chains.md:47
#, fuzzy
msgid "`(ring 10, 20, 30, 40, 50).shuffle.drop(1)` - drop 1 - `(ring 30, 10, 50, 20)`"
msgstr ""
"`(ring 10, 20, 30, 40, 50).shuffle.drop(1)` - en lâche un - `(ring 30, 10, 50,"
" 20)`"

#: 08.5-Ring-Chains.md:48
#, fuzzy
msgid ""
"`(ring 10, 20, 30, 40, 50).shuffle.drop(1).take(3)` - take 3 - `(ring 30, 10, "
"50)`"
msgstr ""
"`(ring 10, 20, 30, 40, 50).shuffle.drop(1).take(3)` - en prend trois - `(ring "
"30, 10, 50)`"

#: 08.5-Ring-Chains.md:50
#, fuzzy
msgid ""
"Can you see how we can just create a long chain of these methods by just *stic"
"king them together*. We can combine these in any order we want creating an ext"
"remely rich and powerful way of generating new rings from existing ones."
msgstr ""
"Vous voyez comme on peut créer une longue chaîne de ces méthodes juste *en les"
" collant à la suite*. On peut les combiner dans l'ordre qu'on veut, ce qui cré"
"e une manière extrêmement riche et puissante de générer de nouveaux anneaux à "
"partir d'anneaux existants."

#: 08.5-Ring-Chains.md:55
#, fuzzy
msgid "Immutability"
msgstr "Immutabilité"

#: 08.5-Ring-Chains.md:57
#, fuzzy
msgid ""
"These rings have a powerful and important property. They are immutable which m"
"eans that they can not change. This means that the chaining methods described "
"in this section *do not change rings* rather they *create new rings*. This mea"
"ns you're free to share rings across threads and start chaining them within a "
"thread knowing you won't be affecting any other thread using the same ring."
msgstr ""
"Ces anneaux ont une propriété puissante et importante. Ils sont immutables, ce"
" qui veut dire qu'ils ne peuvent pas changer. Cela veut dire que les méthodes "
"de chaîne décrites dans cette section *ne changent pas les anneaux*, elles *cr"
"éent plutôt de nouveaux anneaux*. Cela veut dire que vous êtes libres de parta"
"ger des anneaux entre fils et de les chaîner dans un fil en sachant que vous n"
"'affecterez aucun autre fil qui utilise le même anneau."

#: 08.5-Ring-Chains.md:64
#, fuzzy
msgid "Available Chain Methods"
msgstr "Méthodes de chaîne disponibles"

#: 08.5-Ring-Chains.md:66
#, fuzzy
msgid "Here's a list of the available chain methods for you to play with:"
msgstr "Voici une liste des méthodes de chaîne disponibles :"

#: 08.5-Ring-Chains.md:68
#, fuzzy
msgid "`.reverse` - returns a reversed version of the ring"
msgstr "`.reverse` - retourne une version inversée de l'anneau"

#: 08.5-Ring-Chains.md:69
#, fuzzy
msgid "`.sort` - creates a sorted version of the ring"
msgstr "`.sort` - crée une version triée de l'anneau"

#: 08.5-Ring-Chains.md:70
#, fuzzy
msgid "`.shuffle` - creates a shuffled version of the ring"
msgstr "`.shuffle` - crée une version mélangée de l'anneau"

#: 08.5-Ring-Chains.md:71
#, fuzzy
msgid "`.pick(3)` - returns a ring with the results of calling `.choose` 3 times"
msgstr "`.pick(3)` - retourne un anneau avec le résultat de trois appels à `.choose`"

#: 08.5-Ring-Chains.md:72
#, fuzzy
msgid ""
"`.pick` - similar to `.pick(3)` only the size defaults to the same as the orig"
"inal ring"
msgstr ""
"`.pick` - similaire à `.pick(3)` mais la taille correspond à la taille de l'an"
"neau initial"

#: 08.5-Ring-Chains.md:73
#, fuzzy
msgid "`.take(5)` - returns a new ring containing only the first 5 elements"
msgstr ""
"`.take(5)` - retourne un nouvel anneau contenant uniquement les cinq premiers "
"éléments"

#: 08.5-Ring-Chains.md:74
#, fuzzy
msgid "`.drop(3)` - returns a new ring with everything but the first 3 elements"
msgstr ""
"`.drop(3)` - retourne un nouvel anneau avec tout sauf les trois premiers éléme"
"nts"

#: 08.5-Ring-Chains.md:75
#, fuzzy
msgid "`.butlast` - returns a new ring with the last element missing"
msgstr "`.butlast` - retourne un nouvel anneau sans le dernier élément"

#: 08.5-Ring-Chains.md:76
#, fuzzy
msgid "`.drop_last(3)` - returns a new ring with the last 3 elements missing"
msgstr "`.drop_last(3)` - retourne un nouvel anneau sans les trois derniers éléments"

#: 08.5-Ring-Chains.md:77
#, fuzzy
msgid "`.take_last(6)`- returns a new ring with only the last 6 elements"
msgstr ""
"`.take_last(6)`- retourne un nouvel anneau avec les six derniers éléments seul"
"ement"

#: 08.5-Ring-Chains.md:78
#, fuzzy
msgid "`.stretch(2)` - repeats each element in the ring twice"
msgstr "`.stretch(2)` - répète chaque élément dans l'anneau deux fois"

#: 08.5-Ring-Chains.md:79
#, fuzzy
msgid "`.repeat(3)` - repeats the entire ring 3 times"
msgstr "`.repeat(3)` - répète l'anneau entier trois fois"

#: 08.5-Ring-Chains.md:80
#, fuzzy
msgid "`.mirror` - adds the ring to a reversed version of itself"
msgstr "`.mirror` - ajoute l'anneau à une version inversée de lui-même"

#: 08.5-Ring-Chains.md:81
#, fuzzy
msgid "`.reflect` - same as mirror but doesn't duplicate middle value"
msgstr "`.reflect` - comme mirror mais sans dupliquer la valeur du milieu"

#: 08.5-Ring-Chains.md:83
#, fuzzy
msgid ""
"Of course, those chain methods that take numbers can take other numbers too! S"
"o feel free to call `.drop(5)` instead of `.drop(3)` if you want to drop the f"
"irst 5 elements."
msgstr ""
"Evidemment, les méthodes de chaîne qui prennent des nombres peuvent prendre d'"
"autres nombres aussi ! N'hésitez donc pas à appeler `.drop(5)` au lieu de `.dr"
"op(3)` si vous voulez lâcher les cinq premiers éléments."

#: 09-Live-Coding.md:1
#, fuzzy
msgid "9 Live Coding"
msgstr "9 Codage en 'live'"

#: 09-Live-Coding.md:5
#, fuzzy
msgid ""
"One of the most exciting aspects of Sonic Pi is that it enables you to write a"
"nd modify code live to make music, just like you might perform live with a gui"
"tar. One advantage of this approach is to give you more feedback whilst compos"
"ing (get a simple loop running and keep tweaking it till it sounds just perfec"
"t). However, the main advantage is that you can take Sonic Pi on stage and gig"
" with it."
msgstr ""
"Un des aspects les plus passionnants de Sonic Pi est qu'il vous permet d'écrir"
"e et de modifier du code en \"live\" pour faire de la musique, juste comme vous "
"le feriez avec une guitare. Un avantage de cette approche est qu'il vous procu"
"re plus de feedback pendant que vous composez (avoir une simple boucle en cour"
"s d'exécution et continuer à l'ajuster jusqu'à qu'elle sonne parfaitement). Ce"
"pendant, le principal avantage est que vous pouvez amener Sonic Pi sur scène e"
"t donner un concert avec."

#: 09-Live-Coding.md:12
#, fuzzy
msgid ""
"In this section we'll cover the fundamentals of turning your static code compo"
"sitions into dynamic performances."
msgstr ""
"Dans cette section, nous allons couvrir les fondamentaux du changement de vos "
"compositions en interprétations dynamiques avec du code statique."

#: 09-Live-Coding.md:15
#, fuzzy
msgid "Hold on to your seats..."
msgstr "Tenez-vous bien..."

#: 09.1-Live-Coding-Fundamentals.md:1
#, fuzzy
msgid "9.1 Live Coding Fundamentals"
msgstr "9.1 Fondamentaux du Codage en 'live'"

#: 09.1-Live-Coding-Fundamentals.md:5
#, fuzzy
msgid ""
"Now we've learned enough to really start having some fun. In this section we'l"
"l draw from all the previous sections and show you how you can start making yo"
"ur music compositions live and turning them into a performance. For that we'll"
" need 3 main ingredients:"
msgstr ""
"Maintenant nous en avons suffisamment appris pour commencer réellement à prend"
"re du plaisir. Dans cette section, nous allons mettre en pratique toutes les s"
"ections précédentes et vous montrer comment commencer à faire vos compositions"
" musicales en \"live\" et les transformer en interprétations. Pour cela, nous au"
"rons besoin de trois ingrédients principaux :"

#: 09.1-Live-Coding-Fundamentals.md:10
#, fuzzy
msgid "An ability to write code that makes sounds - CHECK!"
msgstr "Une capacité à écrire du code qui produit des sons - C'est fait !"

#: 09.1-Live-Coding-Fundamentals.md:11
#, fuzzy
msgid "An ability to write functions - CHECK!"
msgstr "Une capacité à écrire des fonctions - C'est fait !"

#: 09.1-Live-Coding-Fundamentals.md:12
#, fuzzy
msgid "An ability to use (named) threads - CHECK!"
msgstr "Une capacité à utiliser des threads (nommés) - C'est fait !"

#: 09.1-Live-Coding-Fundamentals.md:14
#, fuzzy
msgid ""
"Alrighty, let's get started. Let's live code our first sounds. We first need a"
" function containing the code we want to play. Let's start simple. We also wan"
"t to loop calls to that function in a thread:"
msgstr ""
"D'accord, allons-y. Codons en \"live\" nos premiers sons. En premier lieu, nous "
"avons besoin d'une fonction contenant le code que nous voulons jouer. Commenço"
"ns simple. Nous voulons aussi une boucle d'appels à cette fonction dans un thr"
"ead :"

#: 09.1-Live-Coding-Fundamentals.md:18
#, no-wrap
msgid ""
"define :my_loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"in_thread(name: :looper) do\n"
"  loop do\n"
"    my_loop\n"
"  end\n"
"end"
msgstr ""
"define :my_loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"in_thread(name: :looper) do\n"
"  loop do\n"
"    my_loop\n"
"  end\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:31
#, fuzzy
msgid ""
"If that looks a little too complicated to you, go back and re-read the section"
"s on functions and threads. It's not too complicated if you've already wrapped"
" your head around these things."
msgstr ""
"Si ça vous semble un petit peu trop compliqué, revenez en arrière et relisez l"
"es sections sur les fonctions et les threads. Ce n'est pas trop compliqué si v"
"ous avez déjà emmagasiné ces choses dans votre tête."

#: 09.1-Live-Coding-Fundamentals.md:35
#, fuzzy
msgid ""
"What we have here is a function definition which just plays note 50 and sleeps"
" for a beat. We then define a named thread called `:looper` which just loops a"
"round calling `my_loop` repeatedly."
msgstr ""
"Ce que nous avons ici est une définition de fonction qui joue juste la note 50"
" et qui dort pendant un temps musical. Nous définissons ensuite un thread nomm"
"é `:looper` qui simplement boucle en appelant `my_loop` de manière répétitive."

#: 09.1-Live-Coding-Fundamentals.md:39
#, fuzzy
msgid "If you run this code, you'll hear note 50 repeating again and again..."
msgstr ""
"Si vous exécutez ce code, vous entendrez la note 50 répétée encore et encore.."
"."

#: 09.1-Live-Coding-Fundamentals.md:41
#, fuzzy
msgid "Changing it up"
msgstr "Modifions-le"

#: 09.1-Live-Coding-Fundamentals.md:43
#, fuzzy
msgid ""
"Now, this is where the fun starts. Whilst the code is *still running* change 5"
"0 to another number, say 55, then press the Run button again. Woah! It changed"
"! Live!"
msgstr ""
"Maintenant, c'est là que le plaisir commence. Pendant que le code est *encore "
"en cours d'exécution* changez 50 en un autre nombre, disons 55, ensuite presse"
"z le bouton \"Run\" une nouvelle fois. Woah ! C'est modifié ! En \"live\" !"

#: 09.1-Live-Coding-Fundamentals.md:47
#, fuzzy
msgid ""
"It didn't add a new layer because we're using named threads which only allow o"
"ne thread for each name. Also, the sound changed because we *redefined* the fu"
"nction. We gave `:my_loop` a new definition. When the `:looper` thread looped "
"around it simply called the new definition."
msgstr ""
"Une nouvelle couche n'a pas été ajoutée parce que nous avons utilisé des threa"
"ds nommés et que seul un thread est permis pour chaque nom. En outre, le son a"
" changé parce que nous *avons redéfini* la fonction. Nous avons donné à `:my_l"
"oop` une nouvelle définition. Quand le thread `:looper` a rebouclé, il a simpl"
"ement appelé la nouvelle définition."

#: 09.1-Live-Coding-Fundamentals.md:52
#, fuzzy
msgid ""
"Try changing it again, change the note, change the sleep time. How about addin"
"g a `use_synth` statement? For example, change it to:"
msgstr ""
"Essayez de le modifier encore, changez la note, changer la durée de sleep. Com"
"ment faire pour ajouter un ordre `use_synth` ? Par exemple, changez-le en :"

#: 09.1-Live-Coding-Fundamentals.md:55
#, no-wrap
msgid ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play 50, release: 0.3\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play 50, release: 0.3\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:63
#, fuzzy
msgid ""
"Now it sounds pretty interesting, but we can spice it up further. Instead of p"
"laying the same note again and again, try playing a chord:"
msgstr ""
"Maintenant, ça sonne plutôt intéressant, mais on peut le pimenter un peu plus."
" Au lieu de jouer la même note encore et encore, essayez de jouer un accord :"

#: 09.1-Live-Coding-Fundamentals.md:67
#, no-wrap
msgid ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play chord(:e3, :minor), release: 0.3\n"
"  sleep 0.5\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play chord(:e3, :minor), release: 0.3\n"
"  sleep 0.5\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:75
#, fuzzy
msgid "How about playing random notes from the chord:"
msgstr "Comment faire pour jouer des notes de l'accord aléatoirement :"

#: 09.1-Live-Coding-Fundamentals.md:77
#, no-wrap
msgid ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.3\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.3\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:85
#, fuzzy
msgid "Or using a random cutoff value:"
msgstr "Ou utiliser une valeur de cutoff aléatoire :"

#: 09.1-Live-Coding-Fundamentals.md:87
#, no-wrap
msgid ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:95
#, fuzzy
msgid "Finally, add some drums:"
msgstr "Finalement, ajoutons quelques notes de batterie :"

#: 09.1-Live-Coding-Fundamentals.md:97
#, no-wrap
msgid ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  sample :drum_bass_hard, rate: rrand(0.5, 2)\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  sample :drum_bass_hard, rate: rrand(0.5, 2)\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:106
#, fuzzy
msgid "Now things are getting exciting!"
msgstr "Maintenant, les choses commencent à devenir passionnantes !"

#: 09.1-Live-Coding-Fundamentals.md:108
#, fuzzy
msgid ""
"However, before you jump up and start live coding with functions and threads, "
"stop what you're doing and read the next section on `live_loop` which will cha"
"nge the way you code in Sonic Pi forever..."
msgstr ""
"Toutefois, avant que vous bondissiez et que vous vous lanciez dans le codage e"
"n \"live\" avec des fonctions et des threads, arrêtez ce que vous êtes en train "
"de faire et lisez la section suivante sur `live_loop` qui va vous changer à ja"
"mais votre façon de coder dans Sonic Pi..."

#: 09.2-Live-Loops.md:1
#, fuzzy
msgid "9.2 Live Loops"
msgstr "9.2 Boucles en 'live'"

#: 09.2-Live-Loops.md:3
#, fuzzy
msgid "Live Loops"
msgstr "Boucles en \"live\""

#: 09.2-Live-Loops.md:5
#, fuzzy
msgid ""
"Ok, so this section of the tutorial is the real gem. If you only read one sect"
"ion, it should be this one. If you read the previous section on Live Coding Fu"
"ndamentals, `live_loop` is a simple way of doing exactly that but without havi"
"ng to write so much."
msgstr ""
"Ok, ainsi cette section est la véritable perle. Si vous ne lisez qu'une sectio"
"n, ce devrait être celle-ci. Si vous avez lu la section précédente sur les fon"
"damentaux du codage en \"live\", `live_loop` est une manière simple de faire exa"
"ctement la même chose mais sans avoir tant à écrire."

#: 09.2-Live-Loops.md:10
#, fuzzy
msgid ""
"If you didn't read the previous section, `live_loop` is the best way to jam wi"
"th Sonic Pi."
msgstr ""
"Si vous n'avez pas lu la section précédente, `live_loop` est la meilleure faço"
"n d'improviser avec Sonic Pi."

#: 09.2-Live-Loops.md:13
#, fuzzy
msgid "Let's play. Write the following in a new buffer:"
msgstr "Jouons. Ecrivez le code suivant dans un buffer :"

#: 09.2-Live-Loops.md:15
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play 60\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play 60\n"
"  sleep 1\n"
"end"

#: 09.2-Live-Loops.md:22
#, fuzzy
msgid ""
"Now press the Run button. You hear a basic beep every beat. Nothing fun there."
" However, don't press Stop just yet. Change the `60` to `65` and press Run aga"
"in."
msgstr ""
"Maintenant pressez le bouton \"Run\". Vous entendez un beep basique à chaque tem"
"ps. Rien de plaisant pour l'instant. Toutefois, ne pressez pas tout de suite l"
"e bouton \"Stop\". Changez le `60` en `65` et pressez \"Run\" à nouveau."

#: 09.2-Live-Loops.md:26
#, fuzzy
msgid "Woah! It changed *automatically* without missing a beat. This is live coding."
msgstr ""
"Woah ! Ça a changé *automatiquement* sans manquer un temps. C'est du codage en"
" \"live\"."

#: 09.2-Live-Loops.md:28
#, fuzzy
msgid ""
"Why not change it to be more bass like? Just update your code whilst it's play"
"ing:"
msgstr ""
"Pourquoi ne pas le modifier pour ressembler plus à une basse ? Modifiez juste "
"votre code pendant que ça joue :"

#: 09.2-Live-Loops.md:30
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:38
#, fuzzy
msgid "Then hit Run."
msgstr "Puis pressez \"Run\"."

#: 09.2-Live-Loops.md:40
#, fuzzy
msgid "Let's make the cutoff move around:"
msgstr "Faisons bouger le cutoff aléatoirement :"

#: 09.2-Live-Loops.md:42
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:50
#, fuzzy
msgid "Hit Run again."
msgstr "Puis pressez \"Run\" à nouveau."

#: 09.2-Live-Loops.md:52
#, fuzzy
msgid "Add some drums:"
msgstr "Ajoutez de la batterie :"

#: 09.2-Live-Loops.md:54
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:63
#, fuzzy
msgid "Change the note from `e1` to `c1`:"
msgstr "Changez la note de `e1` en `c1`:"

#: 09.2-Live-Loops.md:65
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:74
#, fuzzy
msgid "Now stop listening to me and play around yourself! Have fun!"
msgstr "Maintenant, arrêtez de me suivre et jouez vous-même ! Prenez du plaisir !"

#: 09.3-Multiple-Live-Loops.md:1
#, fuzzy
msgid "9.3 Multiple Live Loops"
msgstr "9.3 Boucles multiples en 'live'"

#: 09.3-Multiple-Live-Loops.md:3
#, fuzzy
msgid "Multiple Live Loops"
msgstr "Boucles multiples en \"live\""

#: 09.3-Multiple-Live-Loops.md:5
#, fuzzy
msgid "Consider the following live loop:"
msgstr "Considérez la boucle en \"live\" suivante :"

#: 09.3-Multiple-Live-Loops.md:7
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play 50\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play 50\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:14
#, fuzzy
msgid ""
"You may have wondered why it needs the name `:foo`. This name is important bec"
"ause it signifies that this live loop is different from all other live loops."
msgstr ""
"Vous pouvez vous être demandé pourquoi elle avait besoin du nom `:foo`. Ce nom"
" est important parce qu'il signifie que cette boucle est différente des autres"
" boucles en \"live\"."

#: 09.3-Multiple-Live-Loops.md:18
#, fuzzy
msgid "*There can never be two live loops running with the same name*."
msgstr ""
"*Il ne peut y avoir deux boucles en \"live\" en cours d'exécution avec le même n"
"om*"

#: 09.3-Multiple-Live-Loops.md:20
#, fuzzy
msgid ""
"This means that if we want multiple concurrently running live loops, we just n"
"eed to give them different names:"
msgstr ""
"Ce qui signifie que si nous voulons de multiples boucles en \"live\" s'exécutant"
" en simultané, nous devons simplement leur donner des noms différents :"

#: 09.3-Multiple-Live-Loops.md:23
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: 09.3-Multiple-Live-Loops.md:36
#, fuzzy
msgid ""
"You can now update and change each live loop independently and it all just wor"
"ks."
msgstr ""
"Vous pouvez maintenant modifier et changer chaque boucle indépendamment et sim"
"plement tout fonctionne."

#: 09.3-Multiple-Live-Loops.md:39
#, fuzzy
msgid "Syncing Live Loops"
msgstr "Synchronisation des boucles en \"live\""

#: 09.3-Multiple-Live-Loops.md:41
#, fuzzy
msgid ""
"One thing you might have already noticed is that live loops work automatically"
" with the thread cue mechanism we explored previously. Every time the live loo"
"p loops, it generates a new `cue` event with the name of the live loop. We can"
" therefore `sync` on these cues to ensure our loops are in sync without having"
" to stop anything."
msgstr ""
"Une chose que vous pourriez avoir déjà remarqué est que ces boucles en \"live\" "
"fonctionnent automatiquement avec le mécanisme de thread que nous avons explor"
"é précédemment. Chaque fois qu'une \"live loop\" boucle, elle génère un nouvel é"
"vénement `cue` avec le même nom que la boucle. Par conséquent, nous pouvons no"
"us `sync` sur ces cues pour garantir que ces boucles soient synchronisées sans"
" avoir à arrêter quoi que ce soit."

#: 09.3-Multiple-Live-Loops.md:47
#, fuzzy
msgid "Consider this badly synced code:"
msgstr "Considérez ce code mal synchronisé :"

#: 09.3-Multiple-Live-Loops.md:49
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.4\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.4\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:61
#, fuzzy
msgid ""
"Let's see if we can fix the timing and sync without stopping it. First, let's "
"fix the `:foo` loop to make the sleep a factor of 1 - something like `0.5` wil"
"l do:"
msgstr ""
"Voyons si nous pouvons corriger le timing et synchroniser sans arrêter l'exécu"
"tion. Corrigeons la boucle `:foo` pour l'aligner sur le facteur de sleep de 1 "
"- quelque chose comme `0.5` fera l'affaire :"

#: 09.3-Multiple-Live-Loops.md:65
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:77
#, fuzzy
msgid ""
"We're not quite finished yet though - you'll notice that the beats don't quite"
" line up correctly. This is because the loops are *out of phase*. Let's fix th"
"at by syncing one to the other:"
msgstr ""
"Cependant, nous n'avons pas encore tout à fait fini - vous remarquerez que les"
" temps ne battent pas ensemble correctement. C'est parce que les boucles sont "
"*déphasées*. Corrigeons cela en les synchronisant :"

#: 09.3-Multiple-Live-Loops.md:81
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sync :foo\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sync :foo\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:94
#, fuzzy
msgid "Wow, everything is now perfectly in time - all without stopping."
msgstr "Wow, tout est maintenant parfaitement en phase - tout cela sans arrêter."

#: 09.3-Multiple-Live-Loops.md:96
#, fuzzy
msgid "Now, go forth and live code with live loops!"
msgstr "Maintenant, allez de l'avant et codez en \"live\" avec des \"live loops\" !"

#: 09.4-Ticking.md:1
msgid "9.4 Ticking"
msgstr ""

#: 09.4-Ticking.md:3
#, fuzzy
msgid "Ticking"
msgstr "Avance automatique (\"ticking\")"

#: 09.4-Ticking.md:5
#, fuzzy
msgid ""
"Something you'll likely find yourself doing a lot when live coding is looping "
"through rings. You'll be putting notes into rings for melodies, sleeps for rhy"
"thms, chord progressions, timbral variations, etc. etc."
msgstr ""
"Il est probable que vous vous trouverez quelquefois en train d'en faire des ta"
"s quand votre codage en \"live\" consistera à boucler au travers d'anneaux. Vous"
" mettrez des notes dans des anneaux (\"rings\") pour les mélodies, des \"sleeps\" "
"pour les rythmes, des progressions d'accords, des variations de timbre, etc. e"
"tc."

#: 09.4-Ticking.md:9
#, fuzzy
msgid "Ticking Rings"
msgstr "Parcours automatique des anneaux"

#: 09.4-Ticking.md:11
#, fuzzy
msgid ""
"Sonic Pi provides a *very* handy tool for working with rings within `live_loop"
"`s. It's called the tick system. In the section about the rings we were talkin"
"g about the counter that is constantly increasing, like a current beat number."
" Tick just implements this idea. It provides you with the ability to *tick thr"
"ough rings*. Let's look at an example:"
msgstr ""
"Sonic Pi fournit un outil *très* pratique pour travailler avec des anneaux (\"r"
"ings\") à l'intérieur des `live_loop`s. Il s'agit du système d'avance automatiq"
"ue (\"tick\"). Dans la section sur les anneaux on parlait d'un compteur qui augm"
"ente constamment, comme un nombre courant de battement. \"Tick\" implémente just"
"ement cette idée. Il vous fournit la capacité de *parcourir des anneaux*. Rega"
"rdons un exemple :"

#: 09.4-Ticking.md:17
#, no-wrap
msgid ""
"counter = 0\n"
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic)[counter], release: 0.1\n"
"  counter += 1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"counter = 0\n"
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic)[counter], release: 0.1\n"
"  counter += 1\n"
"  sleep 0.125\n"
"end"

#: 09.4-Ticking.md:26
#, fuzzy
msgid "This is equivalent to:"
msgstr "C'est l'équivalent de :"

#: 09.4-Ticking.md:28
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end"

#: 09.4-Ticking.md:35
#, fuzzy
msgid ""
"Here, we're just grabbing the scale E3 minor pentatonic and ticking through ea"
"ch element. This is done by adding `.tick` to the end of the scale declaration"
". This tick is local to the live loop, so each live loop can have its own inde"
"pendent tick:"
msgstr ""
"Ici, nous prenons simplement la gamme mineure pentatonique de Mi3 et nous la p"
"arcourons élement par élément. C'est réalisé en ajoutant `.tick` à la fin de l"
"a déclaration de la gamme. Ce \"tick\" est local à la boucle live, ainsi chaque "
"boucle live a son propre \"tick\" indépendant :"

#: 09.4-Ticking.md:40
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play (scale :e2, :minor_pentatonic, num_octaves: 3).tick, release: 0.25\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play (scale :e2, :minor_pentatonic, num_octaves: 3).tick, release: 0.25\n"
"  sleep 0.25\n"
"end"

#: 09.4-Ticking.md:53
#, fuzzy
msgid "Tick"
msgstr "Fonction Tick"

#: 09.4-Ticking.md:55
#, fuzzy
msgid "You can also call `tick` as a standard fn and use the value as an index:"
msgstr ""
"Vous pouvez également appeler `tick` comme une fonction standard et utiliser s"
"a valeur de retour comme un index :"

#: 09.4-Ticking.md:57
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  idx = tick\n"
"  play (scale :e3, :minor_pentatonic)[idx], release: 0.1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  idx = tick\n"
"  play (scale :e3, :minor_pentatonic)[idx], release: 0.1\n"
"  sleep 0.125\n"
"end"

#: 09.4-Ticking.md:65
#, fuzzy
msgid ""
"However, it is much nicer to call `.tick` at the end. The `tick` fn is for whe"
"n you want to do fancy things with the tick value and for when you want to use"
" ticks for other things than indexing into rings."
msgstr ""
"Cependant, c'est plus joli d'appeler `.tick` à la fin. La fonction `.tick` est"
" faite pour les cas où vous voulez faire des fantaisies avec la valeur retourn"
"ée ou utiliser les \"ticks\" pour autre chose que l'indexation des anneaux."

#: 09.4-Ticking.md:70
#, fuzzy
msgid "Look"
msgstr "Fonction Look"

#: 09.4-Ticking.md:72
#, fuzzy
msgid ""
"The magical thing about tick is that not only does it return a new index (or t"
"he value of the ring at that index) it also makes sure that next time you call"
" tick, it's the next value. Take a look at the examples in the docs for `tick`"
" for many ways of working with this. However, for now, it's important to point"
" out that sometimes you'll want to just look at the current tick value and *no"
"t increase* it. This is available via the `look` fn. You can call `look` as a "
"standard fn or by adding `.look` to the end of a ring."
msgstr ""
"La chose magique apportée par \"tick\" est que non seulement un nouvel index est"
" retourné (ou la valeur de l'anneau à cet index) mais qu'il garantit que la fo"
"is suivante où vous l'appellerez, vous obtiendrez la valeur suivante. Jetez un"
" œil sur les exemples de la documentation de `.tick` pour voir les différentes"
" façons de l'employer. Toutefois, pour le moment, il est important de souligne"
"r que quelquefois, vous voulez juste obtenir la valeur courante de \"tick\" sans"
" l'*incrémenter*. Ceci est disponible via la fonction `look`. Vous pouvez appe"
"ler `look` comme une fonction standard ou ajouter `.look` à la fin d'un anneau"
"."

#: 09.4-Ticking.md:81
#, fuzzy
msgid "Naming Ticks"
msgstr "Nommage des Ticks"

#: 09.4-Ticking.md:83
#, fuzzy
msgid ""
"Finally, sometimes you'll need more than one tick per live loop. This is achie"
"ved by giving your tick a name:"
msgstr ""
"Finalement, vous avez quelquefois besoin de plus d'un \"tick\" par boucle live. "
"C'est réalisé en donnant un nom à vos \"ticks\":"

#: 09.4-Ticking.md:86
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick(:foo), release: 0.1\n"
"  sleep (ring 0.125, 0.25).tick(:bar)\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick(:foo), release: 0.1\n"
"  sleep (ring 0.125, 0.25).tick(:bar)\n"
"end"

#: 09.4-Ticking.md:93
#, fuzzy
msgid ""
"Here we're using two ticks one for the note to play and another for the sleep "
"time. As they're both in the same live loop, to keep them separate we need to "
"give them unique names. This is exactly the same kind of thing as naming `live"
"_loop`s - we just pass a symbol prefixed with a `:`. In the example above we c"
"alled one tick `:foo` and the other `:bar`. If we want to `look` at these we a"
"lso need to pass the name of the tick to `look`."
msgstr ""
"Ici, nous utilisons deux \"ticks\", un pour la note à jouer et un autre pour la "
"durée de \"sleep\". Comme ils sont tous deux dans la même boucle, pour les maint"
"enir indépendants, nous devons leur donner des noms uniques. C'est exactement "
"le même genre de solution que dans le cas   du nommage des `live_loop`s - nous"
" passons simplement un symbole précédé d'un `:`. Dans l'exemple ci-dessus, nou"
"s avons appelé un \"tick\" `:foo` et l'autre `:bar`. Si nous voulons juste conna"
"ître leur valeur, nous devons aussi passer le nom du \"tick\" à `look`."

#: 09.4-Ticking.md:101
#, fuzzy
msgid "Don't make it too complicated"
msgstr "Ne faites pas de choses trop compliquées"

#: 09.4-Ticking.md:103
#, fuzzy
msgid ""
"Most of the power in the tick system isn't useful when you get started. Don't "
"try and learn everything in this section. Just focus on ticking through a sing"
"le ring. That'll give you most of the joy and simplicity of ticking through ri"
"ngs in your `live_loop`s."
msgstr ""
"La plupart de la puissance du système des \"ticks\" n'est pas utile quand vous d"
"ébutez. N'essayez pas et n'apprenez pas tout de cette section. Concentrez-vous"
" seulement sur le parcours d'un simple anneau. Cela vous procurera la plus gra"
"nde part de la joie et de la simplicité du parcours des anneaux dans vos `live"
"_loop`s."

#: 09.4-Ticking.md:108
#, fuzzy
msgid ""
"Take a look at the documentation for `tick` where there are many useful exampl"
"es and happy ticking!"
msgstr ""
"Jetez un œil sur la documentation des `tick`s où se trouvent de nombreux exemp"
"les utiles, et joyeux parcours automatiques !"

#: 10-Essential-Knowledge.md:1
#, fuzzy
msgid "10 Essential Knowledge"
msgstr "10 Connaissances essentielles"

#: 10-Essential-Knowledge.md:3
#, fuzzy
msgid "Essential Knowledge"
msgstr "Connaissances essentielles"

#: 10-Essential-Knowledge.md:5
#, fuzzy
msgid ""
"This section will cover some very useful - in fact *essential* - knowledge for"
" getting the most out of your Sonic Pi experience."
msgstr ""
"Cette section va couvrir des connaissances très utiles - en vérité *essentiell"
"es* - pour obtenir le meilleur de votre expérimentation de Sonic Pi."

#: 10-Essential-Knowledge.md:8
#, fuzzy
msgid ""
"We'll cover how to take advantage of the many keyboard shortcuts available to "
"you, how to share your work and some tips on performing with Sonic Pi."
msgstr ""
"Nous couvrirons comment prendre avantage des nombreux raccourcis clavier mis à"
" votre disposition, comment partager votre travail et quelques trucs sur l'int"
"erprétation musicale avec Sonic Pi."

#: 10.1-Using-Shortcuts.md:1
#, fuzzy
msgid "10.1 Using Shortcuts"
msgstr "10.1 Utilisation des raccourcis"

#: 10.1-Using-Shortcuts.md:3
#, fuzzy
msgid "Using Shortcuts"
msgstr "Utilisation des raccourcis clavier"

#: 10.1-Using-Shortcuts.md:5
#, fuzzy
msgid ""
"Sonic Pi is as much an instrument as a coding environment. Shortcuts can there"
"fore make playing Sonic Pi much more *efficient and natural* - especially when"
" you're playing live in front of an audience."
msgstr ""
"Sonic Pi est plus un instrument qu'un environnement de programmation. Les racc"
"ourcis peuvent cependant rendre votre jeu avec Sonic Pi plus *efficace et natu"
"rel* - particulièrement quand vous jouez en \"live\" devant un auditoire."

#: 10.1-Using-Shortcuts.md:9
#, fuzzy
msgid ""
"Much of Sonic Pi can be controlled through the keyboard. As you gain more fami"
"liarity working and performing with Sonic Pi, you'll likely start using the sh"
"ortcuts more and more. *I personally touch-type* (I recommend you consider lea"
"rning too) and find myself frustrated whenever I need to reach for the mouse a"
"s it slows me down. I therefore use all of these shortcuts on a very regular b"
"asis!"
msgstr ""
"La plus grande part de Sonic Pi peut être contrôlée au moyen du clavier. Au fu"
"r et à mesure que vous deviendrez plus familier dans la pratique et l'interpré"
"tation avec Sonic Pi, vous commencerez probablement à utiliser de plus en plus"
" de raccourcis. *Personnellement, je tape sans regarder le clavier* (je recomm"
"ande que vous appreniez à le faire aussi) et je me sens frustré quand j'ai bes"
"oin d'attraper la souris parce que ça me retarde. J'utilise donc tous ces racc"
"ourcis très régulièrement."

#: 10.1-Using-Shortcuts.md:16
#, fuzzy
msgid ""
"Therefore, if you learn the shortcuts, you'll learn to use your keyboard effec"
"tively and you'll be live coding like a pro in no time."
msgstr ""
"Par conséquent, si vous apprenez les raccourcis, vous saurez utiliser efficace"
"ment votre clavier et vous coderez en \"live\" comme un pro."

#: 10.1-Using-Shortcuts.md:19
#, fuzzy
msgid ""
"However, *don't try and learn them all at once*, just try and remember the one"
"s you use most and then keep adding more to your practice."
msgstr ""
"Toutefois, *n'essayez pas de les apprendre tous à la fois*, essayez et souvene"
"z-vous simplement de ceux que vous utilisez le plus et continuez à en ajouter "
"en supplément à votre pratique."

#: 10.1-Using-Shortcuts.md:22
#, fuzzy
msgid "Consistency across Platforms"
msgstr "Compatibilité entre plateformes"

#: 10.1-Using-Shortcuts.md:24
#, fuzzy
msgid ""
"Imagine you're learning the clarinet. You'd expect all clarinets of all makes "
"to have similar controls and fingerings. If they didn't, you'd have a tough ti"
"me switching between different clarinets and you'd be stuck to using just one "
"make."
msgstr ""
"Imaginez que vous appreniez la clarinette. Vous vous attendriez à ce que toute"
"s les clarinettes aient les mêmes contrôles et le même doigté. Si elles ne l'a"
"vaient pas, vous passeriez un moment pénible à basculer entre différentes clar"
"inettes et vous seriez enclin à rester toujours avec la même."

#: 10.1-Using-Shortcuts.md:29
#, fuzzy
msgid ""
"Unfortunately the three major operating systems (Linux, Mac OS X and Windows) "
"come with their own standard defaults for actions such as cut and paste etc. S"
"onic Pi will try and honour these standards. However *priority is placed on co"
"nsistency across platforms* within Sonic Pi rather than attempting to conform "
"to a given platform's standards. This means that when you learn the shortcuts "
"whilst playing with Sonic Pi on your Raspberry Pi, you can move to the Mac or "
"PC and feel right at home."
msgstr ""
"Malheureusement, les trois systèmes d'exploitation principaux (Linux, Mac OS X"
" et Windows) se présentent avec leurs propres standards par défaut pour des ac"
"tions telles que copier/coller. Sonic Pi va essayer d'honorer ces standards. T"
"outefois *la priorité est de favoriser la compatibilité entre plateformes* ave"
"c Sonic Pi plutôt que de tenter de se conformer aux standards d'une plateforme"
" donnée. Ceci signifie que quand vous apprenez les raccourcis de jeu avec Soni"
"c Pi sur votre Raspberry Pi, vous pouvez passer au Mac ou au PC et vous retrou"
"ver en terre connue."

#: 10.1-Using-Shortcuts.md:37
#, fuzzy
msgid "Control and Meta"
msgstr "\"Control\" et \"Meta\""

#: 10.1-Using-Shortcuts.md:39
#, fuzzy
msgid ""
"Part of the notion of consistency is the naming of shortcuts. In Sonic Pi we u"
"se the names *Control* and *Meta* to refer to the two main combination keys. O"
"n all platforms *Control* is the same. However, on Linux and Windows, *Meta* i"
"s actually the *Alt* key while on Mac *Meta* is the *Command* key. For consist"
"ency we'll use the term *Meta* - just remember to map that to the appropriate "
"key on your operating system."
msgstr ""
"Une part de la notion de compatibilité est l'appellation des raccourcis. Dans "
"Sonic Pi, nous utilisons les termes *Control* et *Meta* pour se référer aux de"
"ux combinaisons de touches principales. Sur toutes les plateformes *Control* ("
"Ctrl) est identique. Toutefois, sur Linux et Windows, *Meta* est en réalité la"
" touche *Alt* alors que sur Mac, *Meta* est la touche *Command* (Cmd). Pour la"
" compatibilité, nous utiliserons le terme *Meta* - rappelez-vous juste de le f"
"aire correspondre à la touche appropriée sur votre système d'exploitation."

#: 10.1-Using-Shortcuts.md:46
#, fuzzy
msgid "Abbreviations"
msgstr "Abréviations"

#: 10.1-Using-Shortcuts.md:48
#, fuzzy
msgid ""
"To help keep things simple and readable, we'll use the abbreviations *C-* for "
"*Control* plus another key and *M-* for *Meta* plus another key. For example, "
"if a shortcut requires you to hold down both *Meta* and *r* we'll write that a"
"s `M-r`. The *-* just means \"at the same time as.\""
msgstr ""
"Pour conserver les choses simples et lisibles, nous utiliserons les abréviatio"
"ns *C-* pour *Control* plus une autre touche et *M-* pour *Meta* plus une autr"
"e touche. Par exemple, si un raccourci consiste à maintenir enfoncées à la foi"
"s *meta* et *r*, nous l'écrirons *M-r*. Le *-* veut dire simplement \"en même t"
"emps que\"."

#: 10.1-Using-Shortcuts.md:53
#, fuzzy
msgid "The following are some of the shortcuts I find most useful."
msgstr "Voici ci-dessous les raccourcis que j'estime les plus utiles :"

#: 10.1-Using-Shortcuts.md:55
#, fuzzy
msgid "Stopping and starting"
msgstr "Arrêt et Départ"

#: 10.1-Using-Shortcuts.md:57
#, fuzzy
msgid ""
"Instead of always reaching for the mouse to run your code, you can simply pres"
"s `M-r`. Similarly, to stop running code you can press `M-s`."
msgstr ""
"Au lieu de toujours attraper la souris pour exécuter votre code, vous pouvez s"
"implement presser `M-r`. Similairement, pour stopper l'exécution de votre code"
", vous pouvez presser `M-s`."

#: 10.1-Using-Shortcuts.md:60 10.2-Shortcut-Cheatsheet.md:51
msgid "Navigation"
msgstr ""

#: 10.1-Using-Shortcuts.md:62
#, fuzzy
msgid ""
"I'm really lost without the navigation shortcuts. I therefore highly recommend"
" you spend the time to learn them. These shortcuts also work extremely well wh"
"en you've learned to touch type as they use the standard letters rather than r"
"equiring you to move your hand to the mouse or the arrow keys on your keyboard"
"."
msgstr ""
"Je suis vraiment perdu sans les raccourcis de navigation. Je recommande donc v"
"ivement que vous passiez du temps à les apprendre. Ces raccourcis fonctionnent"
" aussi extrèmement bien quand vous apprenez à taper sans regarder le clavier p"
"arce qu'ils utilisent des lettres standards sans nécessiter de déplacer votre "
"main jusqu'à la souris ou jusqu'aux touches flèches de votre clavier."

#: 10.1-Using-Shortcuts.md:68
#, fuzzy
msgid ""
"You can move to the beginning of the line with `C-a`, the end of the line with"
" `C-e`, up a line with `C-p`, down a line with `C-n`, forward a character with"
" `C-f`, and back a character with `C-b`. You can even delete all the character"
"s from the cursor to the end of the line with `C-k`."
msgstr ""
"Vous pouvez vous déplacer au début de la ligne avec `C-a`, à la fin de la lign"
"e avec `C-e`, à la ligne du dessus avec `C-p`, à la ligne du dessous avec `C-n"
"`, avancer d'un caractère avec `C-f`, reculer d'un caractère avec `C-b`. Vous "
"pouvez même effacer tous les caractères depuis le curseur jusqu'à la fin de la"
" ligne avec `C-k`."

#: 10.1-Using-Shortcuts.md:74
#, fuzzy
msgid "Tidy Code"
msgstr "Code ordonné"

#: 10.1-Using-Shortcuts.md:76
#, fuzzy
msgid "To auto-align your code simply press `M-m`."
msgstr "Pour aligner et indenter automatiquement vos lignes de code, pressez `M-m`."

#: 10.1-Using-Shortcuts.md:78
#, fuzzy
msgid "Help System"
msgstr "Système d'aide"

#: 10.1-Using-Shortcuts.md:80
#, fuzzy
msgid ""
"To toggle the help system you can press `M-i`. However, a much more useful sho"
"rtcut to know is `C-i` which will look up the word underneath the cursor and d"
"isplay the docs if it finds anything. Instant help!"
msgstr ""
"Pour afficher/cacher le système d'aide vous pouvez presser `M-i`. Toutefois un"
" raccourci plus utile à connaître est `C-i`. Il détecte le mot où se trouve le"
" curseur et affiche la documentation le concernant s'il la trouve. Aide instan"
"tanée !"

#: 10.1-Using-Shortcuts.md:84
#, fuzzy
msgid "For a full list take a look at section 10.2 Shortcut Cheatsheet."
msgstr ""
"Pour une liste complète, jetez un œil à la section 10.2 - Antisèche des raccou"
"rcis."

#: 10.2-Shortcut-Cheatsheet.md:1
#, fuzzy
msgid "10.2 Shortcut Cheatsheet"
msgstr "10.2 Récapitulatif des raccourcis"

#: 10.2-Shortcut-Cheatsheet.md:3
#, fuzzy
msgid "Shortcut Cheatsheet"
msgstr "Antisèche des raccourcis"

#: 10.2-Shortcut-Cheatsheet.md:5
#, fuzzy
msgid ""
"The following is a summary of the main shortcuts available within Sonic Pi. Pl"
"ease see Section 10.1 for motivation and background."
msgstr ""
"Ce qui suit est un récapitulatif des principaux raccourcis clavier disponibles"
" avec Sonic Pi. Voyez S.V.P. la section 10.1 pour la motivation et le contexte"
"."

#: 10.2-Shortcut-Cheatsheet.md:8
msgid "Conventions"
msgstr ""

#: 10.2-Shortcut-Cheatsheet.md:10
#, fuzzy
msgid ""
"In this list, we use the following conventions (where *Meta* is one of *Alt* o"
"n Windows/Linux or *Cmd* on Mac):"
msgstr ""
"Dans cette liste, nous utilisons les conventions suivantes (où *Meta* est la t"
"ouche *Alt* pour Windows/Linux et *Cmd* sur Mac) :"

#: 10.2-Shortcut-Cheatsheet.md:13
#, fuzzy
msgid ""
"`C-a` means hold the *Control* key then press the *a* key whilst holding them "
"both at the same time, then releasing."
msgstr ""
"`C-a` signifie maintenir la touche *Control* enfoncée puis presser la touche *"
"a*, puis relacher les deux en même temps."

#: 10.2-Shortcut-Cheatsheet.md:14
#, fuzzy
msgid ""
"`M-r` means hold the *Meta* key and then press the *r* key whilst holding them"
" both at the same time, then releasing."
msgstr ""
"`M-r` signifie maintenir la touche *Meta* enfoncée puis presser la touche *r*,"
" puis relacher les deux en même temps."

#: 10.2-Shortcut-Cheatsheet.md:15
#, fuzzy
msgid ""
"`S-M-z` means hold the *Shift* key, then the *Meta* key, then finally the *z* "
"key all at the same time, then releasing."
msgstr ""
"`S-M-z` signifie maintenir les touches *Majuscule* et *Meta* enfoncées puis pr"
"esser la touche *z*, puis les relacher toutes en même temps."

#: 10.2-Shortcut-Cheatsheet.md:16
#, fuzzy
msgid ""
"`C-M-f` means hold the *Control* key, then press *Meta* key, finally the *f* k"
"ey all at the same time, then releasing."
msgstr ""
"`C-M-f` signifie maintenir les touches *Control* et *Meta* enfoncées puis pres"
"ser la touche *f*, puis les relacher toutes en même temps."

#: 10.2-Shortcut-Cheatsheet.md:18
#, fuzzy
msgid "Main Application Manipulation"
msgstr "Manipulation de l'Application principale"

#: 10.2-Shortcut-Cheatsheet.md:20
#, fuzzy
msgid "`M-r` - Run code"
msgstr "`M-r` - Exécute le code"

#: 10.2-Shortcut-Cheatsheet.md:21
#, fuzzy
msgid "`M-s` - Stop code"
msgstr "`M-s` - Arrête le code"

#: 10.2-Shortcut-Cheatsheet.md:22
#, fuzzy
msgid "`M-i` - Toggle Help System"
msgstr "`M-i` - Affiche/cache le système d'aide"

#: 10.2-Shortcut-Cheatsheet.md:23
#, fuzzy
msgid "`M-p` - Toggle Preferences"
msgstr "`M-p` - Affiche/cache les préférences"

#: 10.2-Shortcut-Cheatsheet.md:24
#, fuzzy
msgid "`M-{` - Switch buffer to the left"
msgstr "`M-}` - Bascule sur le buffer de gauche"

#: 10.2-Shortcut-Cheatsheet.md:25
#, fuzzy
msgid "`M-}` - Switch buffer to the right"
msgstr "`S-M-{` - Bascule sur le buffer de droite"

#: 10.2-Shortcut-Cheatsheet.md:26
#, fuzzy
msgid "`M-+` - Increase text size of current buffer"
msgstr "`M-+` - Augmente la taille du texte du buffer courant"

#: 10.2-Shortcut-Cheatsheet.md:27
#, fuzzy
msgid "`M--` - Decrease text size of current buffer"
msgstr "`M--` - Diminue la taille du texte du buffer courant"

#: 10.2-Shortcut-Cheatsheet.md:29
#, fuzzy
msgid "Selection/Copy/Paste"
msgstr "Sélection/Copier/Coller"

#: 10.2-Shortcut-Cheatsheet.md:31
#, fuzzy
msgid "`M-a` - Select all"
msgstr "`M-a` - Sélectionne tout"

#: 10.2-Shortcut-Cheatsheet.md:32
#, fuzzy
msgid "`M-c` - Copy selection to paste buffer"
msgstr "`M-c` - Copie la sélection dans le presse-papier"

#: 10.2-Shortcut-Cheatsheet.md:33
#, fuzzy
msgid "`M-]` - Copy selection to paste buffer"
msgstr "`M-]` - Copie la sélection dans le presse-papier"

#: 10.2-Shortcut-Cheatsheet.md:34
#, fuzzy
msgid "`M-x` - Cut selection to paste buffer"
msgstr "`M-x` - Coupe la sélection et la copie dans le presse-papier"

#: 10.2-Shortcut-Cheatsheet.md:35
#, fuzzy
msgid "`C-]` - Cut selection to paste buffer"
msgstr "`C-]` - Coupe la sélection et la copie dans le presse-papier"

#: 10.2-Shortcut-Cheatsheet.md:36
#, fuzzy
msgid "`C-k` - Cut to the end of the line"
msgstr "`C-k` - Coupe jusqu'à la fin de la ligne et le copie dans le presse-papier"

#: 10.2-Shortcut-Cheatsheet.md:37
#, fuzzy
msgid "`M-v` - Paste from paste buffer to editor"
msgstr "`M-v` - Colle depuis le presse-papier"

#: 10.2-Shortcut-Cheatsheet.md:38
#, fuzzy
msgid "`C-y` - Paste from paste buffer to editor"
msgstr "`C-y` - Colle depuis le presse-papier"

#: 10.2-Shortcut-Cheatsheet.md:39
#, fuzzy
msgid ""
"`C-SPACE` - Set mark. Navigation will now manipulate highlighted region. Use `"
"C-g` to escape."
msgstr ""
"`C-SPACE` - Pose une marque. La navigation surligne et sélectionne la région d"
"epuis la marque. Utilisez `C-g` pour sortir."

#: 10.2-Shortcut-Cheatsheet.md:41
#, fuzzy
msgid "Text Manipulation"
msgstr "Manipulation du texte"

#: 10.2-Shortcut-Cheatsheet.md:43
#, fuzzy
msgid "`M-m` - Align all text"
msgstr "`M-m` - aligne et indente tout le texte"

#: 10.2-Shortcut-Cheatsheet.md:44
#, fuzzy
msgid "`Tab` - Align current line or selection (or select autocompletion)"
msgstr ""
"`Tab` - aligne et indente la ligne courante ou la sélection (ou sélectionne l'"
"auto-complétion)"

#: 10.2-Shortcut-Cheatsheet.md:45
#, fuzzy
msgid "`C-l` - Centre editor"
msgstr "`C-l` - Centre l'éditeur"

#: 10.2-Shortcut-Cheatsheet.md:46
#, fuzzy
msgid "`M-/` - Comment/Uncomment current line or selection"
msgstr "`M-/` - Commente / décommente la ligne courante ou la sélection"

#: 10.2-Shortcut-Cheatsheet.md:47
#, fuzzy
msgid "`C-t` - Transpose/swap characters"
msgstr "`C-t` - Intervertit les caractères sélectionnés"

#: 10.2-Shortcut-Cheatsheet.md:48
#, fuzzy
msgid "`M-u` - Convert next word (or selection) to upper case."
msgstr "`M-u` - Convertit le mot suivant (ou la sélection) en majuscule."

#: 10.2-Shortcut-Cheatsheet.md:49
#, fuzzy
msgid "`M-l` - Convert next word (or selection) to lower case."
msgstr "`M-l` - Convertit le mot suivant (ou la sélection) en minuscule."

#: 10.2-Shortcut-Cheatsheet.md:53
#, fuzzy
msgid "`C-a` - Move to beginning of line"
msgstr "`C-a` - Déplace au début de la ligne"

#: 10.2-Shortcut-Cheatsheet.md:54
#, fuzzy
msgid "`C-e` - Move to end of line"
msgstr "`C-e` - Déplace à la fin de la ligne"

#: 10.2-Shortcut-Cheatsheet.md:55
#, fuzzy
msgid "`C-p` - Move to previous line"
msgstr "`C-p` - Déplace à la ligne précédente"

#: 10.2-Shortcut-Cheatsheet.md:56
#, fuzzy
msgid "`C-n` - Move to next line"
msgstr "`C-n` - Déplace à la ligne suivante"

#: 10.2-Shortcut-Cheatsheet.md:57
#, fuzzy
msgid "`C-f` - Move forward one character"
msgstr "`C-f` - Avance d'un caractère"

#: 10.2-Shortcut-Cheatsheet.md:58
#, fuzzy
msgid "`C-b` - Move backward one character"
msgstr "`C-b` - Recule d'un caractère"

#: 10.2-Shortcut-Cheatsheet.md:59
#, fuzzy
msgid "`M-f` - Move forward one word"
msgstr "`M-f` - Avance d'un mot"

#: 10.2-Shortcut-Cheatsheet.md:60
#, fuzzy
msgid "`M-b` - Move backward one word"
msgstr "`M-b` - Recule d'un mot"

#: 10.2-Shortcut-Cheatsheet.md:61
#, fuzzy
msgid "`C-M-n` - Move line or selection down"
msgstr "`C-M-n` - Déplace la ligne ou la sélection vers le bas"

#: 10.2-Shortcut-Cheatsheet.md:62
#, fuzzy
msgid "`C-M-p` - Move line or selection up"
msgstr "`C-M-p` - Déplace la ligne ou la sélection vers le haut"

#: 10.2-Shortcut-Cheatsheet.md:63
#, fuzzy
msgid "`S-M-u` - Move up 10 lines"
msgstr "`S-M-u` - Déplace 10 lignes vers le haut"

#: 10.2-Shortcut-Cheatsheet.md:64
#, fuzzy
msgid "`S-M-d` - Move down 10 lines"
msgstr "`S-M-d` - Déplace 10 lignes vers le bas"

#: 10.2-Shortcut-Cheatsheet.md:65
msgid "`M-<` - Move to beginning of buffer"
msgstr ""

#: 10.2-Shortcut-Cheatsheet.md:66
msgid "`M->` - Move to end of buffer"
msgstr ""

#: 10.2-Shortcut-Cheatsheet.md:68
#, fuzzy
msgid "Deletion"
msgstr "Suppression"

#: 10.2-Shortcut-Cheatsheet.md:70
#, fuzzy
msgid "`C-h` - Delete previous character"
msgstr "`C-h` - Supprime le caractère précédent"

#: 10.2-Shortcut-Cheatsheet.md:71
#, fuzzy
msgid "`C-d` - Delete next character"
msgstr "`C-d` - Supprime le caractère suivant"

#: 10.2-Shortcut-Cheatsheet.md:73
#, fuzzy
msgid "Advanced Editor Features"
msgstr "Fonctionnalités avancées de l'éditeur"

#: 10.2-Shortcut-Cheatsheet.md:75
#, fuzzy
msgid "`C-i` - Show docs for word under cursor"
msgstr "`C-i` - Affiche la documentation du mot où se trouve le curseur"

#: 10.2-Shortcut-Cheatsheet.md:76
#, fuzzy
msgid "`M-z` - Undo"
msgstr "`M-z` - Défait"

#: 10.2-Shortcut-Cheatsheet.md:77
#, fuzzy
msgid "`S-M-z` - Redo"
msgstr "`S-M-z` - Refait"

#: 10.2-Shortcut-Cheatsheet.md:78
#, fuzzy
msgid "`C-g` - Escape"
msgstr "`C-g` - Sort"

#: 10.2-Shortcut-Cheatsheet.md:79
#, fuzzy
msgid "`S-M-f` - Toggle fullscreen mode"
msgstr "`S-M-f` - Bascule en mode plein écran"

#: 10.2-Shortcut-Cheatsheet.md:80
#, fuzzy
msgid "`S-M-b` - Toggle visibility of buttons"
msgstr "`S-M-b` - Affiche/cache les boutons"

#: 10.2-Shortcut-Cheatsheet.md:81
#, fuzzy
msgid "`S-M-l` - Toggle visibility of log"
msgstr "`S-M-l` - Affiche/cache le panneau \"trace\""

#: 10.2-Shortcut-Cheatsheet.md:82
#, fuzzy
msgid "`S-M-m` - Toggle between light/dark modes"
msgstr "`S-M-m` - Bascule entre l'affichage clair et sombre"

#: 10.3-Sharing.md:1
#, fuzzy
msgid "10.3 Sharing"
msgstr "10.3 Partage"

#: 10.3-Sharing.md:3
#, fuzzy
msgid "Sharing"
msgstr "Partage"

#: 10.3-Sharing.md:5
#, fuzzy
msgid "Sonic Pi is all about sharing and learning with each other."
msgstr "Sonic Pi a tout ce qu'il faut pour étudier et partager avec les autres."

#: 10.3-Sharing.md:7
#, fuzzy
msgid ""
"Once you've learned how to code music, sharing your compositions is as simple "
"as sending an email containing your code. Please do *share* your code with oth"
"ers so they can *learn* from your work and even use parts in a new *mash-up*."
msgstr ""
"Une fois que vous avez appris comment coder de la musique, partager vos compos"
"itions est aussi simple que d'envoyer un mail contenant votre code. S.V.P. *pa"
"rtagez* votre code avec les autres, ainsi ils pourront *apprendre* de votre tr"
"avail et même en utiliser des parties dans un nouveau *\"mashup\"*."

#: 10.3-Sharing.md:12
#, fuzzy
msgid ""
"If you're unsure of the best way to share your work with others I recommend pu"
"tting your code on [GitHub](https://github.com) and your music on [SoundCloud]"
"(https://soundcloud.com). That way you'll be able to easily reach a large audi"
"ence."
msgstr ""
"Si vous n'êtes pas sûr de connaître le meilleur moyen de partager votre travai"
"l avec les autres, je vous recommande de mettre votre code sur [GitHub](https:"
"//github.com) et votre musique sur [SoundCloud](https://soundcloud.com). De ce"
"tte manière vous pourrez atteindre un grand auditoire."

#: 10.3-Sharing.md:17
msgid "Code -> GitHub"
msgstr ""

#: 10.3-Sharing.md:19
#, fuzzy
msgid ""
"[GitHub](https://github.com) is a site for sharing and working with code. It's"
" used by professional developers as well as artists for sharing and collaborat"
"ing with code. The simplest way to share a new piece of code (or even an unfin"
"ished piece) is to create a [Gist](https://gist.github.com). A [Gist](https://"
"gist.github.com) is a simple way of uploading your code in a simple way that o"
"thers can see, copy and share."
msgstr ""
"[GitHub](https://github.com) est un site pour partager et travailler avec du c"
"ode. Il est utilisé aussi bien par des développeurs professionnels que par des"
" artistes pour partager et collaborer avec du code. La manière la plus simple "
"pour partager un morceau de code (ou même un morceau non terminé) est de créer"
" un [Gist](https://gist.github.com). Un [Gist](https://gist.github.com) est un"
" moyen simple de déposer votre code afin que les autres y aient accès de maniè"
"re simple : voir, copier, et partager."

#: 10.3-Sharing.md:27
msgid "Audio -> SoundCloud"
msgstr ""

#: 10.3-Sharing.md:29
#, fuzzy
msgid ""
"Another important way of sharing your work is to record the audio and upload i"
"t to [SoundCloud](https://soundcloud.com). Once you've uploaded your piece, ot"
"her users can comment and discuss your work. I also recommend placing a link t"
"o a [Gist](https://gist.github.com) of your code in the track description."
msgstr ""
"Une autre façon importante de partager votre travail est d'enregistrer l'audio"
" et de déposer l'enregistrement sur [SoundCloud](https://soundcloud.com). Une "
"fois que vous avez déposé votre morceau, les autres peuvent commenter et discu"
"ter votre travail. Je vous recommande aussi de placer un lien vers le [Gist](h"
"ttps://gist.github.com) de votre code dans la description de la piste."

#: 10.3-Sharing.md:35
#, fuzzy
msgid ""
"To record your work, hit the `Rec` button in the toolbar, and recording starts"
" immediately. Hit `Run` to start your code if it isn't already in progress. Wh"
"en you're done recording, press the flashing `Rec` button again, and you'll be"
" prompted to enter a filename. The recording will be saved as a WAV file, whic"
"h can be edited and converted to MP3 by any number of free programs (try Audac"
"ity for instance)."
msgstr ""
"Pour enregistrer votre travail, pressez le bouton `Rec` de la barre d'outils, "
"et l'enregistrement démarre immédiatement. Pressez `Run` pour lancer votre cod"
"e s'il n'est pas encore démarré. Quand votre enregistrement devra être arrêté,"
" pressez le bouton `Rec` clignotant à nouveau, et il vous sera demandé d'entre"
"r un nom de fichier. L'enregistrement sera sauvegardé dans le format d'un fich"
"ier WAV, lequel peut être modifié et converti en MP3 par n'importe quel progra"
"mme gratuit (essayez Audacity par exemple)."

#: 10.3-Sharing.md:43
#, fuzzy
msgid "Hope"
msgstr "Espoir"

#: 10.3-Sharing.md:45
#, fuzzy
msgid ""
"I encourage you to share your work and really hope that we'll all teach each o"
"ther new tricks and moves with Sonic Pi. I'm really excited by what you'll hav"
"e to show me."
msgstr ""
"Je vous encourage à partager votre travail et espère vraiment que nous allons "
"tous nous apprendre de nouvelles astuces et progresser avec Sonic Pi. Je suis "
"réellement enthousiaste de ce que vous allez avoir à me montrer."

#: 10.4-Performing.md:1
#, fuzzy
msgid "10.4 Performing"
msgstr "10.4 Se produire"

#: 10.4-Performing.md:3
#, fuzzy
msgid "Performing"
msgstr "Se produire"

#: 10.4-Performing.md:5
#, fuzzy
msgid ""
"One of the most exciting aspects of Sonic Pi is that it enables you to use cod"
"e as a *musical instrument*. This means that writing code live can now be seen"
" as a new way of performing music."
msgstr ""
"Un des aspects les plus passionnants de Sonic Pi est qu'il vous permet d'utili"
"ser le code comme un *instrument de musique*. Ce qui signifie qu'écrire du cod"
"e en \"live\" peut maintenant être considéré comme une nouvelle manière d'interp"
"réter de la musique."

#: 10.4-Performing.md:9
#, fuzzy
msgid "We call this *Live Coding*."
msgstr "Nous appelons ceci *codage en \"live\"*."

#: 10.4-Performing.md:11
#, fuzzy
msgid "Show Your Screen"
msgstr "Montrez votre écran"

#: 10.4-Performing.md:13
#, fuzzy
msgid ""
"When you live code I recommend you *show your screen* to your audience. Otherw"
"ise it's like playing a guitar but hiding your fingers and the strings. When I"
" practice at home I use a Raspberry Pi and a little mini projector on my livin"
"g room wall. You could use your TV or one of your school/work projectors to gi"
"ve a show. Try it, it's a lot of fun."
msgstr ""
"Quand vous codez en \"live\", je vous recommande de *montrer votre écran* à votr"
"e auditoire. Autrement, c'est comme jouer de la guitare, mais en cachant vos d"
"oigts et les cordes. Quand je pratique à la maison, j'utilise un Raspberry Pi "
"et un mini projecteur sur le mur de mon salon. Vous pouvez utiliser votre TV o"
"u une de vos lampes de bureau pour faire un \"show\". Essayez-le, c'est beaucoup"
" de plaisir."

#: 10.4-Performing.md:20
#, fuzzy
msgid "Form a Band"
msgstr "Formez un orchestre"

#: 10.4-Performing.md:22
#, fuzzy
msgid ""
"Don't just play on your own - form a live coding band! It's a lot of fun jammi"
"ng with others. One person could do beats, another ambient background, etc. Se"
"e what interesting combinations of sounds you can have together."
msgstr ""
"Ne jouez pas juste pour vous seul - formez un orchestre de codage en \"live\". C"
"'est beaucoup de plaisir que d'improviser avec d'autres. Une personne pourrait"
" faire la rythmique, une autre faire le fond ambiant, etc. Recherchez les comb"
"inaisons de sons que vous pouvez avoir ensemble."

#: 10.4-Performing.md:27
msgid "TOPLAP"
msgstr ""

#: 10.4-Performing.md:29
#, fuzzy
msgid ""
"Live coding isn't completely new - a small number of people have been doing it"
" for a few years now, typically using bespoke systems they've built for themse"
"lves. A great place to go and find out more about other live coders and system"
"s is [TOPLAP](http://toplap.org)."
msgstr ""
"Le codage en \"live\" n'est pas totalement nouveau - un petit nombre de personne"
"s l'on pratiqué maintenant depuis quelques années, typiquement en utilisant de"
"s systèmes sur mesure qu'ils avaient élaborés eux-mêmes. Un super site à visit"
"er pour trouver plus d'informations sur les codeurs en \"live\" et leurs système"
"s est [TOPLAP](http://toplap.org)."

#: 10.4-Performing.md:34
msgid "Algorave"
msgstr ""

#: 10.4-Performing.md:36
#, fuzzy
msgid ""
"Another great resource for exploring the live coding world is [Algorave](http:"
"//algorave.com). Here you can find all about a specific strand of live coding "
"for making music in nightclubs."
msgstr ""
"Une autre super ressource pour explorer le monde du codage en \"live\" est [Algo"
"rave](http://algorave.com). Vous trouverez là tout sur une branche spécifique "
"du codage en \"live\" pour faire de la musique dans les boîtes de nuit."

#: 11-Minecraft-Pi.md:1
msgid "11 Minecraft Pi"
msgstr ""

#: 11-Minecraft-Pi.md:3
msgid "Minecraft Pi"
msgstr ""

#: 11-Minecraft-Pi.md:5
#, fuzzy
msgid ""
"Sonic Pi now supports a simple API for interacting with Minecraft Pi - the spe"
"cial edition of Minecraft which is installed by default on the Raspberry Pi's "
"Raspbian Linux-based operating system."
msgstr ""
"Sonic Pi supporte maintenant une simple API (interface de programmation) pour "
"interagir avec Minecraft Pi - l'édition spéciale de Minecraft qui est installé"
"e par défaut avec le système d'exploitation Raspbian Linux du Raspberry Pi."

#: 11-Minecraft-Pi.md:9
#, fuzzy
msgid "No need to import libraries"
msgstr "Importation de bibliothèques non nécessaire"

#: 11-Minecraft-Pi.md:11
#, fuzzy
msgid ""
"The Minecraft Pi integration has been designed to be insanely easy to use. All"
" you need to do is to launch Minecraft Pi and create a world. You're then free"
" to use the `mc_*` fns just like you might use `play` and `synth`. There's no "
"need to import anything or install any libraries - it's all ready to go and wo"
"rks out of the box."
msgstr ""
"L'intégration avec Minecraft Pi a été conçue pour être extrêmement simple à ut"
"iliser. Tout ce dont vous avez besoin est de lancer Minecraft Pi et de créer u"
"n nouveau monde. Il vous est alors possible d'utiliser les fonctions `mc_*` ju"
"ste comme vous pourriez utiliser `play` et `synth`. Il n'y a pas besoin d'impo"
"rter quoi que ce soit ou d'installer des bibliothèques - c'est tout prêt à uti"
"liser et à fonctionner sans autre procès."

#: 11-Minecraft-Pi.md:17
#, fuzzy
msgid "Automatic Connection"
msgstr "Connection Automatique"

#: 11-Minecraft-Pi.md:19
#, fuzzy
msgid ""
"The Minecraft Pi API takes care of managing your connection to the Minecraft P"
"i application. This means you don't need to worry about a thing. If you try an"
"d use the Minecraft Pi API when Minecraft Pi isn't open, Sonic Pi will politel"
"y tell you. Similarly, if you close Minecraft Pi whilst you're still running a"
" `live_loop` that uses the API, the live loop will stop and politely tell you "
"that it can't connect. To reconnect, just launch Minecraft Pi again and Sonic "
"Pi will automatically detect and re-create the connection for you."
msgstr ""
"L'API à Minecraft Pi se préoccupe de la gestion de votre connexion à l'applica"
"tion Minecraft Pi. Ce qui signifie que vous n'avez pas besoin de vous en inqui"
"éter. Si vous essayez d'utiliser l'API à Minecraft Pi quand Minecraft Pi n'est"
" pas démarré, Sonic Pi vous en avertira poliment. Similairement, si vous arrêt"
"ez Minecraft Pi quand vous êtes encore en train d'exécuter une `live_loop` qui"
" utilise l'API, la boucle s'arrêtera et vous avertira poliment de l'impossibil"
"ité de se connecter. Pour vous reconnecter, relancer simplement Minecraft Pi, "
"Sonic Pi le détectera automatiquement et recréera la connection pour vous."

#: 11-Minecraft-Pi.md:28
#, fuzzy
msgid "Designed to be Live Coded"
msgstr "Conçue pour être codée en \"live\""

#: 11-Minecraft-Pi.md:30
#, fuzzy
msgid ""
"The Minecraft Pi API has been designed to work seamlessly within `live_loop`s."
" This means it's possible to synchronise modifications in your Minecraft Pi wo"
"rlds with modifications in your Sonic Pi sounds. Instant Minecraft-based music"
" videos! Note however that Minecraft Pi is alpha software and is known to be s"
"lightly buggy. If you encounter any problems simply restart Minecraft Pi and c"
"arry on as before. Sonic Pi's automatic connection functionality will take car"
"e of things for you."
msgstr ""
"L'API à Minecraft a été conçue pour fonctionner sans heurt à l'intérieur des `"
"live_loop`s. Ce qui signifie qu'il est possible de synchroniser des modificati"
"ons de vos mondes de Minecraft Pi avec des modifications de vos sons de Sonic "
"Pi. Des vidéos sur le vif avec musique basée sur Minecraft ! Notez cependant q"
"ue Minecraft Pi est un logiciel en phase alpha et qu'il est connu pour être lé"
"gèrement bogué. Si vous rencontrez un problème quelconque, relancez simplement"
" Minecraft Pi et continuez comme avant. La fonctionnalité de connexion automat"
"ique de Sonic Pi prendra soin des choses pour vous."

#: 11-Minecraft-Pi.md:39
#, fuzzy
msgid "Requires a Raspberry Pi 2.0"
msgstr "Nécessite un Raspberry Pi 2.0"

#: 11-Minecraft-Pi.md:41
#, fuzzy
msgid ""
"It is highly recommended that you use a Raspberry Pi 2 if you wish to run both"
" Sonic Pi and Minecraft at the same time - especially if you want to use Sonic"
" Pi's sound capabilities."
msgstr ""
"Il est vivement recommandé d'utiliser un Raspberry Pi 2 si vous voulez exécute"
"r à la fois Sonic Pi et Minecraft en même temps   - particulièrement si vous v"
"oulez utiliser les capacités sonores de Sonic Pi."

#: 11-Minecraft-Pi.md:45
#, fuzzy
msgid "API Support"
msgstr "Support de l'API"

#: 11-Minecraft-Pi.md:47
#, fuzzy
msgid ""
"At this stage, Sonic Pi supports basic block and player manipulations which ar"
"e detailed in Section 11.1. Support for event callbacks triggered by player in"
"teractions in the world is planned for a future release."
msgstr ""
"À cette étape, Sonic Pi supporte les manipulations basiques des joueurs et des"
" blocs qui sont détaillées dans la section 11.1. Le support pour les callbacks"
" d'évènements générés par les interactions des joueurs dans le monde est plani"
"fié pour une version future."

#: 11.1-Basic-API.md:1
#, fuzzy
msgid "11.1 Basic API"
msgstr "11.1 Basique API"

#: 11.1-Basic-API.md:3
#, fuzzy
msgid "Basic Minecraft Pi API"
msgstr "Basique API à Minecraft Pi"

#: 11.1-Basic-API.md:5
#, fuzzy
msgid ""
"Sonic Pi currently supports the following basic interactions with Minecraft Pi"
":"
msgstr ""
"Sonic Pi supporte actuellement les interactions basiques suivantes avec Minecr"
"aft Pi :"

#: 11.1-Basic-API.md:7 11.1-Basic-API.md:16
#, fuzzy
msgid "Displaying chat messages"
msgstr "Affichage de messages de \"chat\""

#: 11.1-Basic-API.md:8 11.1-Basic-API.md:33
#, fuzzy
msgid "Setting the position of the user"
msgstr "Fixation de la position de l'utilisateur"

#: 11.1-Basic-API.md:9
#, fuzzy
msgid "Getting the position of the user"
msgstr "Obtention de la position de l'utilisateur"

#: 11.1-Basic-API.md:10
#, fuzzy
msgid "Setting the block type at a given coordinate"
msgstr "Fixation du type de bloc à une position donnée"

#: 11.1-Basic-API.md:11
#, fuzzy
msgid "Getting the block type at a given coordinate"
msgstr "Obtention du type de bloc à une position donnée"

#: 11.1-Basic-API.md:14
#, fuzzy
msgid "Let's look at each of these in turn."
msgstr "Voyons chacune d'elles tour à tour."

#: 11.1-Basic-API.md:18
#, fuzzy
msgid ""
"Let's see just how easy it is to control Minecraft Pi from Sonic Pi. First, ma"
"ke sure you have both Minecraft Pi and Sonic Pi open at the same time and also"
" make sure you've entered a Minecraft world and can walk around."
msgstr ""
"Voyons juste comme c'est facile de contrôler Minecraft Pi depuis Sonic Pi. Ass"
"urez-vous d'abord que vous avez Minecraft Pi et Sonic Pi actifs en même temps "
"et assurez-vous aussi que vous êtes entré dans un monde de Minecraft et que vo"
"us pouvez vous y déplacer."

#: 11.1-Basic-API.md:23
#, fuzzy
msgid "In a fresh Sonic Pi buffer simply enter the following code:"
msgstr "Dans un buffer vierge de Sonic Pi, entrez le code suivant :"

#: 11.1-Basic-API.md:25
#, no-wrap
msgid "mc_message \"Hello from Sonic Pi\""
msgstr "mc_message \"Hello from Sonic Pi\""

#: 11.1-Basic-API.md:29
#, fuzzy
msgid ""
"When you hit the *Run* button, you'll see your message flash up on the Minecra"
"ft window. Congratulations, you've written your first Minecraft code! That was"
" easy wasn't it."
msgstr ""
"Quand vous pressez le bouton *Run*, vous verrez votre message clignoter dans l"
"a fenêtre de Minecraft. Félicitations, vous avez écrit votre premier code Mine"
"craft ! C'était facile, n'était-ce pas ?"

#: 11.1-Basic-API.md:35
#, fuzzy
msgid ""
"Now, let's try a little magic. Let's teleport ourselves somewhere! Try the fol"
"lowing:"
msgstr ""
"Maintenant, essayons un peu de magie. Téléportons-nous quelque-part ! Essayez "
"le code suivant :"

#: 11.1-Basic-API.md:38
#, no-wrap
msgid "mc_teleport 50, 50, 50"
msgstr "mc_teleport 50, 50, 50"

#: 11.1-Basic-API.md:42
#, fuzzy
msgid ""
"When you hit *Run* - boom! You're instantantly transported to a new place. Mos"
"t likely it was somewhere in the sky and you fell down either to dry land or i"
"nto water. Now, what are those numbers: `50, 50, 50`? They're the coordinates "
"of the location you're trying to teleport to. Let's take a brief moment to exp"
"lore what coordinates are and how they work because they're really, really imp"
"ortant for programming Minecraft."
msgstr ""
"Quand vous pressez le bouton *Run* - boum ! Vous avez été intantanément transp"
"orté à un nouvel endroit. Le plus probablement, c'était dans le ciel et vous ê"
"tes tombé soit sur la terre ferme, soit dans l'eau. Maintenant, quels sont ces"
" nombres : `50, 50, 50` ? Ce sont les coordonnées de l'endroit où vous essayie"
"z d'être téléporté. Prenons un bref moment pour explorer ce que sont ces coord"
"onnées et comment elles fonctionnent parce qu'elles sont réellement, réellemen"
"t importantes pour programmer Minecraft."

#: 11.1-Basic-API.md:50
#, fuzzy
msgid "Coordinates"
msgstr "Coordonnées"

#: 11.1-Basic-API.md:52
#, fuzzy
msgid ""
"Imagine a pirate's map with a big `X` marking the location of some treasure. T"
"he exact location of the `X` can be described with two numbers - how far along"
" the map from left to right and how far along the map from bottom to top. For "
"example `10cm` across and `8cm` up. These two numbers `10` and `8` are coordin"
"ates. You could easily imagine describing the locations of other stashes of tr"
"easure with other pairs of numbers. Perhaps there's a big chest of gold at `2`"
" across and `9` up..."
msgstr ""
"Imaginez une carte de pirate avec un grand `X` marquant l'emplacement d'un tré"
"sor. L'emplacement exact du `X` peut être décrit avec deux nombres - à quelle "
"distance du bord gauche de la carte en allant vers la droite et à quelle dista"
"nce du bord inférieur de la carte en allant vers le haut il se trouve. Par exe"
"mple, `10cm` en horizontal et `8cm` en vertical. Ces deux nombres `10` et `8` "
"sont des coordonnées. Vous pourriez imaginer aisément le description des endro"
"its d'autres cachettes de trésor avec d'autres paires de nombres. Peut-être y-"
"a-t-il un gros coffre d'or à `2` en horizontal et à `9` en vertical..."

#: 11.1-Basic-API.md:61
#, fuzzy
msgid ""
"Now, in Minecraft two numbers isn't quite enough. We also need to know how hig"
"h we are. We therefore need three numbers:"
msgstr ""
"Maintenant, dans Minecraft, deux nombres ne sont pas tout à fait suffisants. N"
"ous devons aussi savoir à quelle hauteur nous sommes. Nous avons donc besoin d"
"e trois nombres :"

#: 11.1-Basic-API.md:64
#, fuzzy
msgid "How far from right to left in the world - `x`"
msgstr "Distance de la droite vers la gauche dans le monde - `x`"

#: 11.1-Basic-API.md:65
#, fuzzy
msgid "How far from front to back in the world - `z`"
msgstr "Distance du devant vers l'arrière du monde - `z`"

#: 11.1-Basic-API.md:66
#, fuzzy
msgid "How high up we are in the world - `y`"
msgstr "A quelle hauteur sommes-nous dans le monde - `y`"

#: 11.1-Basic-API.md:68
#, fuzzy
msgid ""
"One more thing - we typically describe these coordinates in this order `x`, `y"
"`, `z`."
msgstr ""
"Une chose en plus - nous décrivons habituellement ces trois coordonnées dans l"
"'ordre `x`, `y`, `z`."

#: 11.1-Basic-API.md:71
#, fuzzy
msgid "Finding your current coordinates"
msgstr "Trouver vos coordonnées courantes"

#: 11.1-Basic-API.md:73
#, fuzzy
msgid ""
"Let's have a play with coordinates. Navigate to a nice place in the Minecraft "
"map and then switch over to Sonic Pi. Now enter the following:"
msgstr ""
"Jouons avec les coordonnées. Naviguez vers un bel endroit de la carte de Minec"
"raft et puis basculez sur Sonic Pi. Maintenant, entrez le code suivant :"

#: 11.1-Basic-API.md:76
#, no-wrap
msgid "puts mc_location"
msgstr "puts mc_location"

#: 11.1-Basic-API.md:80
#, fuzzy
msgid ""
"When you hit the *Run* button you'll see the coordinates of your current posit"
"ion displayed in the log window. Take a note of them, then move forward in the"
" world and try again. Notice how the coordinates changed! Now, I recommend you"
" spend some time repeating exactly this - move a bit in the world, take a look"
" at the coordinates and repeat. Do this until you start to get a feel for how "
"the coordinates change when you move. Once you've understood how coordinates w"
"ork, programming with the Minecraft API will be a complete breeze."
msgstr ""
"Quand vous pressez le bouton *Run*, vous voyez les coordonnées de votre positi"
"on courante affichées dans le panneau \"trace\". Prenez en note, puis déplacez-v"
"ous dans le monde et essayez à nouveau. Notez comme les coordonnées ont changé"
" ! Maintenant, je vous recommande de passer quelque temps à refaire exactement"
" cela - vous déplacer un peu dans le monde, regarder les coordonnées et recomm"
"encer. Faites cela jusqu'à ce que vous commenciez à être à l'aise sur la maniè"
"re dont changent les coordonnées quand vous vous déplacez. Une fois que vous a"
"vez compris comment fonctionnent les coordonnées, programmer avec l'API à Mine"
"craft sera du gâteau."

#: 11.1-Basic-API.md:89
#, fuzzy
msgid "Let's Build!"
msgstr "Construisons !"

#: 11.1-Basic-API.md:91
#, fuzzy
msgid ""
"Now that you know how to find the current position and to teleport using coord"
"inates, you have all the tools you need to start building things in Minecraft "
"with code. Let's say you want to make the block with coordinates `40`, `50`, `"
"60` to be glass. That's super easy:"
msgstr ""
"Maintenant que vous savez comment trouver la position courante et vous télépor"
"ter en utilisant les coordonnées, vous avez tous les outils dont vous avez bes"
"oin pour commencer à construire des choses dans Minecraft avec du code. Disons"
" que vous voulez faire du bloc avec les coordonnées `40`, `50`, `60` un bloc \""
"glass\" (de verre). C'est super facile :"

#: 11.1-Basic-API.md:96
#, no-wrap
msgid "mc_set_block :glass, 40, 50, 60"
msgstr "mc_set_block :glass, 40, 50, 60"

#: 11.1-Basic-API.md:100
#, fuzzy
msgid ""
"Haha, it really was that easy. To see your handywork just teleport nearby and "
"take a look:"
msgstr ""
"Ha ha, c'était vraiment facile. Pour voir le résultat de votre travail pratiqu"
"e, téléportez-vous aux alentours et regardez :"

#: 11.1-Basic-API.md:103
#, no-wrap
msgid "mc_teleport 35, 50, 60"
msgstr "mc_teleport 35, 50, 60"

#: 11.1-Basic-API.md:107
#, fuzzy
msgid ""
"Now turn around and you should see your glass block! Try changing it to diamon"
"d:"
msgstr ""
"Maintenant, tourner autour de vous et vous devriez voir votre bloc de verre ! "
"Essayez de le changer en diamant :"

#: 11.1-Basic-API.md:110
#, no-wrap
msgid "mc_set_block :diamond, 40, 50, 60"
msgstr "mc_set_block :diamond, 40, 50, 60"

#: 11.1-Basic-API.md:114
#, fuzzy
msgid ""
"If you were looking in the right direction you might have even seen it change "
"in front of your eyes! This is the start of something exciting..."
msgstr ""
"Si vous regardiez dans la bonne direction, vous auriez même pu voir le changem"
"ent devant vos yeux ! C'est le début de quelquechose de passionnant..."

#: 11.1-Basic-API.md:117
#, fuzzy
msgid "Looking at blocks"
msgstr "Recherche du type de bloc"

#: 11.1-Basic-API.md:119
#, fuzzy
msgid ""
"Let's look at one last thing before we move onto something a bit more involved"
". Given a set of coordinates we can ask Minecraft what the type of a specific "
"block is. Let's try it with the diamond block you just created:"
msgstr ""
"Regardons une dernière chose avant d'aller vers quelque chose d'un peu plus co"
"mpliqué. Étant donné un jeu de coordonnées, nous pouvons demander à Minecraft "
"quel est le type d'un bloc spécifique à cet endroit. Essayons-le avec le bloc "
"de diamant que vous venez de créer :"

#: 11.1-Basic-API.md:124
#, no-wrap
msgid "puts mc_get_block 40, 50, 60"
msgstr "puts mc_get_block 40, 50, 60"

#: 11.1-Basic-API.md:128
#, fuzzy
msgid ""
"Yey! It's `:diamond`. Try changing it back to glass and asking again - does it"
" now say `:glass`? I'm sure it does :-)"
msgstr ""
"Ouais ! C'est `:diamond`. Essayez de le faire revenir au verre et demandez à n"
"ouveau - Dit-il vraiment `:glass` maintenant ? je suis certain que oui :-)"

#: 11.1-Basic-API.md:131
#, fuzzy
msgid "Available block types"
msgstr "Types de bloc disponibles"

#: 11.1-Basic-API.md:133
#, fuzzy
msgid ""
"Before you go on a Minecraft Pi coding rampage, you might find this list of av"
"ailable block types useful:"
msgstr ""
"Avant que vous alliez vers un déchaînement de codage de Minecraft Pi, vous pou"
"rriez trouver utile cette liste des types de blocs disponibles :"

#: 11.1-Basic-API.md:136
#, no-wrap
msgid ""
"    :air\n"
"    :stone\n"
"    :grass\n"
"    :dirt\n"
"    :cobblestone\n"
"    :wood_plank\n"
"    :sapling\n"
"    :bedrock\n"
"    :water_flowing\n"
"    :water\n"
"    :water_stationary\n"
"    :lava_flowing\n"
"    :lava\n"
"    :lava_stationary\n"
"    :sand\n"
"    :gravel\n"
"    :gold_ore\n"
"    :iron_ore\n"
"    :coal_ore\n"
"    :wood\n"
"    :leaves\n"
"    :glass\n"
"    :lapis\n"
"    :lapis_lazuli_block\n"
"    :sandstone\n"
"    :bed\n"
"    :cobweb\n"
"    :grass_tall\n"
"    :flower_yellow\n"
"    :flower_cyan\n"
"    :mushroom_brown\n"
"    :mushroom_red\n"
"    :gold_block\n"
"    :gold\n"
"    :iron_block\n"
"    :iron\n"
"    :stone_slab_double\n"
"    :stone_slab\n"
"    :brick\n"
"    :brick_block\n"
"    :tnt\n"
"    :bookshelf\n"
"    :moss_stone\n"
"    :obsidian\n"
"    :torch\n"
"    :fire\n"
"    :stairs_wood\n"
"    :chest\n"
"    :diamond_ore\n"
"    :diamond_block\n"
"    :diamond\n"
"    :crafting_table\n"
"    :farmland\n"
"    :furnace_inactive\n"
"    :furnace_active\n"
"    :door_wood\n"
"    :ladder\n"
"    :stairs_cobblestone\n"
"    :door_iron\n"
"    :redstone_ore\n"
"    :snow\n"
"    :ice\n"
"    :snow_block\n"
"    :cactus\n"
"    :clay\n"
"    :sugar_cane\n"
"    :fence\n"
"    :glowstone_block\n"
"    :bedrock_invisible\n"
"    :stone_brick\n"
"    :glass_pane\n"
"    :melon\n"
"    :fence_gate\n"
"    :glowing_obsidian\n"
"    :nether_reactor_core"
msgstr ""
"    :air\n"
"    :stone\n"
"    :grass\n"
"    :dirt\n"
"    :cobblestone\n"
"    :wood_plank\n"
"    :sapling\n"
"    :bedrock\n"
"    :water_flowing\n"
"    :water\n"
"    :water_stationary\n"
"    :lava_flowing\n"
"    :lava\n"
"    :lava_stationary\n"
"    :sand\n"
"    :gravel\n"
"    :gold_ore\n"
"    :iron_ore\n"
"    :coal_ore\n"
"    :wood\n"
"    :leaves\n"
"    :glass\n"
"    :lapis\n"
"    :lapis_lazuli_block\n"
"    :sandstone\n"
"    :bed\n"
"    :cobweb\n"
"    :grass_tall\n"
"    :flower_yellow\n"
"    :flower_cyan\n"
"    :mushroom_brown\n"
"    :mushroom_red\n"
"    :gold_block\n"
"    :gold\n"
"    :iron_block\n"
"    :iron\n"
"    :stone_slab_double\n"
"    :stone_slab\n"
"    :brick\n"
"    :brick_block\n"
"    :tnt\n"
"    :bookshelf\n"
"    :moss_stone\n"
"    :obsidian\n"
"    :torch\n"
"    :fire\n"
"    :stairs_wood\n"
"    :chest\n"
"    :diamond_ore\n"
"    :diamond_block\n"
"    :diamond\n"
"    :crafting_table\n"
"    :farmland\n"
"    :furnace_inactive\n"
"    :furnace_active\n"
"    :door_wood\n"
"    :ladder\n"
"    :stairs_cobblestone\n"
"    :door_iron\n"
"    :redstone_ore\n"
"    :snow\n"
"    :ice\n"
"    :snow_block\n"
"    :cactus\n"
"    :clay\n"
"    :sugar_cane\n"
"    :fence\n"
"    :glowstone_block\n"
"    :bedrock_invisible\n"
"    :stone_brick\n"
"    :glass_pane\n"
"    :melon\n"
"    :fence_gate\n"
"    :glowing_obsidian\n"
"    :nether_reactor_core"

#: 12-Conclusions.md:1
msgid "12 Conclusions"
msgstr ""

#: 12-Conclusions.md:3
msgid "Conclusions"
msgstr ""

#: 12-Conclusions.md:5
#, fuzzy
msgid ""
"This concludes the Sonic Pi introductory tutorial. Hopefully you've learned so"
"mething along the way. Don't worry if you feel you didn't understand everythin"
"g - just play and have fun and you'll pick things up in your own time. Feel fr"
"ee to dive back in when you have a question that might be covered in one of th"
"e sections."
msgstr ""
"Ceci conclut ce tutoriel d'introduction à Sonic Pi. Heureusement, vous avez ap"
"pris quelque chose tout au long. Ne vous inquiétez pas si vous pensez ne pas a"
"voir tout compris - jouez simplement et prenez du plaisir, vous vous approprie"
"rez les choses à votre rythme. N'hésitez pas à replonger en arrière quand vous"
" avez une question qui pourrait être couverte par une des sections."

#: 12-Conclusions.md:11
#, fuzzy
msgid ""
"If you have any questions that haven't been covered in the tutorial, then plea"
"se jump onto the [Sonic Pi forums](http://groups.google.com/group/sonic-pi/) a"
"nd ask your question there. You'll find someone friendly and willing to lend a"
" hand."
msgstr ""
"Si vous avez des questions qui n'ont pas été couvertes dans le tutoriel, alors"
" allez S.V.P. sur [Sonic Pi forums](http://groups.google.com/group/sonic-pi/) "
"et poser vos questions ici. Vous trouverez quelqu'un qui désirera vous tendre "
"amicalement la main."

#: 12-Conclusions.md:16
#, fuzzy
msgid ""
"Finally, I also invite you to take a deeper look at the rest of the documentat"
"ion in this help system. There are a number of features that haven't been cove"
"red in this tutorial that are waiting for your discovery."
msgstr ""
"Enfin, je vous invite aussi à regarder en profondeur le reste de la documentat"
"ion de ce système d'aide. Il y a un nombre de fonctionnalités qui n'ont pas ét"
"é couvertes dans ce tutoriel et qui sont en attente de votre découverte."

#: 12-Conclusions.md:21
#, fuzzy
msgid ""
"So play, have fun, share your code, perform for your friends, show your screen"
"s and remember:"
msgstr ""
"Donc, jouez, prenez du plaisir, partagez votre code, produisez-vous devant vos"
" amis, montrez vos écrans et rappelez-vous :"

#: 12-Conclusions.md:24
#, fuzzy
msgid "*There are no mistakes, only opportunities.*"
msgstr "*Il n'y a pas de fautes, que des opportunités*"

#: 12-Conclusions.md:26
msgid "[Sam Aaron](http://twitter.com/samaaron)"
msgstr ""

#: A-Articles.md:1
#, fuzzy
msgid "A Appendix A - MagPi Articles"
msgstr "A Appendice A - Articles MagPi"

#: A-Articles.md:3
#, fuzzy
msgid "MagPi Articles"
msgstr "Articles MagPi"

#: A-Articles.md:5
#, fuzzy
msgid "Appendix A collects all the Sonic Pi articles written for the MagPi magazine."
msgstr ""
"L'appendice A rassemble tous les articles Sonic Pi écrits pour le magazine Mag"
"Pi."

#: A-Articles.md:8
#, fuzzy
msgid "Dive into Topics"
msgstr "Plongez vous dans les sujets"

#: A-Articles.md:10
#, fuzzy
msgid ""
"These articles aren't meant to be read in any strict order and contain a lot o"
"f cross-over material from the tutorial itself. Rather than try and teach you "
"all of Sonic Pi, they instead each focus on a specific aspect of Sonic Pi and "
"cover it in a fun and accessible way."
msgstr ""
"Ces articles ne sont pas destinés à être lus dans un ordre particulier et cont"
"iennent beaucoup de choses qui sont aussi dans le tutoriel. Plutôt que d'essay"
"er de vous apprendre tout Sonic Pi, chacun se focalise plutôt sur un aspect pa"
"rticulier de Sonic Pi et le couvre d'une manière amusante et accessible."

#: A-Articles.md:15
#, fuzzy
msgid "Read the MagPi"
msgstr "Lisez MagPi"

#: A-Articles.md:17
#, fuzzy
msgid ""
"You can see them in their glorious professionally typeset form in the free PDF"
" downloads of The MagPi here: https://www.raspberrypi.org/magpi/"
msgstr ""
"Vous les trouverez avec leur présentation très professionnelle dans les PDFs g"
"ratuits en téléchargement ici : https://www.raspberrypi.org/magpi/"

#: A-Articles.md:20
#, fuzzy
msgid "Suggest a Topic"
msgstr "Suggérez un sujet"

#: A-Articles.md:22
#, fuzzy
msgid ""
"If you don't see a topic that interests you covered in these articles - why no"
"t suggest one? The easiest way to do that is to tweet your suggestion to [@Son"
"ic_Pi](http://twitter.com/sonic_pi). You never know - your suggestion might be"
" the subject of the next article!"
msgstr ""
"Si vous ne trouvez pas de sujet qui vous intéresse parmi ceux couverts dans ce"
"s articles, pourquoi ne pas en suggérer un ? La manière la plus simple de fair"
"e cela est de tweeter votre suggestion à [@Sonic_Pi](http://twitter.com/sonic_"
"pi). On ne sait jamais, votre suggestion sera peut-être le sujet du prochain a"
"rticle !"

#: A.01-tips.md:1
#, fuzzy
msgid "A.1 Tips for Sonic Pi"
msgstr "A.1 Conseils pour Sonic Pi"

#: A.01-tips.md:3
#, fuzzy
msgid "Five Top Tips"
msgstr "Les cinq meilleurs conseils"

#: A.01-tips.md:5
#, fuzzy
msgid "1. There are no mistakes"
msgstr "1. Il n'y a pas d'erreur"

#: A.01-tips.md:7
#, fuzzy
msgid ""
"The most important lesson to learn with Sonic Pi is that there really are no m"
"istakes. The best way to learn is to just try and try and try. Try lots of dif"
"ferent things out, stop worrying whether your code sounds good or not and star"
"t experimenting with as many different synths, notes, FX and opts as possible."
" You'll discover a lot of things that make you laugh because they sound just a"
"wful and some real gems that sound truly amazing. Simply drop the things you d"
"on't like and keep the things you do. The more 'mistakes' you allow yourself t"
"o make the quicker you'll learn and discover your personal coding sound."
msgstr ""
"La plus importante leçon à apprendre avec Sonic Pi c'est qu'il n'y a vraiment "
"pas d'erreur. La meilleure façon d'apprendre c'est juste d'essayer, essayer, e"
"t essayer. Essayez beaucoup de choses différentes, ne vous inquiétez pas de sa"
"voir si votre code sonne bien ou pas et commencez par expérimenter avec le plu"
"s de synthés, notes, effets et options possibles. Vous découvrirez beaucoup de"
" choses qui vous feront rire parce qu'elles ne sonnent pas bien du tout et aus"
"si quelques joyaux qui sonnent magnifiquement bien. Débarrassez-vous ensuite d"
"e ce que vous n'aimez pas et gardez les choses qui vous plaisent. Plus vous vo"
"us permettrez de faire des erreurs et plus vous apprendrez et découvrirez votr"
"e son de code personnel."

#: A.01-tips.md:18
#, fuzzy
msgid "2. Use the FX"
msgstr "2. Utilisez les effets"

#: A.01-tips.md:20
#, fuzzy
msgid ""
"Say you've already mastered the Sonic Pi basics of making sounds with `sample`"
", `play`? What's next? Did you know that Sonic Pi supports over 27 studio FX t"
"o change the sound of your code? FX are like fancy image filters in drawing pr"
"ograms except that instead of blurring or making something black and white, yo"
"u can add things like reverb, distortion and echo to your sound. Think of it l"
"ike sticking the cable from your guitar to an effects pedal of your choice and"
" then into the amplifier. Luckily, Sonic Pi makes using FX really easy and req"
"uires no cables! All you need to do is to choose which section of your code yo"
"u'd like the FX added to and wrap it with the FX code. Let's look at an exampl"
"e. Say you had the following code:"
msgstr ""
"Disons que vous maîtrisez déjà les bases de Sonic Pi pour créer des sons avec "
"`sample` et `play`. Qu'est-ce qui vient ensuite ? Savez-vous que Sonic Pi supp"
"orte plus de 27 effets studio pour changer le son de votre code ? Les effets s"
"ont comme des filtres pour images dans les programmes de dessin, mais à la pla"
"ce de rendre l'image floue ou noir et blanc, on peut ajouter de la reverb, de "
"la distorsion ou de l'écho au son. On peut voir ça comme brancher le câble d'u"
"ne guitare dans une pédale d'effet puis dans un ampli. Heureusement Sonic Pi r"
"end l'utilisation d'effets très simple et n'a pas besoin de câble. Tout ce don"
"t vous avez besoin c'est de choisir à quelle section de votre code ajouter l'e"
"ffet puis de l'entourer avec le code de l'effet. Prenons un exemple. Disons qu"
"e vous avez le code suivant :"

#: A.01-tips.md:32
#, no-wrap
#, fuzzy
msgid ""
"sample :loop_garzul\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"sample :loop_garzul\n"
" \n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: A.01-tips.md:41
#, fuzzy
msgid ""
"If you wanted to add FX to the `:loop_garzul` sample, you'd just tuck it insid"
"e a `with_fx` block like this:"
msgstr ""
"Si vous voulez ajouter un effet au sample `:loop_garzul`, il suffit de le mett"
"re dans un bloc `with_fx` comme ceci :"

#: A.01-tips.md:44
#, no-wrap
#, fuzzy
msgid ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
" \n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: A.01-tips.md:55
#, fuzzy
msgid ""
"Now, if you wanted to add FX to the bass drum, go and wrap that with `with_fx`"
" too:"
msgstr ""
"Maintenant si voulez ajouter un effet au tambour basse, enveloppez-le aussi da"
"ns un `with_fx`:"

#: A.01-tips.md:58
#, no-wrap
#, fuzzy
msgid ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"with_fx :echo do\n"
"  16.times do\n"
"    sample :bd_haus\n"
"    sleep 0.5\n"
"  end\n"
"end"
msgstr ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
" \n"
"with_fx :echo do\n"
"  16.times do\n"
"    sample :bd_haus\n"
"    sleep 0.5\n"
"  end\n"
"end"

#: A.01-tips.md:71
#, fuzzy
msgid ""
"Remember, you can wrap *any* code within `with_fx` and any sounds created will"
" pass through that FX."
msgstr ""
"Rappelez-vous, vous pouvez entourer *n'importe quel* code dans `with_fx` et to"
"us les sons créés passeront dans cet effet."

#: A.01-tips.md:75
#, fuzzy
msgid "3. Parameterise your synths"
msgstr "3. Paramétrez vos synthés"

#: A.01-tips.md:77
#, fuzzy
msgid ""
"In order to really discover your coding sound you'll soon want to know how to "
"modify and control synths and FX. For example, you might want to change the du"
"ration of a note, add more reverb, or change the time between echoes. Luckily,"
" Sonic Pi gives you an amazing level of control to do exactly this with specia"
"l things called optional parameters or opts for short. Let's take a quick look"
". Copy this code into a workspace and hit run:"
msgstr ""
"Pour découvrir vraiment votre son de code vous voudrez savoir comment modifier"
" et contrôler les synthés et effets. Par exemple, vous voudrez peut-être chang"
"er la durée d'une note, ajouter plus de reverb, ou changer la durée entre écho"
"s. Heureusement, Sonic Pi vous donne un niveau de contrôle incroyable pour fai"
"re cela avec des paramètres optionnels ou opts pour faire court. Regardons ça "
"rapidement. Copiez ce code dans un buffer et exécutez-le :"

#: A.01-tips.md:85
#, no-wrap
msgid "sample :guit_em9"
msgstr "sample :guit_em9"

#: A.01-tips.md:89
#, fuzzy
msgid ""
"Ooh, a lovely guitar sound! Now, let's start playing with it. How about changi"
"ng its rate?"
msgstr ""
"Oh, un joli son de guitare ! Commençons à jouer un peu avec. Et si on changeai"
"t sa fréquence ?"

#: A.01-tips.md:92
#, no-wrap
msgid "sample :guit_em9, rate: 0.5"
msgstr "sample :guit_em9, rate: 0.5"

#: A.01-tips.md:96
#, fuzzy
msgid ""
"Hey, what's that `rate: 0.5` bit I just added at the end? That's called an opt"
". All of Sonic Pi's synths and FX support them and there's loads to play aroun"
"d with. They're also available for FX too. Try this:"
msgstr ""
"Hé, qu'est-ce que ce `rate: 0.5` que j'ai ajouté à la fin ? C'est ce qu'on app"
"elle une opt. Tous les synthés et samples de Sonic Pi les supportent et il y e"
"n a beaucoup avec lesquels on peut jouer. Ils sont disponibles pour les effets"
" aussi. Essayez ceci :"

#: A.01-tips.md:100
#, no-wrap
msgid ""
"with_fx :flanger, feedback: 0.6 do\n"
"  sample :guit_em9\n"
"end"
msgstr ""
"with_fx :flanger, feedback: 0.6 do\n"
"  sample :guit_em9\n"
"end"

#: A.01-tips.md:106
#, fuzzy
msgid ""
"Now, try increasing that feedback to 1 to hear some crazy sounds! Read the doc"
"s for full details on all the many opts available to you."
msgstr ""
"Maintenant essayez d'augmenter ce feedback à 1 pour entendre des sons fous ! L"
"isez la documentation pour des détails complets sur les nombreuses opts dispon"
"ibles."

#: A.01-tips.md:110
#, fuzzy
msgid "5. Live Code"
msgstr "5. Coder de manière interactive"

#: A.01-tips.md:112
#, fuzzy
msgid ""
"The best way to quickly experiment and explore Sonic Pi is to live code. This "
"allows you to start off some code and continually change and tweak it whilst i"
"t's still playing. For example, if you don't know what the cutoff parameter do"
"es to a sample, just play around. Let's have a try! Copy this code into one of"
" your Sonic Pi workspaces:"
msgstr ""
"La meilleure manière d'expérimenter rapidement et d'explorer Sonic Pi est de c"
"oder de manière interactive. Cela vous permet de partir d'un peu de code et de"
" le changer de manière continue pendant qu'il est en train de s'exécuter. Par "
"exemple, si vous ne savez pas ce que le paramètre cutoff fait à un sample, jou"
"ez avec. Essayons ! Copiez ce code dans un de vos buffers Sonic Pi :"

#: A.01-tips.md:118
#, no-wrap
msgid ""
"live_loop :experiment do\n"
"  sample :loop_amen, cutoff: 70\n"
"  sleep 1.75\n"
"end"
msgstr ""
"live_loop :experiment do\n"
"  sample :loop_amen, cutoff: 70\n"
"  sleep 1.75\n"
"end"

#: A.01-tips.md:125
#, fuzzy
msgid ""
"Now, hit run and you'll hear a slightly muffled drum break. Now, change the `c"
"utoff:` value to `80` and hit run again. Can you hear the difference? Try `90`"
", `100`, `110`..."
msgstr ""
"Maintenant cliquez sur 'Run' et vous entendrez un rhythme de batterie un peu é"
"touffé. Maintenant changez la valeur de `cutoff:` en `80` et cliquez à nouveau"
" sur 'Run'. Entendez-vous la différence ? Essayez `90`, `100`, `110`..."

#: A.01-tips.md:129
#, fuzzy
msgid ""
"Once you get the hang of using `live_loop`s you'll not turn back. Whenever I d"
"o a live coding gig I rely on `live_loop` as much as a drummer relies on their"
" sticks. For more information about live coding check out Section 9 of the bui"
"lt-in tutorial."
msgstr ""
"Quand vous aurez pris la main à utiliser des `live_loop`, vous ne pourrez plus"
" vous en passer. Quand je donne un concert de live coding je m'appuie autant s"
"ur `live_loop` qu'un batteur sur ses baguettes. Pour plus d'informations à pro"
"pos du live coding regardez la section 9 du tutoriel inclus dans Sonic Pi."

#: A.01-tips.md:134
#, fuzzy
msgid "5. Surf the random streams"
msgstr "5. Surfez sur les suites aléatoires"

#: A.01-tips.md:136
#, fuzzy
msgid ""
"Finally, one thing I love doing is cheating by getting Sonic Pi to compose thi"
"ngs for me. A really great way to do this is using randomisation. It might sou"
"nd complicated but it really isn't. Let's take a look. Copy this into a spare "
"workspace:"
msgstr ""
"Enfin, une chose que j'adore faire est de tricher en faisant que Sonic Pi comp"
"ose des choses pour moi. Une manière géniale de faire ça est d'utiliser l'aléa"
"toire. Cela peut paraître compliqué mais ça ne l'est pas du tout. Regardons. C"
"opiez ceci dans un buffer :"

#: A.01-tips.md:141
#, no-wrap
msgid ""
"live_loop :rand_surfer do\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :rand_surfer do\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.01-tips.md:152
#, fuzzy
msgid ""
"Now, when you play this, you'll hear a constant stream of random notes from th"
"e scale `:e2 :minor_pentatonic` played with the `:dsaw` synth. \"Wait, wait! Th"
"at's not a melody\", I hear you shout! Well, here's the first part of the magic"
" trick. Every time we go round the `live_loop` we can tell Sonic Pi to reset t"
"he random stream to a known point. This is a bit like going back in time in th"
"e TARDIS with the Doctor to a particular point in time and space. Let's try it"
" - add the line `use_random_seed 1` to the `live_loop`:"
msgstr ""
"Maintenant, quand vous jouez cela, vous entendrez une suite continue de notes "
"aléatoires de la gamme `:e2 :minor_pentatonic` jouée avec le synthé `:dsaw`. \""
"Attendez, attendez ! Ce n'est pas une mélodie\", vous entends-je crier ! Eh bie"
"n, voici la première partie du tour de magie. Chaque fois que l'on recommence "
"le `live_loop` on peut dire à Sonic Pi de fixer la suite aléatoire à un point "
"connu. C'est un peu comme voyager dans le temps. Essayons ceci : ajoutez la li"
"gne `use_random_seed 1` au `live_loop`:"

#: A.01-tips.md:161
#, no-wrap
msgid ""
"live_loop :rand_surfer do\n"
"  use_random_seed 1\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :rand_surfer do\n"
"  use_random_seed 1\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.01-tips.md:173
#, fuzzy
msgid ""
"Now, every time the `live_loop` loops around, the random stream is reset. This"
" means it chooses the same 16 notes every time. Hey presto! An instant melody."
" Now, here's the really exciting bit. Change the seed value from `1` to anothe"
"r number. Say `4923`. Wow! Another melody! So, just by changing one number (th"
"e random seed), you can explore as many melodic combinations as you can imagin"
"e! Now, that's the magic of code."
msgstr ""
"Maintenant, chaque fois que la `live_loop` boucle, la suite aléatoire est réin"
"itialisée. Cela veut dire qu'elle contient exactement les même 16 notes à chaq"
"ue fois. Et voilà ! Une mélodie de composée. Et maintenant voici la partie exc"
"itante. Changez la valeur de `1` en un autre nombre. Par exemple `4923`. Ouaou"
", une autre mélodie ! Donc, en changeant juste un nombre (la graine aléatoire)"
", on peut explorer autant de combinaisons mélodiques qu'on peut imaginer ! C'e"
"st ça la magie du code."

#: A.02-live-coding.md:1
msgid "A.2 Live Coding"
msgstr ""

#: A.02-live-coding.md:5
#, fuzzy
msgid ""
"The laser beams sliced through the wafts of smoke as the subwoofer pumped bass"
" deep into the bodies of the crowd. The atmosphere was ripe with a heady mix o"
"f synths and dancing. However something wasn't quite right in this nightclub. "
"Projected in bright colours above the DJ booth was futuristic text, moving, da"
"ncing, flashing. This wasn't fancy visuals, it was merely a projection of Soni"
"c Pi running on a Raspberry Pi. The occupant of the DJ booth wasn't spinning d"
"isks, he was writing, editing and evaluating code. Live. This is Live Coding."
msgstr ""
"Les rayons lasers perçaient à travers les bouffées de fumée et les baffles tra"
"nsmettaient des basses profondes dans les corps de la foule. L'atmosphère étai"
"t remplie d'un mélange de synthés et de danse. Il y avait pourtant quelque cho"
"se d'étrange dans cette boîte de nuit. Du texte futuriste était projeté au des"
"sus de la cabine du DJ, bougeant, dansant, clignotant. Ce n'étaient pas de bel"
"les visualisations, c'était juste une projection de Sonic Pi tournant sur un R"
"aspberry Pi. La personne dans la cabine de DJ n'était pas en train de tourner "
"des disques, elle écrivait, éditait et évaluait du code. En direct. C'est ça l"
"e Live Coding."

#: A.02-live-coding.md:14
msgid ""
"![Sam Aaron Live Coding](../images/tutorial/articles/A.02-live-coding/sam-aaro"
"n-live-coding.png)"
msgstr ""

#: A.02-live-coding.md:16
#, fuzzy
msgid ""
"This may sound like a far fetched story from a futuristic night club but codin"
"g music like this is a growing trend and is often described as Live Coding (ht"
"tp://toplap.org). One of the recent directions this approach to music making h"
"as taken is the Algorave (http://algorave.com) - events where artists like mys"
"elf code music for people to dance to. However, you don't need to be in a nigh"
"tclub to Live Code - with Sonic Pi v2.6+ you can do it anywhere you can take y"
"our Raspberry Pi and a pair of headphones or some speakers. Once you reach the"
" end of this article, you'll be programming your own beats and modifying them "
"live. Where you go afterwards will only be constrained by your imagination."
msgstr ""
"Cela peut sonner comme une histoire tirée par les cheveux dans une boîte de nu"
"it futuriste mais coder de la musique comme cela est une tendance qui se dével"
"oppe et qu'on appelle souvent Live Coding (programmation interactive) (http://"
"toplap.org). Une des directions récentes que cette approche de la musique a pr"
"ise est l'Algorave (http://algorave.com) : des événements où des artistes comm"
"e moi codent de la musique pour que les gens dansent. Cependant vous n'avez pa"
"s besoin d'une boîte de nuit pour coder en live : avec Sonic Pi version 2.6 et"
" plus vous pouvez le faire dans n'importe quel endroit où vous pouvez prendre "
"votre Raspberry Pi et un casque ou des haut-parleurs. Quand vous aurez atteint"
" la fin de cet article, vous saurez programmez vos rythmes et les modifier en "
"direct. Où vous irez ensuite ne sera limité que par votre imagination."

#: A.02-live-coding.md:27
#, fuzzy
msgid "Live Loop"
msgstr "Boucle interactive"

#: A.02-live-coding.md:29
#, fuzzy
msgid ""
"The key to live coding with Sonic Pi is mastering the `live_loop`. Let's look "
"at one:"
msgstr ""
"La clef de la programmation interactive est la maîtrise de la `live_loop`. En "
"voici une :"

#: A.02-live-coding.md:32
#, no-wrap
msgid ""
"live_loop :beats do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :beats do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: A.02-live-coding.md:39
#, fuzzy
msgid ""
"There are 4 core ingredients to a `live_loop`. The first is its name. Our `liv"
"e_loop` above is called `:beats`. You're free to call your `live_loop` anythin"
"g you want. Go crazy. Be creative. I often use names that communicate somethin"
"g about the music they're making to the audience. The second ingredient is the"
" `do` word which marks where the `live_loop` starts. The third is the `end` wo"
"rd which marks where the `live_loop` finishes, and finally there is the body o"
"f the `live_loop` which describes what the loop is going to repeat - that's th"
"e bit between the `do` and `end`. In this case we're repeatedly playing a bass"
" drum sample and waiting for half a beat. This produces a nice regular bass be"
"at. Go ahead, copy it into an empty Sonic Pi buffer and hit run. Boom, Boom, B"
"oom!."
msgstr ""
"Il y a quatre ingrédients principaux dans une `live_loop`. La première est son"
" nom. Notre `live_loop` s'appelle ici `:beats`. Vous pouvez donner le nom que "
"vous voulez à votre `live_loop`. Défoulez-vous. Soyez créatifs. J'utilise souv"
"ent des noms qui communiquent à l'audience qu'est-ce que la musique va faire. "
"Le deuxième ingrédient est le mot `do` qui marque où la `live_loop` commence. "
"Le troisième est le mot `end` qui marque où la `live_loop` finit, et enfin il "
"y a le corps de la `live_loop` qui décrit ce que la boucle va répéter : c'est "
"la partie entre `do` et `end`. Dans ce cas on joue en boucle un sample de tamb"
"our basse et on attend un demi temps. Cela produit un beau rythme régulier de "
"basse. Allez, copiez-le dans un buffer vide de Sonic Pi et cliquez sur 'Run'. "
"Boum, boum, boum !"

#: A.02-live-coding.md:52
#, fuzzy
msgid "Redefining On-the-fly"
msgstr "Redéfinir à la volée"

#: A.02-live-coding.md:54
#, fuzzy
msgid ""
"Ok, so what's so special about the `live_loop`? So far it just seems like a gl"
"orified `loop`! Well, the beauty of `live_loop`s is that you can redefine them"
" on-the-fly. This means that whilst they're still running, you can change what"
" they do. This is the secret to live coding with Sonic Pi. Let's have a play:"
msgstr ""
"OK, qu'est-ce qu'elle a de si spécial, cette `live_loop` ? Jusqu'ici on dirait"
" que c'est juste une boucle ! Eh bien, la beauté des `live_loop`s c'est qu'on "
"peut les redéfinir à la volée. Cela veut dire que pendant qu'elles sont en tra"
"in de tourner, on peut changer ce qu'elles font. C'est le secret de la program"
"mation interactive avec Sonic Pi. Essayons :"

#: A.02-live-coding.md:60
#, no-wrap
msgid ""
"live_loop :choral_drone do\n"
"  sample :ambi_choir, rate: 0.4\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :choral_drone do\n"
"  sample :ambi_choir, rate: 0.4\n"
"  sleep 1\n"
"end"

#: A.02-live-coding.md:67
#, fuzzy
msgid ""
"Now press the Run button or hit `alt-r`. You're now listening to some gorgeous"
" choir sounds. Now, whilst it's still playing, change the rate from `0.4` to `"
"0.38`. Hit run again. Woah! Did you hear the choir change note? Change it back"
" up to `0.4` to return back to how it was. Now, drop it to `0.2`, down to `0.1"
"9` and then back up to `0.4`. See how changing just one parameter on the fly c"
"an give you real control of the music? Now play around with the rate yourself "
"- choose your own values. Try negative numbers, really small numbers and large"
" numbers. Have fun!"
msgstr ""
"Maintenant cliquez le bouton 'Run' ou tapez 'alt-r'. Vous entendez maintenant "
"de beaux sons de chorale. Ensuite, alors qu'il est encore en train de jouer, c"
"hanger la fréquence de `0.4` en `0.38`. Cliquez à nouveau sur 'Run'. Ouaou ! V"
"ous avez entendu le choeur changer de note ? Ecrivez à nouveau `0.4` pour reve"
"nir comme avant. Puis `0.2`, puis `0.19`, puis à nouveau `0.4`. Voyez-vous com"
"ment juste changer un paramètre à la volée vous donne un réel contrôle sur la "
"musique ? Maintenant jouez vous-même avec la fréquence, choisissez vos propres"
" valeurs. Essayez des nombres négatifs, de très petits nombres et de grands no"
"mbres. Amusez-vous !"

#: A.02-live-coding.md:77
#, fuzzy
msgid "Sleeping is important"
msgstr "Il est important de dormir"

#: A.02-live-coding.md:79
#, fuzzy
msgid ""
"One of the most important lessons about `live_loop`s is that they need rest. C"
"onsider the following `live_loop`:"
msgstr ""
"Une des leçons les plus importantes avec les `live_loop` c'est qu'elles ont be"
"soin de se reposer. Prenons par exemple cette `live_loop`:"

#: A.02-live-coding.md:82
#, no-wrap
msgid ""
"live_loop :infinite_impossibilities do\n"
"  sample :ambi_choir\n"
"end"
msgstr ""
"live_loop :infinite_impossibilities do\n"
"  sample :ambi_choir\n"
"end"

#: A.02-live-coding.md:88
#, fuzzy
msgid ""
"If you try running this code, you'll immediately see Sonic Pi complaining that"
" the `live_loop` did not sleep. This is a safety system kicking in! Take a mom"
"ent to think about what this code is asking the computer to do. That's right, "
"it's asking the computer to play an infinite amount of choir samples in zero t"
"ime. Without the safety system the poor computer will try and do this and cras"
"h and burn in the process. So remember, your `live_loop`s must contain a `slee"
"p`."
msgstr ""
"Si vous essayez d'exécuter ce code, vous verrez immédiatement que Sonic Pi se "
"plaint que la `live_loop` n'a pas dormi. C'est un mécanisme de sécurité qui se"
" met en place. Prenons un moment pour penser à ce que ce code demande à l'ordi"
"nateur de faire. C'est cela, on demande à l'ordinateur de jouer un nombre infi"
"ni de samples de chorale dans un temps nul. Sans le mécanisme de sécurité le p"
"auvre ordinateur essaierait de faire ça et exploserait. Souvenez-vous en bien "
": vos `live_loop`s doivent contenir un appel à `sleep`."

#: A.02-live-coding.md:97
#, fuzzy
msgid "Combining Sounds"
msgstr "Combiner des sons"

#: A.02-live-coding.md:99
#, fuzzy
msgid ""
"Music is full of things happening at the same time. Drums at the same time as "
"bass at the same time as vocals at the same time as guitars... In computing we"
" call this concurrency and Sonic Pi provides us with an amazingly simple way o"
"f playing things at the same time. Simply use more than one `live_loop`!"
msgstr ""
"La musique est pleine de choses qui arrivent en même temps. La batterie en mêm"
"e temps que la basse, en même temps que du chant, en même temps que des guitar"
"es... En informatique on appelle ça la concurrence et Sonic Pi nous donne une "
"manière étonnamment simple de jouer des choses en même temps. Il suffit d'util"
"iser plus qu'une `live_loop` !"

#: A.02-live-coding.md:105
#, no-wrap
#, fuzzy
msgid ""
"live_loop :beats do\n"
"  sample :bd_tek\n"
"  with_fx :echo, phase: 0.125, mix: 0.4 do\n"
"    sample  :drum_cymbal_soft, sustain: 0, release: 0.1\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"live_loop :bass do\n"
"  use_synth :tb303\n"
"  synth :tb303, note: :e1, release: 4, cutoff: 120, cutoff_attack: 1\n"
"  sleep 4\n"
"end"
msgstr ""
"live_loop :beats do\n"
"  sample :bd_tek\n"
"  with_fx :echo, phase: 0.125, mix: 0.4 do\n"
"    sample  :drum_cymbal_soft, sustain: 0, release: 0.1\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"  \n"
"live_loop :bass do\n"
"  use_synth :tb303\n"
"  synth :tb303, note: :e1, release: 4, cutoff: 120, cutoff_attack: 1\n"
"  sleep 4\n"
"end"

#: A.02-live-coding.md:121
#, fuzzy
msgid ""
"Here, we have two `live_loop`s, one looping quickly making beats and another l"
"ooping slowly making a crazy bass sound."
msgstr ""
"Ici nous avons deux `live_loop`s, une qui tourne rapidement pour faire un ryth"
"me et une qui boucle lentement pour faire un son fou de basse."

#: A.02-live-coding.md:124
#, fuzzy
msgid ""
"One of the interesting things about using multiple `live_loop`s is that they e"
"ach manage their own time. This means it's really easy to create interesting p"
"olyrhythmical structures and even play with phasing Steve Reich style. Check t"
"his out:"
msgstr ""
"Une des choses intéressantes quand on utilise plusieurs `live_loop`s c'est que"
" chacune gère son propre temps. Cela veut dire qu'il est très facile de créer "
"des structures polyrythmiques intéressantes et même de jouer avec la phase dan"
"s le style de Steve Reich. Par exemple :"

#: A.02-live-coding.md:129
#, no-wrap
#, fuzzy
msgid ""
"# Steve Reich's Piano Phase\n"
"notes = (ring :E4, :Fs4, :B4, :Cs5, :D5, :Fs4, :E4, :Cs5, :B4, :Fs4, :D5, :Cs5"
")\n"
"live_loop :slow do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.3\n"
"end\n"
"live_loop :faster do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.295\n"
"end"
msgstr ""
"# La phase piano de Steve Reich\n"
"  \n"
"notes = (ring :E4, :Fs4, :B4, :Cs5, :D5, :Fs4, :E4, :Cs5, :B4, :Fs4, :D5, :Cs5"
")\n"
"  \n"
"live_loop :slow do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.3\n"
"end\n"
"  \n"
"live_loop :faster do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.295\n"
"end"

#: A.02-live-coding.md:145 A.03-coded-beats.md:155 A.04-synth-riffs.md:166
#: A.05-acid-bass.md:147 A.06-minecraft.md:156 A.07-bizet.md:138
#: A.09-randomisation.md:145 A.10-controlling-your-sound.md:149
#: A.11-beat-tracking.md:176 A.12-sample-slicing.md:137
#, fuzzy
msgid "Bringing it all together"
msgstr "Rassemblons tout"

#: A.02-live-coding.md:147
#, fuzzy
msgid ""
"In each of these tutorials, we'll end with a final example in the form of a ne"
"w piece of music which draws from all of the ideas introduced. Read this code "
"and see if you can imagine what it's doing. Then, copy it into a fresh Sonic P"
"i buffer and hit Run and actually hear what it sounds like. Finally, change on"
"e of the numbers or comment and uncomment things out. See if you can use this "
"as a starting point for a new performance, and most of all have fun! See you n"
"ext time..."
msgstr ""
"Dans chacun de ces tutoriels, nous finirons avec un exemple qui montre un nouv"
"eau morceau de musique qui utilise toutes les idées introduites. Lisez ce code"
" et essayez d'imaginer ce qu'il fait. Ensuite, copiez-le dans un buffer frais "
"de Sonic Pi et cliquez 'Run' pour entendre comment il sonne. Enfin changez un "
"des nombres ou commentez / décommentez des parties. Voyez si vous pouvez prend"
"re ça comme point de départ d'une nouvelle performance, et surtout amusez-vous"
" ! A la prochaine..."

#: A.02-live-coding.md:156
#, no-wrap
#, fuzzy
msgid ""
"with_fx :reverb, room: 1 do\n"
"  live_loop :time do\n"
"    synth :prophet, release: 8, note: :e1, cutoff: 90, amp: 3\n"
"    sleep 8\n"
"  end\n"
"end\n"
"live_loop :machine do\n"
"  sample :loop_garzul, rate: 0.5, finish: 0.25\n"
"  sample :loop_industrial, beat_stretch: 4, amp: 1\n"
"  sleep 4\n"
"end\n"
"live_loop :kik do\n"
"  sample :bd_haus, amp: 2\n"
"  sleep 0.5\n"
"end\n"
"with_fx :echo do\n"
"  live_loop :vortex do\n"
"    # use_random_seed 800\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 3)\n"
"    16.times do\n"
"      play notes.choose, release: 0.1, amp: 1.5\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb, room: 1 do\n"
"  live_loop :time do\n"
"    synth :prophet, release: 8, note: :e1, cutoff: 90, amp: 3\n"
"    sleep 8\n"
"  end\n"
"end\n"
"  \n"
"live_loop :machine do\n"
"  sample :loop_garzul, rate: 0.5, finish: 0.25\n"
"  sample :loop_industrial, beat_stretch: 4, amp: 1\n"
"  sleep 4\n"
"end\n"
"  \n"
"live_loop :kik do\n"
"  sample :bd_haus, amp: 2\n"
"  sleep 0.5\n"
"end\n"
"  \n"
"with_fx :echo do\n"
"  live_loop :vortex do\n"
"    # use_random_seed 800\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 3)\n"
"    16.times do\n"
"      play notes.choose, release: 0.1, amp: 1.5\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.03-coded-beats.md:1
#, fuzzy
msgid "A.3 Coded Beats"
msgstr "A.3 Rythmes codés"

#: A.03-coded-beats.md:3
#, fuzzy
msgid "Coded Beats"
msgstr "Rythmes codés"

#: A.03-coded-beats.md:5
#, fuzzy
msgid ""
"One of the most exciting and disrupting technical developments in modern music"
" was the invention of samplers. These were boxes that allowed you to record an"
"y sound into them and then manipulate and play back those sounds in many inter"
"esting ways. For example, you could take an old record, find a drum solo (or b"
"reak), record it into your sampler and then play it back on repeat at half-spe"
"ed to provide the foundation for your latest beats. This is how early hip-hop "
"music was born and today it's almost impossible to find electronic music that "
"doesn't incorporate samples of some kind. Using samples is a really great way "
"of easily introducing new and interesting elements into your live coded perfor"
"mances."
msgstr ""
"Une des évolutions techniques les plus excitantes et disruptives dans la musiq"
"ue moderne a été l'invention des samplers. C'étaient des boîtes qui permettaie"
"nt d'enregistrer n'importe quels sons dedans et de les manipuler et jouer de n"
"ombreuses manières intéressantes. Par exemple, on pouvait prendre un vieux dis"
"que, trouver un solo de batterie (ou un break), l'enregistrer dans le sampler "
"et ensuite le jouer deux fois moins vite pour créer la fondation de vos dernie"
"rs rythmes. C'est ainsi que la musique hip-hop est née et aujourd'hui il est p"
"resque impossible de trouver de la musique électronique qui n'incorpore pas de"
" samples. Utiliser des samples est une très bonne manière d'introduire facilem"
"ent des éléments nouveaux et intéressants dans vos performances de live coding"
"."

#: A.03-coded-beats.md:17
#, fuzzy
msgid ""
"So where can you get a sampler? Well you already have one - it's your Raspberr"
"y Pi! The built-in live coding app Sonic Pi has an extremely powerful sampler "
"built into its core. Let's play with it!"
msgstr ""
"Comment pouvez-vous vous procurer un sampler ? Eh bien, vous en avez déjà un :"
" c'est votre Raspberry Pi ! L'application de live coding Sonic Pi comprend un "
"sampler très puissant. Jouons avec !"

#: A.03-coded-beats.md:21
#, fuzzy
msgid "The Amen Break"
msgstr "Le break Amen"

#: A.03-coded-beats.md:23
#, fuzzy
msgid ""
"One of the most classic and recognisable drum break samples is called the Amen"
" Break. It was first performed in 1969 in the song \"Amen Brother\" by the Winst"
"ons as part of a drum break. However, it was when it was discovered by early h"
"ip-hop musicians in the 80s and used in samplers that it started being heavily"
" used in a wide variety of other styles such as drum and bass, breakbeat, hard"
"core techno and breakcore."
msgstr ""
"Un des samples de break de batterie les plus classiques et reconnaissables s'a"
"ppelle le break Amen. Il a été joué pour la première fois en 1969 dans la chan"
"son \"Amen Brother\" des Winstons dans un break de batterie. Cependant c'est qua"
"nd il a été découvert par les premiers musiciens de hip-hop dans les années 80"
" et utilisé dans des samplers qu'il a commencé à être très utilisé dans des st"
"yles aussi variés que le drum and bass, le breakbeat, la techno hardcore et le"
" breakcore."

#: A.03-coded-beats.md:30
#, fuzzy
msgid ""
"I'm sure you're excited to hear that it's also built right into Sonic Pi. Clea"
"r up a buffer and throw in the following code:"
msgstr ""
"Je suis sûr que vous êtes ravis d'entendre qu'il est aussi inclus dans Sonic P"
"i. Choisissez un buffer vide et copiez-y ce code :"

#: A.03-coded-beats.md:37
#, fuzzy
msgid ""
"Hit *Run* and boom! You're listening to one of the most influential drum break"
"s in the history of dance music. However, this sample wasn't famous for being "
"played as a one-shot, it was built for being looped."
msgstr ""
"Cliquez sur *Run* et boum ! Vous ententez l'un des breaks de batterie les plus"
" influents de l'histoire de la musique dance. Ceci dit, ce sample n'est pas cé"
"lèbre pour être joué juste une fois, il est fait pour être joué en boucle."

#: A.03-coded-beats.md:42
#, fuzzy
msgid "Beat Stretching"
msgstr "Etirer des rythmes"

#: A.03-coded-beats.md:44
#, fuzzy
msgid ""
"Let's loop the Amen Break by using our old friend the `live_loop` introduced i"
"n this tutorial last month:"
msgstr ""
"Jouons le break Amen en boucle en utilisant notre vieille amie la `live_loop`,"
" introduite dans le tutoriel du mois dernier :"

#: A.03-coded-beats.md:47
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  sample :loop_amen\n"
"  sleep 2\n"
"end"
msgstr ""
"live_loop :amen_break do\n"
"  sample :loop_amen\n"
"  sleep 2\n"
"end"

#: A.03-coded-beats.md:54
#, fuzzy
msgid ""
"OK, so it is looping, but there's an annoying pause every time round. That is "
"because we asked it to sleep for `2` beats and with the default BPM of 60 the "
"`:loop_amen` sample only lasts for `1.753` beats. We therefore have a silence "
"of `2 - 1.753 = 0.247` beats. Even though it's short, it's still noticeable."
msgstr ""
"OK, ça boucle, mais il y a une pause ennuyeuse à chaque fois. C'est parce qu'o"
"n a demandé d'attendre `2` temps et avec le nombre par défaut de 60 BPM (batte"
"ments par minute), le sample `:loop_amen` ne dure que `1.753` temps. Nous avon"
"s donc un silence de `2 - 1.753 = 0.247` temps. Même s'il est court, c'est not"
"able."

#: A.03-coded-beats.md:60
#, fuzzy
msgid ""
"To fix this issue we can use the `beat_stretch:` opt to ask Sonic Pi to stretc"
"h (or shrink) the sample to match the specified number of beats."
msgstr ""
"Pour corriger ce problème on peut utiliser l'option `beat_stretch` pour demand"
"er à Sonic Pi d'étirer (ou rétrécir) le sample pour correspondre au temps spéc"
"ifié."

#: A.03-coded-beats.md:63
#, fuzzy
msgid ""
"Sonic Pi's `sample` and `synth` fns give you a lot of control via optional par"
"ameters such as `amp:`, `cutoff:` and `release:`. However, the term optional p"
"arameter is a real mouthful so we just call them *opts* to keep things nice an"
"d simple."
msgstr ""
"\\[Breakout box start\\] Les fonctions `sample` et `synth` de Sonic Pi vous donn"
"ent beaucoup de contrôle via des paramètres optionnels comme `amp:`, `cutoff:`"
" et `release:`. Cela dit le terme `paramètre optionnel` est très long à dire d"
"onc on les appelle juste *opts* pour rester simple. \\[Breakout box end\\]"

#: A.03-coded-beats.md:68
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end  "
msgstr ""
"live_loop :amen_break do\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end  "

#: A.03-coded-beats.md:75
#, fuzzy
msgid ""
"Now we're dancing! Although, perhaps we want to speed it up or slow it down to"
" suit the mood."
msgstr ""
"Maintenant on peut danser ! Quoique, peut-être qu'on veut l'accélérer ou le ra"
"lentir en fonction de l'ambiance."

#: A.03-coded-beats.md:78
#, fuzzy
msgid "Playing with Time"
msgstr "Jouer avec le temps"

#: A.03-coded-beats.md:80
#, fuzzy
msgid ""
"OK, so what if we want to change styles to old school hip hop or breakcore? On"
"e simple way of doing this is to play with time - or in other words mess with "
"the tempo. This is super easy in Sonic Pi - just throw in a `use_bpm` into you"
"r live loop:"
msgstr ""
"OK, et si on voulait changer de style pour faire du hip hop old school ou du b"
"reakcore ? Une manière simple de faire ça est de jouer avec le temps : ou en d"
"'autres mots jouer avec le tempo. C'est très facile avec Sonic Pi : il suffit "
"d'appeler `use_bpm` dans votre boucle interactive :"

#: A.03-coded-beats.md:85
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  use_bpm 30\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end "
msgstr ""
"live_loop :amen_break do\n"
"  use_bpm 30\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end "

#: A.03-coded-beats.md:93
#, fuzzy
msgid ""
"Whilst you're rapping over those slow beats, notice that we're still sleeping "
"for 2 and our BPM is 30, yet everything is in time. The `beat_stretch` opt wor"
"ks with the current BPM to make sure everything just works."
msgstr ""
"Pendant que vous rappez sur ces rythmes lents, remarquez que nous avons toujou"
"rs un repos de 2 et que notre BPM vaut 30, mais tout est bien synchronisé. L'o"
"ption `beat_stretch` marche avec le BPM courant pour s'assurer que tout foncti"
"onne bien."

#: A.03-coded-beats.md:97
#, fuzzy
msgid ""
"Now, here's the fun part. Whilst the loop is still live, change the `30` in th"
"e `use_bpm 30` line to `50`. Woah, everything just got faster yet *kept in tim"
"e*! Try going faster - up to 80, to 120, now go crazy and punch in 200!"
msgstr ""
"Maintenant voici la partie amusante. Alors que la boucle est en train de tourn"
"er, changez le `30` dans la ligne `use_bpm 30` en `50`. Oh, tout est devenu pl"
"us rapide, mais toujours *synchro* ! Essayez d'aller plus vite : jusque 80, ju"
"sque 120, ou même, soyons fous, 200 !"

#: A.03-coded-beats.md:103
#, fuzzy
msgid "Filtering"
msgstr "Filtrer"

#: A.03-coded-beats.md:105
#, fuzzy
msgid ""
"Now we can live loop samples, let's look at some of the most fun opts provided"
" by the `sample` synth. First up is `cutoff:` which controls the cutoff filter"
" of the sampler. By default this is disabled but you can easily turn it on:"
msgstr ""
"Maintenant qu'on peut jouer des samples en boucle de manière interactive, rega"
"rdons les options les plus amusantes proposées par le synthé `sample`. La prem"
"ière est le `cutoff:` qui contrôle le filtre de coupure du sampler. Par défaut"
" il est désactivé mais on peut facilement l'activer :"

#: A.03-coded-beats.md:110
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  sample :loop_amen, beat_stretch: 2, cutoff: 70\n"
"  sleep 2\n"
"end  "
msgstr ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  sample :loop_amen, beat_stretch: 2, cutoff: 70\n"
"  sleep 2\n"
"end  "

#: A.03-coded-beats.md:118
#, fuzzy
msgid ""
"Go ahead and change the `cutoff:` opt. For example, increase it to 100, hit *R"
"un* and wait for the loop to cycle round to hear the change in the sound. Noti"
"ce that low values like 50 sound mellow and bassy and high values like 100 and"
" 120 are more full-sounding and raspy. This is because the `cutoff:` opt will "
"chop out the high frequency parts of the sound just like a lawn-mower chops of"
"f the top of the grass. The `cutoff:` opt is like the length setting - determi"
"ning how much grass is left over."
msgstr ""
"Allez-y, changez la valeur de l'option `cutoff:`. Par exemple montez-la à 100,"
" cliquez sur *Run* et attendez la prochaine boucle pour entendre la différence"
" dans le son. Remarquez que des valeurs basses comme 50 sonnent plus doux et b"
"as et que des hautes valeurs comme 100 ou 120 sonnent plus plein et râpeux. C'"
"est parce que l'option `cutoff:` va couper les parties haute-fréquence du son "
"tout comme une tondeuse coupe le haut de la pelouse. L'option `cutoff:` est co"
"mme le réglage de la longueur : cela détermine combien il reste d'herbe."

#: A.03-coded-beats.md:128
#, fuzzy
msgid "Slicing"
msgstr "Couper"

#: A.03-coded-beats.md:130
#, fuzzy
msgid ""
"Another great tool to play with is the slicer FX. This will chop (slice) the s"
"ound up. Wrap the `sample` line with the FX code like this:"
msgstr ""
"Un autre super outil avec lequel on peut jouer est l'effet slicer. Il va coupe"
"r le son en tranches. Entourez la ligne de `sample` avec le code de l'effet ai"
"nsi :"

#: A.03-coded-beats.md:133
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  with_fx :slicer, phase: 0.25, wave: 0, mix: 1 do\n"
"    sample :loop_amen, beat_stretch: 2, cutoff: 100\n"
"  end\n"
"  sleep 2\n"
"end"
msgstr ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  with_fx :slicer, phase: 0.25, wave: 0, mix: 1 do\n"
"    sample :loop_amen, beat_stretch: 2, cutoff: 100\n"
"  end\n"
"  sleep 2\n"
"end"

#: A.03-coded-beats.md:143
#, fuzzy
msgid ""
"Notice how the sound bounces up and down a little more. (You can hear the orig"
"inal sound without the FX by changing the `mix:` opt to `0`.) Now, try playing"
" around with the `phase:` opt. This is the rate (in beats) of the slicing effe"
"ct. A smaller value like `0.125` will slice faster and larger values like `0.5"
"` will slice more slowly. Notice that successively halving or doubling the `ph"
"ase:` opts val tends to always sound good. Finally, change the `wave:` opt to "
"one of 0, 1, or 2 and hear how it changes the sound. These are the various wav"
"e shapes. 0 is a saw wave, (hard in, fade out) 1 is a square wave (hard in, ha"
"rd out) and 2 is a triangle wave (fade in, fade out)."
msgstr ""
"Remarquez comme le son bondit un peu plus de haut en bas. (Vous pouvez entendr"
"e le son original sans l'effet en changeant l'option `mix:` en `0`.) Maintenan"
"t essayez de modifier la valeur de l'option `phase:`. C'est la fréquence (en b"
"attements) de l'effet de coupe. Une plus petite valeur comme `0.5` va couper p"
"lus rapidement et une plus grande valeur comme `0.5` va couper plus lentement."
" Remarquez que si on divise ou multiplie successivement par deux l'option `pha"
"se:` cela sonne généralement bien. Enfin, choisissez une valeur pour l'option "
"`wave:` entre 0, 1 et 2 et écoutez comment le son change. Ce sont différentes "
"formes d'onde. 0 est une onde scie (elle commence fort et finit en fondu), 1 e"
"st une onde carrée (commence et finit fort) et 2 est une onde en triangle (com"
"mence en fondu, finit en fondu)."

#: A.03-coded-beats.md:157
#, fuzzy
msgid ""
"Finally, let's go back in time and revisit the early Bristol drum and bass sce"
"ne with this month's example. Don't worry too much about what all this means, "
"just type it in, hit Run, then start live coding it by changing opt numbers an"
"d see where you can take it. Please do share what you create! See you next tim"
"e..."
msgstr ""
"Enfin, revenons dans le temps et revisitons la jeune scène de drum and bass de"
" Bristol avec l'exemple de ce mois. Ne vous inquiétez pas trop de tout ce que "
"cela signifie, tapez le, cliquez sur Run, puis commencez à coder interactiveme"
"nt en changement les valeurs des options et voyez où cela vous amène. Partagez"
" ce que vous créez ! A la prochaine..."

#: A.03-coded-beats.md:163
#, no-wrap
#, fuzzy
msgid ""
"use_bpm 100\n"
"live_loop :amen_break do\n"
"  p = [0.125, 0.25, 0.5].choose\n"
"  with_fx :slicer, phase: p, wave: 0, mix: rrand(0.7, 1) do\n"
"    r = [1, 1, 1, -1].choose\n"
"    sample :loop_amen, beat_stretch: 2, rate: r, amp: 2\n"
"  end\n"
"  sleep 2\n"
"end\n"
"live_loop :bass_drum do\n"
"  sample :bd_haus, cutoff: 70, amp: 1.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :landing do\n"
"  bass_line = (knit :e1, 3, [:c1, :c2].choose, 1)\n"
"  with_fx :slicer, phase: [0.25, 0.5].choose, invert_wave: 1, wave: 0 do\n"
"    s = synth :square, note: bass_line.tick, sustain: 4, cutoff: 60\n"
"    control s, cutoff_slide: 4, cutoff: 120\n"
"  end\n"
"  sleep 4\n"
"end"
msgstr ""
"use_bpm 100\n"
"  \n"
"live_loop :amen_break do\n"
"  p = [0.125, 0.25, 0.5].choose\n"
"  with_fx :slicer, phase: p, wave: 0, mix: rrand(0.7, 1) do\n"
"    r = [1, 1, 1, -1].choose\n"
"    sample :loop_amen, beat_stretch: 2, rate: r, amp: 2\n"
"  end\n"
"  sleep 2\n"
"end\n"
"  \n"
"live_loop :bass_drum do\n"
"  sample :bd_haus, cutoff: 70, amp: 1.5\n"
"  sleep 0.5\n"
"end\n"
"  \n"
"live_loop :landing do\n"
"  bass_line = (knit :e1, 3, [:c1, :c2].choose, 1)\n"
"  with_fx :slicer, phase: [0.25, 0.5].choose, invert_wave: 1, wave: 0 do\n"
"    s = synth :square, note: bass_line.tick, sustain: 4, cutoff: 60\n"
"    control s, cutoff_slide: 4, cutoff: 120\n"
"  end\n"
"  sleep 4\n"
"end"

#: A.04-synth-riffs.md:1
#, fuzzy
msgid "A.4 Synth Riffs"
msgstr "A.4 Riffs de synthés"

#: A.04-synth-riffs.md:3
#, fuzzy
msgid "Synth Riffs"
msgstr "Riffs de synthés"

#: A.04-synth-riffs.md:5
#, fuzzy
msgid ""
"Whether it's the haunting drift of rumbling oscillators or the detuned punch o"
"f saw waves piercing through the mix, the lead synth plays an essential role o"
"n any electronic track. In last month's edition of this tutorial series we cov"
"ered how to code our beats. In this tutorial we'll cover how to code up the th"
"ree core components of a synth riff - the timbre, melody and rhythm."
msgstr ""
"Que ce soit la dérive hantée d'oscillateurs grondants ou le coup de poing désa"
"ccordé des ondes scies perçant à travers le mix, le synthé principal joue un r"
"ôle essentiel dans chaque piste électronique. Dans l'édition du mois dernier d"
"e cette série de tutoriels nous avons couvert comment coder nos rythmes. Dans "
"ce tutoriel nous verrons comment coder les trois composants principaux d'un ri"
"ff de synthé : le timbre, la mélodie et le rythme."

#: A.04-synth-riffs.md:12
#, fuzzy
msgid ""
"OK, so power up your Raspberry Pi, crack open Sonic Pi v2.6+ and let's make so"
"me noise!"
msgstr ""
"OK, allumez votre Raspberry Pi, ouvrez Sonic Pi (version 2.6 ou plus) et faiso"
"ns du bruit !"

#: A.04-synth-riffs.md:16
#, fuzzy
msgid "Timbral Possibilities"
msgstr "Les possibilités du timbre"

#: A.04-synth-riffs.md:18
#, fuzzy
msgid ""
"An essential part of any synth riff is changing and playing with the timbre of"
" the sounds. We can control the timbre in Sonic Pi in two ways - choosing diff"
"erent synths for a dramatic change and setting the various synth opts for more"
" subtle modifications. We can also use FX, but that's for another tutorial..."
msgstr ""
"Une partie essentielle de n'importe quel riff de synthé est de jouer avec le t"
"imbre des sons. On peut contrôler le timbre dans Sonic Pi de deux manières : e"
"n choisissant différents synthés pour un changement dramatique et en définissa"
"nt les diverses options des synthés pour des modifications plus subtiles. On p"
"eut aussi utiliser des effets, mais ce sera pour un autre tutoriel..."

#: A.04-synth-riffs.md:24
#, fuzzy
msgid "Let's create a simple live loop where we continually change the current synth:"
msgstr ""
"Créons une boucle interactive simple où l'on modifiera en continu le synthé co"
"urant :"

#: A.04-synth-riffs.md:27
#, no-wrap
msgid ""
"live_loop :timbre do\n"
"  use_synth (ring :tb303, :blade, :prophet, :saw, :beep, :tri).tick\n"
"  play :e2, attack: 0, release: 0.5, cutoff: 100\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :timbre do\n"
"  use_synth (ring :tb303, :blade, :prophet, :saw, :beep, :tri).tick\n"
"  play :e2, attack: 0, release: 0.5, cutoff: 100\n"
"  sleep 0.5\n"
"end"

#: A.04-synth-riffs.md:35
#, fuzzy
msgid ""
"Take a look at the code. We're simply ticking through a ring of synth names (t"
"his will cycle through each of these in turn repeating the list over and over)"
". We pass this synth name to the `use_synth` fn (function) which will change t"
"he `live_loop`'s current synth. We also play note `:e2` (E at the second octav"
"e), with a release time of 0.5 beats (half a second at the default BPM of 60) "
"and with the `cutoff:` opt set to 100."
msgstr ""
"Regardez ce code. On parcourt (avec `tick`) juste un anneau de noms de synthés"
" (on boucle sur chacun d'eux à leur tour puis on répéte la liste encore et enc"
"ore). On passe ce nom de synthé à la fonction (fn) `use_synth`, ce qui changer"
"a le synthé courant de la `live_loop`. On joue aussi la note `:e2` (E (ou Mi) "
"à la deuxième octave), avec un temps de relâche de 0.5 battement (une demi sec"
"onde au BPM par défaut de 60) et avec l'option `:cutoff` fixée à 100."

#: A.04-synth-riffs.md:42
#, fuzzy
msgid ""
"Hear how the different synths have very different sounds even though they're a"
"ll playing the same note. Now experiment and have a play. Change the release t"
"ime to bigger and smaller values. For example, change the `attack:` and `relea"
"se:` opts to see how different fade in/out times have a huge impact on the sou"
"nd. Finally change the `cutoff:` opt to see how different cutoff values also m"
"assively influence the timbre (values between 60 and 130 are good). See how ma"
"ny different sounds you can create by just changing a few values. Once you've "
"mastered that, just head to the Synths tab in the Help system for a full list "
"of all the synths and all the available opts each individual synth supports to"
" see just how much power you have under your coding fingertips."
msgstr ""
"Vous entendez que les différents synthés ont des sons très différents même s'i"
"ls jouent tous la même note. Maintenant expérimentez et jouez. Changez le temp"
"s de relâche en lui donnant des valeurs plus grandes et plus petites. Par exem"
"ple, changez les options `attack:` et `release:` pour voir comme des temps dif"
"férents de fondu d'entrée et de sortie ont un grand effet sur le son. Enfin ch"
"angez l'option `cutoff:` pour voir comment différentes valeurs de coupure ont "
"une influence massive sur le timbre (des valeurs entre 60 et 130 sont bonnes)."
" Voyez combien de sons vous pouvez créer juste en changeant quelques valeurs. "
"Une fois que vous maîtrisez cela, allez dans l'onglet Synthés dans le système "
"d'aide pour voir la liste entière des synthés et des options que chacun d'eux "
"supporte pour voir l'étendue du pouvoir que vous avez au bouts de vos doigts d"
"e codeur."

#: A.04-synth-riffs.md:55
msgid "Timbre"
msgstr ""

#: A.04-synth-riffs.md:57
#, fuzzy
msgid ""
"Timbre is just a fancy word describing the sound of a sound. If you play the s"
"ame note with different instruments such as a violin, guitar, or piano, the pi"
"tch (how high or low it sounds) would be the same, but the sound quality would"
" be different. That sound quality - the thing which allows you to tell the dif"
"ference between a piano and a guitar is the timbre."
msgstr ""
"Le timbre est juste un mot savant pour décrire comment sonne un son. Si vous j"
"ouez la même note avec différents instruments comme un violon, une guitare, ou"
" un piano, la fréquence (si elle sonne haut ou bas) sera la même, mais la qual"
"ité du son sera différente. La qualité du son, ce qui fait qu'on peut différen"
"cier un piano et une guitare, c'est le timbre."

#: A.04-synth-riffs.md:65
#, fuzzy
msgid "Melodic Composition"
msgstr "Composition mélodique"

#: A.04-synth-riffs.md:67
#, fuzzy
msgid ""
"Another important aspect to our lead synth is the choice of notes we want to p"
"lay. If you already have a good idea, then you can simply create a ring with y"
"our notes in and tick through them:"
msgstr ""
"Un autre aspect important de notre synthé principal est le choix de notes que "
"l'on veut jouer. Si vous avez déjà une bonne idée, alors vous pouvez juste cré"
"er un anneau avec vos notes et les parcourir :"

#: A.04-synth-riffs.md:71
#, no-wrap
msgid ""
"live_loop :riff do\n"
"  use_synth :prophet\n"
"  riff = (ring :e3, :e3, :r, :g3, :r, :r, :r, :a3)\n"
"  play riff.tick, release: 0.5, cutoff: 80\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :riff do\n"
"  use_synth :prophet\n"
"  riff = (ring :e3, :e3, :r, :g3, :r, :r, :r, :a3)\n"
"  play riff.tick, release: 0.5, cutoff: 80\n"
"  sleep 0.25\n"
"end"

#: A.04-synth-riffs.md:80
#, fuzzy
msgid ""
"Here, we've defined our melody with a ring which includes both notes such as `"
":e3` and rests represented by `:r`. We're then using `.tick` to cycle through "
"each note to give us a repeating riff."
msgstr ""
"Ici nous avons défini une mélodie avec un anneau qui inclut des notes comme `:"
"e3` et des silences représentés par `:r`. On utilise ensuite `.tick` pour joue"
"r chaque note à son tour, ce qui nous donne un riff qui se répète."

#: A.04-synth-riffs.md:84
#, fuzzy
msgid "Auto Melody"
msgstr "Mélodie automatique"

#: A.04-synth-riffs.md:86
#, fuzzy
msgid ""
"It's not always easy to come up with a nice riff from scratch. Instead it's of"
"ten easier to ask Sonic Pi for a selection of random riffs and to choose the o"
"ne you like the best. To do that we need to combine three things: rings, rando"
"misation and random seeds. Let's look at an example:"
msgstr ""
"Ce n'est pas toujours facile d'inventer un riff sympa. C'est souvent plus simp"
"le de demander à Sonic Pi une sélection de riffs aléatoires et de choisir celu"
"i que l'on préfère. Pour faire cela on doit combiner trois choses : des anneau"
"x, de l'aléatoire et des graines aléatoires. Regardons un exemple :"

#: A.04-synth-riffs.md:91
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 3\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  play notes.tick, release: 0.25, cutoff: 80\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 3\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  play notes.tick, release: 0.25, cutoff: 80\n"
"  sleep 0.25\n"
"end"

#: A.04-synth-riffs.md:101
#, fuzzy
msgid ""
"There's a few things going on - let's look at them in turn. First, we specify "
"that we're using random seed 3. What does this mean? Well, the useful thing is"
" that when we set the seed, we can predict what the next random value is going"
" to be - it's the same as it was last time we set the seed to 3! Another usefu"
"l thing to know is that shuffling a ring of notes works in the same way. In th"
"e example above we're essentially asking for the 'third shuffle' in the standa"
"rd list of shuffles - which is also the same every time as we're always settin"
"g the random seed to the same value right before the shuffle. Finally we're ju"
"st ticking through our shuffled notes to play the riff."
msgstr ""
"Plusieurs choses se passent : regardons les une par une. On commence par spéci"
"fier la graine aléatoire 3. Qu'est-ce que cela signifie ? Eh bien, c'est utile"
" parce que quand on définit la graine, on sait prédire quelle sera la prochain"
"e valeur aléatoire : ce sera la même que la dernière fois qu'on a choisi la gr"
"aine 3 ! Une autre chose utile à savoir est que mélanger un anneau de notes fo"
"nctionne de la même façon. Dans l'exemple ci-dessus c'est comme si on demandai"
"t le 'troisième mélange' dans la liste standard de mélanges : il sera le même "
"chaque fois comme on définit toujours la graine aléatoire à la même valeur ava"
"nt le mélange. Enfin on parcourt juste nos notes mélangées pour jouer le riff."

#: A.04-synth-riffs.md:112
#, fuzzy
msgid ""
"Now, here's where the fun starts. If we change the random seed value to anothe"
"r number, say 3000, we get an entirely different shuffling of the notes. So no"
"w it's extremely easy to explore new melodies. Simply choose the list of notes"
" we want to shuffle (scales are a great starting point) and then choose the se"
"ed we want to shuffle with. If we don't like the melody, just change one of th"
"ose two things and try again. Repeat until you like what you hear!"
msgstr ""
"Maintenant, c'est ici qu'on commence à s'amuser. Si on change la valeur de la "
"graine aléatoire, par exemple en 3000, on a un mélange entièrement différent d"
"es notes. Ainsi il est très facile d'explorer de nouvelles mélodies. Il suffit"
" de choisir la liste de notes que l'on veut mélanger (les gammes sont un très "
"bon endroit pour commencer) et ensuite de choisir la graine avec laquelle on v"
"eut les mélanger. Si on n'aime pas la mélodie, on peut juste changer une de ce"
"s deux choses et essayer à nouveau. Répétez jusqu'à ce que vous aimiez ce que "
"vous entendez !"

#: A.04-synth-riffs.md:121
#, fuzzy
msgid "Pseudo Randomisation"
msgstr "Pseudo aléatoire"

#: A.04-synth-riffs.md:123
#, fuzzy
msgid ""
"Sonic Pi's randomisation is not actually random it's what's called pseudo rand"
"om. Imagine if you were to roll a dice 100 times and write down the result of "
"each roll onto a piece of paper. Sonic Pi has the equivalent of this list of r"
"esults which it uses when you ask for a random value. Instead of rolling an ac"
"tual dice, it just picks the next value from the list. Setting the random seed"
" is just jumping to a specific point in that list."
msgstr ""
"L'aléatoire de Sonic Pi n'est pas vraiment aléatoire, on appelle ça du pseudo "
"aléatoire. Imaginez que vous jetez un dé 100 fois et que vous écrivez le résul"
"tat de chaque jet sur une feuille de papier. Sonic Pi a l'équivalent de cette "
"liste de résultats qu'il utilise quand on demande une valeur aléatoire. Au lie"
"u de jeter un vrai dé, il prend juste la valeur suivante dans la liste. Défini"
"r la graine aléatoire revient à sauter à un endroit particulier de cette liste"
"."

#: A.04-synth-riffs.md:131
#, fuzzy
msgid "Finding your Rhythm"
msgstr "Trouver votre rythme"

#: A.04-synth-riffs.md:133
#, fuzzy
msgid ""
"Another important aspect to our riff is the rhythm - when to play a note and w"
"hen not to. As we saw above we can use `:r` in our rings to insert rests. Anot"
"her very powerful way is to use spreads which we'll cover in a future tutorial"
". Today we'll use randomisation to help us find our rhythm. Instead of playing"
" every note we can use a conditional to play a note with a given probability. "
"Let's take a look:"
msgstr ""
"Un autre aspect important de notre riff est le rythme : quand jouer une note e"
"t quand ne pas le faire. Comme on a vu, on peut utiliser `:r` dans nos anneaux"
" pour insérer des silences. Une autre manière puissante consiste à utiliser de"
"s 'spreads' que l'on couvrira dans un futur tutoriel. Aujourd'hui nous allons "
"utiliser l'aléatoire pour nous aider à trouver notre rythme. Au lieu de jouer "
"toutes les notes on peut utiliser une condition pour jouer une note avec une p"
"robabilité donnée. Voyons cela :"

#: A.04-synth-riffs.md:140
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 30\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  16.times do\n"
"    play notes.tick, release: 0.2, cutoff: 90 if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 30\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  16.times do\n"
"    play notes.tick, release: 0.2, cutoff: 90 if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.04-synth-riffs.md:152
#, fuzzy
msgid ""
"A really useful fn to know is `one_in` which will give us a `true` or `false` "
"value with the specified probability. Here, we're using a value of 2 so on ave"
"rage one time every two calls to `one_in` it will return `true`. In other word"
"s, 50% of the time it will return `true`. Using higher values will make it ret"
"urn `false` more often introducing more space into the riff."
msgstr ""
"Une fonction très utile à connaître est `one_in` qui nous donne une valeur `tr"
"ue` ou `false` (vrai ou faux) avec la probabilité spécifiée. Ici nous utilison"
"s une valeur de 2 donc en moyenne un appel sur deux à `one_in` retournera `tru"
"e`. En d'autres termes, elle retournera `true` 50% du temps. Si on choisit des"
" valeurs plus grandes elle retournera `false` plus souvent ce qui mettra plus "
"d'espace dans notre riff."

#: A.04-synth-riffs.md:159
#, fuzzy
msgid ""
"Notice that we've added some iteration in here with `16.times`. This is becaus"
"e we only want to reset our random seed value every 16 notes so our rhythm rep"
"eats every 16 times. This doesn't affect the shuffling as that is still done i"
"mmediately after the seed is set. We can use the iteration size to alter the l"
"ength of the riff. Try changing the 16 to 8 or even 4 or 3 and see how it affe"
"cts the rhythm of the riff."
msgstr ""
"Remarquez qu'on a introduit un peu d'itération ici avec `16.times`. C'est parc"
"e qu'on ne veut redéfinir notre valeur de graine aléatoire que toutes les 16 n"
"otes pour que notre rythme se répète toutes les 16 fois. Cela n'affecte pas le"
" mélange comme il est toujours fait juste après avoir défini la graine. On peu"
"t utiliser la longueur d'itération pour modifier la longueur de notre riff. Es"
"sayez de changer le 16 en 8 ou même en 4 ou 3 et voyez comment cela affecte le"
" rythme du riff."

#: A.04-synth-riffs.md:168
#, fuzzy
msgid ""
"OK, so let's combine everything we've learned together into one final example."
" See you next time!"
msgstr ""
"OK, combinons tout ce que nous avons appris dans un dernier exemple. A la proc"
"haine !"

#: A.04-synth-riffs.md:171
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  #  uncomment to bring in:\n"
"  #  synth :blade, note: :e4, release: 4, cutoff: 100, amp: 1.5\n"
"  use_synth :dsaw\n"
"  use_random_seed 43\n"
"  notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle.take(8)\n"
"  8.times do\n"
"    play notes.tick, release: rand(0.5), cutoff: rrand(60, 130) if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  use_random_seed 500\n"
"  16.times do\n"
"    sample :bd_haus, rate: 2, cutoff: 110 if rand < 0.35\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :bd do\n"
"  sample :bd_haus, cutoff: 100, amp: 3\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  #  uncomment to bring in:\n"
"  #  synth :blade, note: :e4, release: 4, cutoff: 100, amp: 1.5\n"
"  use_synth :dsaw\n"
"  use_random_seed 43\n"
"  notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle.take(8)\n"
"  8.times do\n"
"    play notes.tick, release: rand(0.5), cutoff: rrand(60, 130) if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  use_random_seed 500\n"
"  16.times do\n"
"    sample :bd_haus, rate: 2, cutoff: 110 if rand < 0.35\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :bd do\n"
"  sample :bd_haus, cutoff: 100, amp: 3\n"
"  sleep 0.5\n"
"end"

#: A.05-acid-bass.md:1
#, fuzzy
msgid "A.5 Acid Bass"
msgstr "A.5 Basse acide"

#: A.05-acid-bass.md:3
#, fuzzy
msgid "Acid Bass"
msgstr "Basse acide"

#: A.05-acid-bass.md:5
#, fuzzy
msgid ""
"It's impossible to look through the history of electronic dance music without "
"seeing the enormous impact of the tiny Roland TB-303 synthesiser. It's the sec"
"ret sauce behind the original acid bass sound. Those classic squealing and squ"
"elching TB-303 bass riffs can be heard from the early Chicago House scene thro"
"ugh to more recent electronic artists such as Plastikman, Squarepusher and Aph"
"ex Twin."
msgstr ""
"Il est impossible de regarder l'histoire de la musique de danse électronique s"
"ans voir l'énorme impact du petit synthétiseur Roland TB-303. C'est la sauce s"
"ecrète derrière le son original de basse acide. On entend ces riffs de basse c"
"lassiques crissants et pataugeants depuis la jeune scène de house de Chicago j"
"usqu'à des artistes plus récents comme Plastikman, Squarepusher et Aphex Twin."

#: A.05-acid-bass.md:12
#, fuzzy
msgid ""
"Interestingly, Roland never intended for the TB-303 to be used in dance music."
" It was originally created as a practice aid for guitarists. They imagined tha"
"t people would program them to play bass lines to jam along to. Unfortunately "
"there were a number of problems: they were a little fiddly to program, didn't "
"sound particularly good as a bass-guitar replacement and were pretty expensive"
" to buy. Deciding to cut their losses, Roland stopped making them after 10,000"
" units were sold and after a number of years sitting on guitarist's shelves, t"
"hey soon could be found in the windows of second hand shops. These lonely disc"
"arded TB-303s were waiting to be discovered by a new generation of experimente"
"rs who started using them in ways that Roland didn't imagine to create new cra"
"zy sounds. Acid House was born."
msgstr ""
"Il est intéressant de savoir que Roland n'avait pas l'intention que le TB-303 "
"soit utilisé dans de la musique pour danser. Il a été créé à l'origine comme u"
"ne aide de travail pour les guitaristes. Ils ont imaginé que les gens les prog"
"rammeraient pour jouer des lignes de basse d'accompagnement. Malheureusement i"
"l y avait un certain nombre de problèmes : ils étaient un peu compliqués à pro"
"grammer, ne sonnaient pas particulièrement bien comme remplacement de guitare "
"basse et ils étaient assez chers. Décidant d'arrêter les frais, Roland a cessé"
" d'en fabriquer après en avoir vendu 10'000 unités et après un certain nombres"
" d'années à rester sur les étagères des guitaristes, ils se retrouvés dans les"
" vitrines des magasins d'occasion. C'est pauvres TB-303 rejetés attendaient d'"
"être découverts par une nouvelle génération d'expérimentateurs qui ont commenc"
"é à les utiliser dans des manières que Roland n'avait pas imaginées pour créer"
" des sons fous. La house acide était née."

#: A.05-acid-bass.md:25
#, fuzzy
msgid ""
"Although getting your hands on an original TB-303 is not so easy you will be p"
"leased to know that you can turn your Raspberry Pi into one using the power of"
" Sonic Pi. Behold, fire up Sonic Pi and throw this code into an empty buffer a"
"nd hit Run:"
msgstr ""
"Même si se procurer un TB-303 original n'est pas si facile vous serez heureux "
"d'apprendre que vous pouvez transformer votre Raspberry Pi en TB-303 en utilis"
"ant la puissance de Sonic Pi. Lancez Sonic Pi, copiez ce code dans un buffer v"
"ide et cliquez sur 'Run':"

#: A.05-acid-bass.md:30
#, no-wrap
msgid ""
"use_synth :tb303\n"
"play :e1"
msgstr ""
"use_synth :tb303\n"
"play :e1"

#: A.05-acid-bass.md:35
msgid "Instant acid bass! Let's play around..."
msgstr ""

#: A.05-acid-bass.md:37
#, fuzzy
msgid "Squelch that Bass"
msgstr "Presse cette basse"

#: A.05-acid-bass.md:39
#, fuzzy
msgid ""
"First, let's build a live arpeggiator to make things fun. In the last tutorial"
" we looked at how riffs can just be a ring of notes that we tick through one a"
"fter another, repeating when we get to the end. Let's create a live loop that "
"does exactly that:"
msgstr ""
"Commençons par construire un arpège interactif pour rendre les choses amusante"
"s. Dans le dernier tutoriel nous avons vu comment des mélodies peuvent être ju"
"ste un anneau de notes qu'on joue les unes après les autres, en répétant quand"
" on arrive à la fin. Créons une boucle interactive qui fait cela :"

#: A.05-acid-bass.md:44
#, no-wrap
msgid ""
"use_synth :tb303\n"
"live_loop :squelch do\n"
"  n = (ring :e1, :e2, :e3).tick\n"
"  play n, release: 0.125, cutoff: 100, res: 0.8, wave: 0\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_synth :tb303\n"
"live_loop :squelch do\n"
"  n = (ring :e1, :e2, :e3).tick\n"
"  play n, release: 0.125, cutoff: 100, res: 0.8, wave: 0\n"
"  sleep 0.125\n"
"end"

#: A.05-acid-bass.md:53
#, fuzzy
msgid "Take a look at each line."
msgstr "Regardons chaque ligne."

#: A.05-acid-bass.md:55
#, fuzzy
msgid ""
"On the first line we set the default synth to be `tb303` with the `use_synth` "
"fn."
msgstr ""
"A la première ligne choisit `tb303` comme synthé par défaut avec la fonction `"
"use_synth`."

#: A.05-acid-bass.md:58
#, fuzzy
msgid ""
"On line two we create a live loop called `:squelch` which will just loop round"
" and round."
msgstr ""
"A la deuxième ligne on crée une boucle interactive du nom de `:squelch` qui va"
" juste boucler encore et encore."

#: A.05-acid-bass.md:61
#, fuzzy
msgid ""
"Line three is where we create our riff - a ring of notes (E in octaves 1, 2, a"
"nd 3) which we simply tick through with `.tick`. We define `n` to represent th"
"e current note in the riff. The equals sign just means to assign the value on "
"the right to the name on the left. This will be different every time round the"
" loop. The first time round, `n` will be set to `:e1`. The second time round i"
"t will be `:e2`, followed by `:e3`, and then back to `:e1`, cycling round fore"
"ver."
msgstr ""
"A la troisième ligne on crée notre mélodie : un anneau de notes (E ou Mi aux o"
"ctaves 1, 2 et 3) et on le parcourt simplement avec `.tick`. On définit `n` po"
"ur représenter la note courante de la mélodie. Le signe égal veut juste dire q"
"u'on affecte la valeur à droite au nom à gauche. Cette valeur sera différente "
"à chaque boucle. La première fois `n` aura la valeur `:e1`. La deuxième fois c"
"e sera `:e2`, puis `:e3`, puis de nouveau `:e1`, en bouclant à l'infini."

#: A.05-acid-bass.md:70
#, fuzzy
msgid ""
"Line four is where we actually trigger our `:tb303` synth. We're passing a few"
" interesting opts here: `release:`, `cutoff:`, `res:` and `wave:` which we'll "
"discuss below."
msgstr ""
"A la ligne quatre on joue notre synthé `:tb303`. On lui passe quelques options"
" intéressantes : `release:`, `cutoff:`, `res:` et `wave:` que l'on décrira plu"
"s bas."

#: A.05-acid-bass.md:74
#, fuzzy
msgid ""
"Line five is our `sleep` - we're asking the live loop to loop round every `0.1"
"25`s or 8 times a second at the default BPM of 60."
msgstr ""
"La ligne cinq est notre `sleep`: on demande à la boucle interactive de boucler"
" toutes les `0.125`secondes ou 8 fois par seconde au BPM par défaut de 60"

#: A.05-acid-bass.md:77
#, fuzzy
msgid ""
"Line six is the `end` to the live loop. This just tells Sonic Pi where the end"
" of the live loop is."
msgstr ""
"La ligne six est la fin de la boucle interactive. Le mot `end` indique juste à"
" Sonic Pi où se termine la boucle interactive."

#: A.05-acid-bass.md:80
#, fuzzy
msgid ""
"Whilst you're still figuring out what's going on, type in the code above and h"
"it the Run button. You should hear the `:tb303` kick into action. Now, this is"
" where the action is: let's start live coding."
msgstr ""
"Alors que vous êtes encore en train de vous familiariser avec ce qui se passe,"
" tapez le code ci-dessous et cliquez sur le bouton 'Run'. Vous devriez entendr"
"e le `:tb303` entrer en action. C'est ici le coeur de l'action : commençons à "
"programmer de manière interactive."

#: A.05-acid-bass.md:84
#, fuzzy
msgid ""
"Whilst the loop is still live, change the `cutoff:` opt to `110`. Now hit the "
"Run button again. You should hear the sound become a little harsher and more s"
"quelchy. Dial in `120` and hit run. Now `130`. Listen how higher cutoff values"
" make it sound more piercing and intense. Finally, drop it down to `80` when y"
"ou feel like a rest. Then repeat as many times as you want. Don't worry, I'll "
"still be here..."
msgstr ""
"Pendant que la boucle tourne, changez l'option `cutoff:` en `110`. Puis clique"
"z à nouveau sur le bouton 'Run'. Vous devriez entendre le son devenir un peu p"
"lus dur et sec. Montez à `120` et cliquez sur 'Run'. Puis `130`. Ecoutez comme"
" les valeurs hautes de coupure rendent le son plus perçant et intense. Enfin, "
"descendez à `80` quand vous sentirez que vous voulez un peu de repos. Puis rép"
"étez ça autant que vous voulez. Pas d'inquiétude, je serai toujours là..."

#: A.05-acid-bass.md:91
#, fuzzy
msgid ""
"Another opt worth playing with is `res:`. This controls the level of resonance"
" of the filter. A high resonance is characteristic of acid bass sounds. We cur"
"rently have our `res:` set to `0.8`. Try cranking it up to `0.85`, then `0.9`,"
" and finally `0.95`. You might find that a cutoff such as `110` or higher will"
" make the differences easier to hear. Finally go crazy and dial in `0.999` for"
" some insane sounds. At a `res` this high, you're hearing the cutoff filter re"
"sonate so much it starts to make sounds of its own!"
msgstr ""
"Une autre option qui vaut le coup d'être utilisée est `res:`. Elle contrôle le"
" niveau de résonance du filtre. Une haute résonance est caractéristique des so"
"ns de basse acide. Nous avons pour le moment une `res:` de `0.8`. Essayez de l"
"a monter à `0.85`, puis `0.9`, et enfin `0.95`. Un cutoff de `110` ou plus peu"
"t permettre d'entendre plus facilement les différences. Enfin défoulez-vous et"
" montez jusque `0.999` pour avoir des sons déments. Avec une `res` aussi haute"
" vous entendez le filtre de coupure résonner tant qu'il commence à faire ses p"
"ropres sons."

#: A.05-acid-bass.md:100
#, fuzzy
msgid ""
"Finally, for a big impact on the timbre try changing the `wave:` opt to `1`. T"
"his is the choice of source oscillator. The default is `0` which is a sawtooth"
" wave. `1` is a pulse wave and `2` is a triangle wave."
msgstr ""
"Enfin pour avoir un grand impact sur le timbre essayez de mettre l'option `wav"
"e:` à `1`. C'est le choix de l'oscillateur source. La valeur par défaut est `0"
"` qui est une onde en dents de scie."

#: A.05-acid-bass.md:104
#, fuzzy
msgid ""
"Of course, try different riffs by changing the notes in the ring or even picki"
"ng notes from scales or chords. Have fun with your first acid bass synth."
msgstr ""
"Bien sûr, essayez différentes mélodies en changeant les notes dans l'anneau ou"
" même en choisissant des notes de gammes ou d'accords. Amusez-vous bien avec v"
"otre premier synthé de basse acide."

#: A.05-acid-bass.md:108
#, fuzzy
msgid "Deconstructing the TB-303"
msgstr "Déconstruisons le TB-303"

#: A.05-acid-bass.md:110
#, fuzzy
msgid ""
"The design of the original TB-303 is actually pretty simple. As you can see fr"
"om the following diagram there's only 4 core parts."
msgstr ""
"Le design du TB-303 original était en fait assez simple. Comme vous pouvez le "
"voir sur le diagramme suivant il n'y a que quatre parties principales."

#: A.05-acid-bass.md:113
msgid "![TB-303 Design](../images/tutorial/articles/A.05-acid-bass/tb303-design.png)"
msgstr ""

#: A.05-acid-bass.md:115
#, fuzzy
msgid ""
"First is the oscillator wave - the raw ingredients of the sound. In this case "
"we have a square wave. Next there's the oscillator's amplitude envelope which "
"controls the amp of the square wave through time. These are accessed in Sonic "
"Pi by the `attack:`, `decay:`, `sustain:` and `release:` opts along with their"
" level counterparts. For more information read Section 2.4 'Duration with Enve"
"lopes' in the built-in tutorial. We then pass our enveloped square wave throug"
"h a resonant low pass filter. This chops off the higher frequencies as well as"
" having that nice resonance effect. Now this is where the fun starts. The cuto"
"ff value of this filter is also controlled by its own envelope! This means we "
"have amazing control over the timbre of the sound by playing with both of thes"
"e envelopes. Let's take a look:"
msgstr ""
"En premier on a l'onde oscillatoire : les ingrédients de base du son. Dans ce "
"cas nous avons une onde carrée. Ensuite on a l'enveloppe d'amplitude de l'osci"
"llateur qui contrôle l'amplitude de l'onde carrée au cours du temps. On peut y"
" accéder dans Sonic Pi avec les options `attack:`, `decay:`, `sustain:` et `re"
"lease:` ainsi que leur niveau correspondant. Pour plus d'informations lisez la"
" Section 2.4 'Durée avec enveloppes' dans le tutoriel inclus dans Sonic Pi. On"
" passe ensuite notre onde carrée enveloppée dans un filtre passe bas résonant."
" Cela coupe les hautes fréquences et a un bel effet de résonance. Et c'est ici"
" que ça devient amusant. La valeur de coupure de ce filtre est aussi contrôlée"
" par sa propre enveloppe ! Cela veut dire que nous avons un contrôle incroyabl"
"e sur le timbre du son en jouant avec ces deux enveloppes. Jetons-y un oeil :"

#: A.05-acid-bass.md:128
#, no-wrap
msgid ""
"use_synth :tb303\n"
"with_fx :reverb, room: 1 do\n"
"  live_loop :space_scanner do\n"
"    play :e1, cutoff: 100, release: 7, attack: 1, cutoff_attack: 4, cutoff_rel"
"ease: 4\n"
"    sleep 8\n"
"  end\n"
"end"
msgstr ""
"use_synth :tb303\n"
"with_fx :reverb, room: 1 do\n"
"  live_loop :space_scanner do\n"
"    play :e1, cutoff: 100, release: 7, attack: 1, cutoff_attack: 4, cutoff_rel"
"ease: 4\n"
"    sleep 8\n"
"  end\n"
"end"

#: A.05-acid-bass.md:138
#, fuzzy
msgid ""
"For each standard envelope opt, there's a `cutoff_` equivalent opt in the `:tb"
"303` synth. So, to change the cutoff attack time we can use the `cutoff_attack"
":` opt. Copy the code above into an empty buffer and hit Run. You'll hear a cr"
"azy sound warble in and out. Now start to play. Try changing the `cutoff_attac"
"k:` time to `1` and then `0.5`. Now try `8`."
msgstr ""
"Pour chaque option standard d'enveloppe, il y a une option `cutoff_` équivalen"
"te dans le synthé `:tb303`. Donc, pour changer le temps d'attaque de la coupur"
"e on peut utiliser l'option `:cutoff_attack`. Copiez le code ci-dessus dans un"
" buffer vide et cliquez sur 'Run'. Vous entendrez un son fou entrer et sortir."
" Maintenant essayez de jouer avec. Essayez de changer la durée de `cutoff_atta"
"ck:` en `1` puis en `0.5`. Puis essayez `8`."

#: A.05-acid-bass.md:144
#, fuzzy
msgid ""
"Notice that I've passed everything through a `:reverb` FX for extra atmosphere"
" - try other FX to see what works!"
msgstr ""
"Remarquez que j'ai passé tout cela à travers un effet `:reverb` pour plus d'at"
"mosphère : essayez d'autres effets pour voir ce qui marche !"

#: A.05-acid-bass.md:149
#, fuzzy
msgid ""
"Finally, here's a piece I composed using the ideas in this tutorial. Copy it i"
"nto an empty buffer, listen for a while and then start live coding your own ch"
"anges. See what crazy sounds you can make with it! See you next time..."
msgstr ""
"Enfin voici un morceau que j'ai composé en utilisant les idées de ce tutoriel."
" Copiez le dans un buffer vide, écoutez un peu, puis commencez à programmer in"
"teractivement vos changements. Voyez quels sons fous vous pouvez faire avec ! "
"A la prochaine..."

#: A.05-acid-bass.md:154
#, no-wrap
msgid ""
"use_synth :tb303\n"
"use_debug false\n"
" \n"
"with_fx :reverb, room: 0.8 do\n"
"  live_loop :space_scanner do\n"
"    with_fx :slicer, phase: 0.25, amp: 1.5 do\n"
"      co = (line 70, 130, steps: 8).tick\n"
"      play :e1, cutoff: co, release: 7, attack: 1, cutoff_attack: 4, cutoff_re"
"lease: 4\n"
"      sleep 8\n"
"    end\n"
"  end\n"
" \n"
"  live_loop :squelch do\n"
"    use_random_seed 3000\n"
"    16.times do\n"
"      n = (ring :e1, :e2, :e3).tick\n"
"      play n, release: 0.125, cutoff: rrand(70, 130), res: 0.9, wave: 1, amp: "
"0.8\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"use_synth :tb303\n"
"use_debug false\n"
" \n"
"with_fx :reverb, room: 0.8 do\n"
"  live_loop :space_scanner do\n"
"    with_fx :slicer, phase: 0.25, amp: 1.5 do\n"
"      co = (line 70, 130, steps: 8).tick\n"
"      play :e1, cutoff: co, release: 7, attack: 1, cutoff_attack: 4, cutoff_re"
"lease: 4\n"
"      sleep 8\n"
"    end\n"
"  end\n"
" \n"
"  live_loop :squelch do\n"
"    use_random_seed 3000\n"
"    16.times do\n"
"      n = (ring :e1, :e2, :e3).tick\n"
"      play n, release: 0.125, cutoff: rrand(70, 130), res: 0.9, wave: 1, amp: "
"0.8\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.06-minecraft.md:1
#, fuzzy
msgid "A.6 Musical Minecraft"
msgstr "A.6 Minecraft musical"

#: A.06-minecraft.md:3
#, fuzzy
msgid "Musical Minecraft"
msgstr "Minecraft musical"

#: A.06-minecraft.md:7
#, fuzzy
msgid ""
"Hello and welcome back! In the previous tutorials we've focussed purely on the"
" music possibilities of Sonic Pi - (turning your Raspberry Pi into a performan"
"ce ready musical instrument). So far we've learned how to:"
msgstr ""
"Bonjour et bienvenue à nouveau ! Dans les tutoriels précédents nous nous somes"
" concentrés exclusivement sur les possibilités mnusicales de Sonic Pi, en tran"
"sformant votre Raspberry Pi en instrument de musique prêt à l'emploi. Jusqu'ic"
"i nous avons appris comment :"

#: A.06-minecraft.md:11
#, fuzzy
msgid "Live Code - changing the sounds on-the-fly,"
msgstr "Programmer de manière interactive, en changeant les sons à la volée,"

#: A.06-minecraft.md:12
#, fuzzy
msgid "Code some huge beats,"
msgstr "Coder des rythmes imposants,"

#: A.06-minecraft.md:13
#, fuzzy
msgid "Generate powerful synth leads,"
msgstr "Générer des mélodies de synthé puissantes"

#: A.06-minecraft.md:14
#, fuzzy
msgid "Re-create the famous TB-303 acid-bass sound."
msgstr "recréer le fameux son TB-303 de basse acide"

#: A.06-minecraft.md:16
#, fuzzy
msgid ""
"There's so much more to show you (which we will explore in future editions). H"
"owever, this month, let's look at something Sonic Pi can do that you probably "
"didn't realise: control Minecraft."
msgstr ""
"Il y a tellement plus à vous montrer, et nous l'explorerons dans de futures éd"
"itions. Cependant, ce mois-ci, nous allons regarder une chose que Sonic Pi sai"
"t faire et que vous n'avez probablement pas remarquée : contrôler Minecraft."

#: A.06-minecraft.md:20
#, fuzzy
msgid "Hello Minecraft World"
msgstr "Bonjour, monde de Minecraft"

#: A.06-minecraft.md:22
#, fuzzy
msgid ""
"OK, let's get started. Boot up your Raspberry Pi, fire up Minecraft Pi and cre"
"ate a new world. Now start up Sonic Pi and re-size and move your windows so yo"
"u can see both Sonic Pi and Minecraft Pi at the same time."
msgstr ""
"OK, commençons. Démarrez votre Raspberry Pi, lancez Minecraft Pi et créez un n"
"ouveau monde. Maintenant démarrez Sonic Pi et déplacez vos fenêtres de manière"
" à pouvoir voir Sonic Pi et Minecraft Pi en même temps."

#: A.06-minecraft.md:26
#, fuzzy
msgid "In a fresh buffer type the following:"
msgstr "Dans un buffer disponible tapez ce qui suit :"

#: A.06-minecraft.md:28
#, no-wrap
msgid "mc_message \"Hello Minecraft from Sonic Pi!\""
msgstr "mc_message \"Hello Minecraft from Sonic Pi!\""

#: A.06-minecraft.md:32
#, fuzzy
msgid ""
"Now, hit Run. Boom! Your message appeared in Minecraft! How easy was that? Now"
", stop reading this for a moment and play about with your own messages. Have f"
"un!"
msgstr ""
"Maintenant cliquez sur 'Run'. Boum ! Votre message est apparu dans Minecraft !"
" C'était facile, non ? Maintenant arrêtez un moment de lire ceci et jouez un p"
"eu avec vos propres messages. Amusez-vous !"

#: A.06-minecraft.md:36
msgid ""
"![Screen 0](../images/tutorial/articles/A.06-minecraft/Musical-Minecraft-0-sma"
"ll.png)"
msgstr ""

#: A.06-minecraft.md:38
#, fuzzy
msgid "Sonic Teleporter"
msgstr "Téléportation sonique"

#: A.06-minecraft.md:40
#, fuzzy
msgid ""
"Now let's do some exploring. The standard option is to reach for the mouse and"
" keyboard and start walking around. That works, but it's pretty slow and borin"
"g. It would be far better if we had some sort of teleport machine. Well, thank"
"s to Sonic Pi, we have one. Try this:"
msgstr ""
"Explorons un peu. L'option standard est de saisir la souris et le clavier et d"
"e commencer à se promener. Ca marche, mais c'est assez lent et ennuyeux. Ce se"
"rait beaucoup mieux si on avait une sorte de machine de téléportation. Eh bien"
", grâce à Sonic Pi, on en a une. Essayez ceci :"

#: A.06-minecraft.md:45
#, no-wrap
msgid "mc_teleport 80, 40, 100"
msgstr "mc_teleport 80, 40, 100"

#: A.06-minecraft.md:49
#, fuzzy
msgid ""
"Crikey! That was a long way up. If you weren't in flying-mode then you would h"
"ave fallen back down all the way to the ground. If you double-tap space to ent"
"er flying-mode and teleport again, you'll stay hovering at the location you za"
"p to."
msgstr ""
"Oh ! On est monté bien haut. Si vous n'étiez pas en mode volant vous avez du r"
"etomber jusqu'au sol. Si vous double-tapez Espace pour entrer en mode volant e"
"t vous téléportez à nouveau, vous resterez en l'air à l'endroit où vous vous ê"
"tes déplacés."

#: A.06-minecraft.md:54
#, fuzzy
msgid ""
"Now, what do those numbers mean? We have three numbers which describe the coor"
"dinates of where in the world we want to go. We give each number a name - x, y"
" and z:"
msgstr ""
"Maintenant, qu'est-ce que ces nombres signifient ? Nous avons trois nombres qu"
"i décrivent les coordonnées de l'endroit du monde où vous voulez vous déplacer"
". On donne à chacun de ces nombres un nom : x, y et z."

#: A.06-minecraft.md:58
#, fuzzy
msgid "x - how far left and right (80 in our example)"
msgstr "x - à quelle distance vers la gauche ou la droite (80 dans notre exemple)"

#: A.06-minecraft.md:59
#, fuzzy
msgid "y - how high we want to be (40 in our example)"
msgstr "y - à quelle hauteur on veut être (40 dans notre exemple)"

#: A.06-minecraft.md:60
#, fuzzy
msgid "z - how far forward and back (100 in our example)"
msgstr "z - à quelle distance vers l'avant ou l'arrière (100 dans notre exemple)"

#: A.06-minecraft.md:62
#, fuzzy
msgid ""
"By choosing different values for x, y and z we can teleport *anywhere* in our "
"world. Try it! Choose different numbers and see where you can end up. If the s"
"creen goes black it's because you've teleported yourself under the ground or i"
"nto a mountain. Just choose a higher y value to get back out above land. Keep "
"on exploring until you find somewhere you like..."
msgstr ""
"En choisissant différentes valeurs pour x, y, et z, on peut se téléporter *n'i"
"mporte où* dans notre monde. Essayez ! Choisissez différents nombres et regard"
"ez où vous vous retrouvez. Si l'écran devient noir c'est que vous vous êtes té"
"léportés sous terre ou dans une montagne. Choisissez juste une valeur de y plu"
"s grande pour vous retrouver au-dessus de la terre. Continuez à explorer jusqu"
"'à ce que vous trouviez un endroit qui vous plaise..."

#: A.06-minecraft.md:69
#, fuzzy
msgid ""
"Using the ideas so far, let's build a Sonic Teleporter which makes a fun telep"
"ort sound whilst it whizzes us across the Minecraft world:"
msgstr ""
"En utilisant les idées vues jusqu'ici, construisons un téléporteur sonique qui"
" fera un son amusant de téléportation quand il nous fera voyager à travers le "
"monde de Minecraft :"

#: A.06-minecraft.md:72
#, no-wrap
msgid ""
"mc_message \"Preparing to teleport....\"\n"
"sample :ambi_lunar_land, rate: -1\n"
"sleep 1\n"
"mc_message \"3\"\n"
"sleep 1\n"
"mc_message \"2\"\n"
"sleep 1\n"
"mc_message \"1\"\n"
"sleep 1\n"
"mc_teleport 90, 20, 10\n"
"mc_message \"Whoooosh!\""
msgstr ""
"mc_message \"Preparing to teleport....\"\n"
"sample :ambi_lunar_land, rate: -1\n"
"sleep 1\n"
"mc_message \"3\"\n"
"sleep 1\n"
"mc_message \"2\"\n"
"sleep 1\n"
"mc_message \"1\"\n"
"sleep 1\n"
"mc_teleport 90, 20, 10\n"
"mc_message \"Whoooosh!\""

#: A.06-minecraft.md:86
msgid ""
"![Screen 1](../images/tutorial/articles/A.06-minecraft/Musical-Minecraft-1-sma"
"ll.png)"
msgstr ""

#: A.06-minecraft.md:88
#, fuzzy
msgid "Magic Blocks"
msgstr "Blocs magiques"

#: A.06-minecraft.md:90
#, fuzzy
msgid ""
"Now you've found a nice spot, let's start building. You could do what you're u"
"sed to and start clicking the mouse furiously to place blocks under the cursor"
". Or you could use the magic of Sonic Pi. Try this:"
msgstr ""
"Maintenant que vous avez trouvé un endroit sympathique, commençons à construir"
"e. Vous pourriez faire comme vous en avez l'habitude et commencer à cliquer fu"
"rieusement la souris pour placer des blocs sous le curseur. Ou vous pourriez u"
"tiliser la magie de Sonic Pi. Essayez ceci :"

#: A.06-minecraft.md:94
#, no-wrap
msgid ""
"x, y, z = mc_location\n"
"mc_set_block :melon, x, y + 5, z"
msgstr ""
"x, y, z = mc_location\n"
"mc_set_block :melon, x, y + 5, z"

#: A.06-minecraft.md:99
#, fuzzy
msgid ""
"Now look up! There's a melon in the sky! Take a moment to look at the code. Wh"
"at did we do? On line one we grabbed the current location of Steve as the vari"
"ables x, y and z. These correspond to our coordinates described above. We use "
"these coordinates in the fn `mc_set_block` which will place the block of your "
"choosing at the specified coordinates. In order to make something higher up in"
" the sky we just need to increase the y value which is why we add 5 to it. Let"
"'s make a long trail of them:"
msgstr ""
"Maintenant regardez vers le haut ! Il y a un melon dans le ciel ! Prenez un mo"
"ment pour regarder le code. Qu'est-ce qu'on a fait ? Sur la première ligne on "
"a attrapé l'emplacement actuel de Steve dans les variables x, y et z. Elles co"
"rrespondent aux coordonnées décrites ci-dessus. Nous utilisons ces coordonnées"
" dans la fonction `mc_set_block` qui va placer le bloc de votre choix aux coor"
"données spécifiées. Pour placer quelque chose plus haut dans le ciel on doit j"
"uste augmenter la valeur de y, c'est pour ça qu'on lui ajoute 5. Faisons un ch"
"emin de melons :"

#: A.06-minecraft.md:107
#, no-wrap
msgid ""
"live_loop :melon_trail do\n"
"  x, y, z = mc_location\n"
"  mc_set_block :melon, x, y-1, z\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :melon_trail do\n"
"  x, y, z = mc_location\n"
"  mc_set_block :melon, x, y-1, z\n"
"  sleep 0.125\n"
"end"

#: A.06-minecraft.md:115
#, fuzzy
msgid ""
"Now, jump over to Minecraft, make sure you're in flying-mode (double tap space"
" if not) and fly all around the world. Look behind you to see a pretty trail o"
"f melon blocks! See what kind of twisty patterns you can make in the sky."
msgstr ""
"Maintenant sautez dans Minecraft, assurez-vous d'être en mode volant (tapez de"
"ux fois sur Espace sinon) et volez autour du monde. Regardez derrière vous pou"
"r voir un beau chemin de blocs de melon ! Voyez quels dessins tordus vous pouv"
"ez faire dans le ciel."

#: A.06-minecraft.md:120
#, fuzzy
msgid "Live Coding Minecraft"
msgstr "Programmer Minecraft de manière interactive"

#: A.06-minecraft.md:122
#, fuzzy
msgid ""
"Those of you that have been following this tutorial over the last few months w"
"ill probably have your minds blown at this point. The trail of melons is prett"
"y cool, but the most exciting part of the previous example is that you can use"
" `live_loop` with Minecraft! For those that don't know, `live_loop` is Sonic P"
"i's special magic ability that no other programming language has. It lets you "
"run multiple loops at the same time and allows you to change them whilst they "
"run. They are incredibly powerful and amazing fun. I use `live_loop`s to perfo"
"rm music in nightclubs with Sonic Pi - DJs use discs and I use `live_loop`s :-"
") However, today we're going to live code both music and Minecraft."
msgstr ""
"Ceux d'entre vous qui ont suivi ce tutoriel pendant les derniers mois doivent "
"être bien étonnés. Le chemin de melons est assez cool, mais la partie la plus "
"excitante de l'exemple précédent est qu'on peut utiliser la `live_loop` avec M"
"inecraft ! Pour ceux qui ne savent pas, la `live_loop` est la faculté magique "
"et spéciale de Sonic Pi qu'aucun autre langage de programmation ne possède. El"
"le vous permet d'exécuter des boucles multiples en même temps et vous permet d"
"e les modifier pendant qu'elles tournent. Elles sont incroyablement puissantes"
" et amusantes. J'utilise les `live_loop`s pour jouer de la musique dans des bo"
"îtes de nuit avec Sonic Pi : les DJs utilisent des disques et moi j'utilise de"
"s `live_loop`s :-) Cependant aujourd'hui nous allons programmer de manière int"
"eractive de la musique et Minecraft."

#: A.06-minecraft.md:133
#, fuzzy
msgid ""
"Let's get started. Run the code above and start making your melon trail again."
" Now, without stopping the code, just simply change `:melon` to `:brick` and h"
"it run. Hey presto, you're now making a brick trail. How simple was that! Fanc"
"y some music to go with it? Easy. Try this:"
msgstr ""
"Commençons. Exécutez le code ci-dessus et commencez à faire votre chemin de me"
"lons de nouveau. Maintenant, sans arrêter le code, changez simplement `:melon`"
" en `:brick` et cliquez sur `Run`. Eh voilà, vous construisez maintenant un ch"
"emin de briques. C'était simple, non ? Un peu de musique pour accompagner ça ?"
" Facile. Essayez ceci :"

#: A.06-minecraft.md:138
#, no-wrap
msgid ""
"live_loop :bass_trail do\n"
"  tick\n"
"  x, y, z = mc_location\n"
"  b = (ring :melon, :brick, :glass).look\n"
"  mc_set_block b, x, y -1, z\n"
"  note = (ring :e1, :e2, :e3).look\n"
"  use_synth :tb303\n"
"  play note, release: 0.1, cutoff: 70\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :bass_trail do\n"
"  tick\n"
"  x, y, z = mc_location\n"
"  b = (ring :melon, :brick, :glass).look\n"
"  mc_set_block b, x, y -1, z\n"
"  note = (ring :e1, :e2, :e3).look\n"
"  use_synth :tb303\n"
"  play note, release: 0.1, cutoff: 70\n"
"  sleep 0.125\n"
"end"

#: A.06-minecraft.md:151
#, fuzzy
msgid ""
"Now, whilst that's playing start changing the code. Change the block types - t"
"ry `:water`, `:grass` or your favourite block type. Also, try changing the cut"
"off value from `70` to `80` and then up to `100`. Isn't this fun?"
msgstr ""
"Maintenant pendant que ça joue commencez à modifier le code. Changez les types"
" de bloc : essayez `:water`, `:grass` ou votre type de bloc préféré. Aussi, es"
"sayez de changer la valeur de coupure de `70` à `80` puis jusque `100`. N'est-"
"ce pas amusant ?"

#: A.06-minecraft.md:158
msgid ""
"![Screen 2](../images/tutorial/articles/A.06-minecraft/Musical-Minecraft-2-sma"
"ll.png)"
msgstr ""

#: A.06-minecraft.md:160
#, fuzzy
msgid ""
"Let's combine everything we've seen so far with a little extra magic. Let's co"
"mbine our teleportation ability with block placing and music to make a Minecra"
"ft Music Video. Don't worry if you don't understand it all, just type it in an"
"d have a play by changing some of the values whilst it's running live. Have fu"
"n and see you next time..."
msgstr ""
"Rassemblons tout ce que nous avons vu jusqu'ici avec un peu de magie en plus. "
"Combinons notre faculté de téléportation avec placement de blocs et la musique"
" pour faire une vidéo de musique Minecraft. Ne vous inquiétez pas si vous ne c"
"omprenez pas tout, tapez juste le code et jouez ensuite à modifier quelques-un"
"es des valeurs pendant qu'il s'exécute. Amusez-vous bien et à la prochaine..."

#: A.06-minecraft.md:166
#, no-wrap
msgid ""
"live_loop :note_blocks do\n"
"  mc_message \"This is Sonic Minecraft\"\n"
"  with_fx :reverb do\n"
"    with_fx :echo, phase: 0.125, reps: 32 do\n"
"      tick\n"
"      x = (range 30, 90, step: 0.1).look\n"
"      y = 20\n"
"      z = -10\n"
"      mc_teleport x, y, z\n"
"      ns = (scale :e3, :minor_pentatonic)\n"
"      n = ns.shuffle.choose\n"
"      bs = (knit :glass, 3, :sand, 1)\n"
"      b = bs.look\n"
"      synth :beep, note: n, release: 0.1\n"
"      mc_set_block b, x+20, n-60+y, z+10\n"
"      mc_set_block b, x+20, n-60+y, z-10\n"
"      sleep 0.25\n"
"    end\n"
"  end\n"
"end\n"
"live_loop :beats do\n"
"  sample :bd_haus, cutoff: 100\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :note_blocks do\n"
"  mc_message \"This is Sonic Minecraft\"\n"
"  with_fx :reverb do\n"
"    with_fx :echo, phase: 0.125, reps: 32 do\n"
"      tick\n"
"      x = (range 30, 90, step: 0.1).look\n"
"      y = 20\n"
"      z = -10\n"
"      mc_teleport x, y, z\n"
"      ns = (scale :e3, :minor_pentatonic)\n"
"      n = ns.shuffle.choose\n"
"      bs = (knit :glass, 3, :sand, 1)\n"
"      b = bs.look\n"
"      synth :beep, note: n, release: 0.1\n"
"      mc_set_block b, x+20, n-60+y, z+10\n"
"      mc_set_block b, x+20, n-60+y, z-10\n"
"      sleep 0.25\n"
"    end\n"
"  end\n"
"end\n"
"live_loop :beats do\n"
"  sample :bd_haus, cutoff: 100\n"
"  sleep 0.5\n"
"end"

#: A.07-bizet.md:1
#, fuzzy
msgid "A.7 Bizet Beats"
msgstr "A.7 Battements de Bizet"

#: A.07-bizet.md:3
#, fuzzy
msgid "Bizet Beats"
msgstr "Battements de Bizet"

#: A.07-bizet.md:5
#, fuzzy
msgid ""
"After our brief excursion to the fantastic world of coding Minecraft with Soni"
"c Pi last month, let's get musical again. Today we're going to bring a classic"
"al operatic dance piece straight into the 21st century using the awesome power"
" of code."
msgstr ""
"Après notre briève excursion dans le monde fantastique de la programmation Min"
"ecraft avec Sonic Pi le mois dernier, penchons nous sur la musique à nouveau. "
"Aujourd'hui nous allons amener un morceau classique de danse d'opéra droit dan"
"s le 21e siècle en utilisant la puissance fantastique du code."

#: A.07-bizet.md:10
#, fuzzy
msgid "Outrageous and Disruptive"
msgstr "Scandaleux et perturbateur"

#: A.07-bizet.md:12
#, fuzzy
msgid ""
"Let's jump into a time machine back to the year 1875. A composer called Bizet "
"had just finished his latest opera Carmen. Unfortunately like many exciting an"
"d disruptive new pieces of music people initially didn't like it at all becaus"
"e it was too outrageous and different. Sadly Bizet died ten years before the o"
"pera gained huge international success and became one of the most famous and f"
"requently performed operas of all time. In sympathy with this tragedy let's ta"
"ke one of the main themes from Carmen and convert it to a modern format of mus"
"ic that is also too outrageous and different for most people in our time - liv"
"e coded music!"
msgstr ""
"Sautons dans une machine à remonter le temps jusqu'en 1875. Un compositeur nom"
"mé Bizet avait juste terminé son dernier opéra : Carmen. Malheureusement comme"
" beaucoup de nouveaux morceaux excitants et perturbateurs les gens ne l'aimaie"
"nt pas du tout au début parce qu'il était trop scandaleux et différent. Malheu"
"reusement Bizet est mort dix ans avant que l'opéra ne connaisse un grand succè"
"s international et ne devienne un des opéras les plus connus et les plus fréqu"
"emment interprétés de tous les temps. Par sympathie pour cette tragédie nous a"
"llons prendre un des thèmes principaux de Carmen et nous allons le convertir d"
"ans un format moderne de musique qui est aussi trop scandaleux et différent po"
"ur la plupart des gens de notre époque : la musique codée interactive !"

#: A.07-bizet.md:23
#, fuzzy
msgid "Decoding the Habanera"
msgstr "La Habanera décryptée"

#: A.07-bizet.md:25
#, fuzzy
msgid ""
"Trying to live code the whole opera would be a bit of a challenge for this tut"
"orial, so let's focus on one of the most famous parts - the bass line to the H"
"abanera:"
msgstr ""
"Essayez de programmer un opéra entier de manière interactive serait un peu amb"
"itieux pour ce tutoriel, concentrons nous sur une des ses plus célèbres partie"
"s : la ligne de basse de la Habanera :"

#: A.07-bizet.md:29
msgid "![Habanera Riff](../images/tutorial/articles/A.07-bizet/habanera.png)"
msgstr ""

#: A.07-bizet.md:31
#, fuzzy
msgid ""
"This may look extremely unreadable to you if you haven't yet studied music not"
"ation. However, as programmers we see music notation as just another form of c"
"ode - only it represents instructions to a musician instead of a computer. We "
"therefore need to figure out a way of decoding it."
msgstr ""
"Cela peut vous sembler complètement illisible si vous n'avez pas étudié la not"
"ation musicale. Cependant, en tant que programmeurs nous voyons la notation mu"
"sicale comme juste une autre forme de code, elle représente juste des instruct"
"ions pour un musicien au lieu d'un ordinateur."

#: A.07-bizet.md:36
msgid "Notes"
msgstr ""

#: A.07-bizet.md:38
#, fuzzy
msgid ""
"The notes are arranged from left to right like the words in this magazine but "
"also have different heights. *The height on the score represents the pitch of "
"the note.* The higher the note on the score, the higher the pitch of the note."
msgstr ""
"Les notes sont arrangées de gauche à droite comme les mots dans ce magasine ma"
"is elles ont aussi différentes hauteurs. *La hauteur sur la partition représen"
"te la hauteur d'une note.* Plus une note est haut sur la partition, plus sa ha"
"uteur est grande."

#: A.07-bizet.md:43
#, fuzzy
msgid ""
"In Sonic Pi we already know how to change the pitch of a note - we either use "
"high or low numbers such as `play 75` and `play 80` or we use the note names: "
"`play :E` and `play :F`. Luckily each of the vertical positions of the musical"
" score represents a specific note name. Take a look at this handy look up tabl"
"e:"
msgstr ""
"Dans Sonic Pi nous savons déjà comment changer la hauteur d'une note : on peut"
" utiliser des grands ou petits nombres comme `play 75` et `play 80` ou on peut"
" utiliser les noms des notes : `play :E` et `play :F`. Heureusement chacune de"
"s positions verticales sur la partition représente un nom de note en particuli"
"er. Jetez un oeil à cette table de correspondance bien pratique :"

#: A.07-bizet.md:49
msgid "![Notes](../images/tutorial/articles/A.07-bizet/notes.png)"
msgstr ""

#: A.07-bizet.md:51
#, fuzzy
msgid "Rests"
msgstr "Silences"

#: A.07-bizet.md:53
#, fuzzy
msgid ""
"Music scores are an extremely rich and expressive kind of code capable of comm"
"unicating many things. It therefore shouldn't come as much of a surprise that "
"musical scores can not only tell you what notes to play but also when *not* to"
" play notes. In programming this is pretty much equivalent to the idea of `nil"
"` or `null` - the absence of a value. In other words not playing a note is lik"
"e the absence of a note."
msgstr ""
"Les partitions sont une sorte de code extrêmement riche et expressif capable d"
"e communiquer de nombreuses choses. Cela ne devrait donc pas nous surprendre q"
"ue les partitions peuvent non seulement nous dire quelles notes jouer mais aus"
"si quand *ne pas* jouer de note. En programmation c'est à peu près l'équivalen"
"t de l'idée de `nil` ou `null`: l'absence de valeur. En d'autres mots ne pas j"
"ouer une note c'est comme une absence de note."

#: A.07-bizet.md:60
#, fuzzy
msgid ""
"If you look closely at the score you'll see that it's actually a combination o"
"f black dots with lines which represent notes to play and squiggly things whic"
"h represent the rests. Luckily Sonic Pi has a very handy representation for a "
"rest: `:r`, so if we run: `play :r` it actually plays silence! We could also w"
"rite `play :rest`, `play nil` or `play false` which are all equivalent ways of"
" representing rests."
msgstr ""
"Si vous regardez de près la partition vous verrez que c'est en fait une combin"
"aison de ronds noirs avec des barres qui représentent les notes à jouer et des"
" choses ondulées qui représentent les silences. Heureusement, Sonic Pi a une n"
"otation très pratique pour un silence : `:r`, donc si on exécute `play :r` il "
"jouera en fait un silence ! On pourrait aussi écrire `play :rest`, `play nil` "
"ou `play false` qui sont autant de manières équivalentes de représenter un sil"
"ence."

#: A.07-bizet.md:67
#, fuzzy
msgid "Rhythm"
msgstr "Rythme"

#: A.07-bizet.md:69
#, fuzzy
msgid ""
"Finally, there's one last thing to learn how to decode in the notation - the t"
"imings of the notes. In the original notation you'll see that the notes are co"
"nnected with thick lines called beams. The second note has two of these beams "
"which means it lasts for a 16th of a beat. The other notes have a single beam "
"which means they last for an 8th of a beat. The rest has two squiggly beams wh"
"ich means it also represents a 16th of the beat."
msgstr ""
"Enfin il y a une dernière chose à apprendre à décoder dans la notation : la no"
"tion du temps. Dans la notation originale vous verrez que les notes sont liées"
" par des traits épais. La deuxième note a deux de ces traits ce qui veut dire "
"qu'elle dure un 16e de temps. Les autres notes ont un seul trait ce qui veut d"
"ire qu'elles durent un 8e de temps. Le silence a aussi deux traits ondulés ce "
"qui veut dire qu'il représente aussi un 16e de temps."

#: A.07-bizet.md:77
#, fuzzy
msgid ""
"When we attempt to decode and explore new things a very handy trick is to make"
" everything as similar as possible to try and see any relationships or pattern"
"s. For example, when we re-write our notation purely in 16ths you can see that"
" our notation just turns into a nice sequence of notes and rests."
msgstr ""
"Quand on essaie de décoder et d'explorer de nouvelles choses un truc très prat"
"ique est de rendre tout le plus semblable possible pour essayer de voir des re"
"lations ou modèles. Par exemple quand on réécrit notre notation uniquement en "
"double-croches on peut voir que notre notation devient une séquence agréable d"
"e notes et de silences."

#: A.07-bizet.md:83
msgid "![Habanera Riff 2](../images/tutorial/articles/A.07-bizet/habanera2.png)"
msgstr ""

#: A.07-bizet.md:85
#, fuzzy
msgid "Re-coding the Habanera"
msgstr "Re-programmer la Habanera"

#: A.07-bizet.md:87
#, fuzzy
msgid ""
"We're now in a position to start translating this bass line to Sonic Pi. Let's"
" encode these notes and rests in a ring:"
msgstr ""
"Nous sommes maintenant prêts a traduire cette ligne de basse dans Sonic Pi. En"
"codons ces notes et silences dans un anneau :"

#: A.07-bizet.md:90
#, no-wrap
msgid "(ring :d, :r, :r, :a, :f5, :r, :a, :r)"
msgstr "(ring :d, :r, :r, :a, :f5, :r, :a, :r)"

#: A.07-bizet.md:94
#, fuzzy
msgid "Let's see what this sounds like. Throw it in a live loop and tick through it:"
msgstr ""
"Voyons ce que ça donne. Jetons ça dans une boucle interactive et parcourons-là"
" :"

#: A.07-bizet.md:97
#, no-wrap
msgid ""
"live_loop :habanera do\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :habanera do\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end"

#: A.07-bizet.md:104
#, fuzzy
msgid ""
"Fabulous, that instantly recognisable riff springs to life through your speake"
"rs. It took a lot of effort to get here, but it was worth it - high five!"
msgstr ""
"Fabuleux, cette mélodie qu'on reconnait immédiatement prend vie dans vos haut-"
"parleurs. On a fait des efforts pour en arriver là, mais ça valait la peine, b"
"ravo !"

#: A.07-bizet.md:108
#, fuzzy
msgid "Moody Synths"
msgstr "Synthés de mauvaise humeur"

#: A.07-bizet.md:110
#, fuzzy
msgid ""
"Now we have the bass line, let's re-create some of the ambience of the operati"
"c scene. One synth to try out is `:blade` which is a moody 80s style synth lea"
"d. Let's try it with the starting note `:d` passed through a slicer and reverb"
":"
msgstr ""
"Maintenant qu'on a la ligne de basse, essayons de re-créer une partie de l'amb"
"iance de la scène d'opéra. Un synthé à essayer est `:blade` qui est un synthé "
"style années 80. Essayons le avec la note de départ `:d` passée dans un slicer"
" et de la reverb :"

#: A.07-bizet.md:115
#, no-wrap
msgid ""
"live_loop :habanera do\n"
"  use_synth :fm\n"
"  use_transpose -12\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end\n"
"with_fx :reverb do\n"
"  live_loop :space_light do\n"
"    with_fx :slicer, phase: 0.25 do\n"
"      synth :blade, note: :d, release: 8, cutoff: 100, amp: 2\n"
"    end\n"
"    sleep 8\n"
"  end\n"
"end"
msgstr ""
"live_loop :habanera do\n"
"  use_synth :fm\n"
"  use_transpose -12\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end\n"
"with_fx :reverb do\n"
"  live_loop :space_light do\n"
"    with_fx :slicer, phase: 0.25 do\n"
"      synth :blade, note: :d, release: 8, cutoff: 100, amp: 2\n"
"    end\n"
"    sleep 8\n"
"  end\n"
"end"

#: A.07-bizet.md:133
#, fuzzy
msgid ""
"Now, try the other notes in the bass line: `:a` and `:f5`. Remember, you don't"
" need to hit stop, just modify the code whilst the music is playing and hit ru"
"n again. Also, try different values for the slicer's `phase:` opt such as `0.5"
"`, `0.75` and `1`."
msgstr ""
"Maintenant essayez les autres notes de la ligne de basse : `:a` et `:f5`. Souv"
"enez-vous que vous n'avez pas besoin de cliquer sur 'Stop', vous pouvez juste "
"modifier le code pendant que la musique tourne et ensuite cliquer sur 'Run' à "
"nouveau. Aussi essayez différentes valeurs pour l'option `phase:` du slicer co"
"mme `0.5`, `0.75` et `1`."

#: A.07-bizet.md:140
#, fuzzy
msgid ""
"Finally, let's combine all the ideas so far into a new remix of the Habanera. "
"You might notice that I've included another part of the bass line as a comment"
". Once you've typed it all into a fresh buffer hit Run to hear the composition"
". Now, without hitting stop, *uncomment* the second line by removing the `#` a"
"nd hit run again - how marvellous is that! Now, start mashing it around yourse"
"lf and have fun."
msgstr ""
"Enfin, combinons toutes les idées vues jusqu'ici dans un nouveau remix de la H"
"abanera. Vous remarquerez peut-être que j'ai inclus une autre partie de la lig"
"ne de basse en commentaire. Quand vous aurez tout tapé dans un buffer de libre"
" cliquez sur 'Run' pour entendre la composition. Maintenant, sans cliquer sur "
"'Stop', *décommentez* la seconde ligne en enlevant le `#` et cliquez sur 'Run'"
" à nouveau : c'est merveilleux, non ? Maintenant amusez-vous à le modifier vou"
"s-même."

#: A.07-bizet.md:147
#, no-wrap
msgid ""
"use_debug false\n"
"bizet_bass = (ring :d, :r, :r, :a, :f5, :r, :a, :r)\n"
"#bizet_bass = (ring :d, :r, :r, :Bb, :g5, :r, :Bb, :r)\n"
" \n"
"with_fx :reverb, room: 1, mix: 0.3 do\n"
"  live_loop :bizet do\n"
"    with_fx :slicer, phase: 0.125 do\n"
"      synth :blade, note: :d4, release: 8,\n"
"        cutoff: 100, amp: 1.5\n"
"    end\n"
"    16.times do\n"
"      tick\n"
"      play bizet_bass.look, release: 0.1\n"
"      play bizet_bass.look - 12, release: 0.3\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end\n"
" \n"
"live_loop :ind do\n"
"  sample :loop_industrial, beat_stretch: 1,\n"
"    cutoff: 100, rate: 1\n"
"  sleep 1\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  sample :bd_haus, cutoff: 110\n"
"  synth :beep, note: 49, attack: 0,\n"
"    release: 0.1\n"
"  sleep 0.5\n"
"end"
msgstr ""
"use_debug false\n"
"bizet_bass = (ring :d, :r, :r, :a, :f5, :r, :a, :r)\n"
"#bizet_bass = (ring :d, :r, :r, :Bb, :g5, :r, :Bb, :r)\n"
" \n"
"with_fx :reverb, room: 1, mix: 0.3 do\n"
"  live_loop :bizet do\n"
"    with_fx :slicer, phase: 0.125 do\n"
"      synth :blade, note: :d4, release: 8,\n"
"        cutoff: 100, amp: 1.5\n"
"    end\n"
"    16.times do\n"
"      tick\n"
"      play bizet_bass.look, release: 0.1\n"
"      play bizet_bass.look - 12, release: 0.3\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end\n"
" \n"
"live_loop :ind do\n"
"  sample :loop_industrial, beat_stretch: 1,\n"
"    cutoff: 100, rate: 1\n"
"  sleep 1\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  sample :bd_haus, cutoff: 110\n"
"  synth :beep, note: 49, attack: 0,\n"
"    release: 0.1\n"
"  sleep 0.5\n"
"end"

#: A.08-minecraft-vj.md:1
#, fuzzy
msgid "A.8 Become a Minecraft VJ"
msgstr "A.8 Devenez un VJ Minecraft"

#: A.08-minecraft-vj.md:3
#, fuzzy
msgid "Become a Minecraft VJ"
msgstr "Devenez un VJ Minecraft"

#: A.08-minecraft-vj.md:5
msgid ""
"![Screen 0](../images/tutorial/articles/A.08-minecraft-vj/minecraft-vj-0-small"
".png)"
msgstr ""

#: A.08-minecraft-vj.md:7
#, fuzzy
msgid ""
"Everyone has played Minecraft. You will all have built amazing structures, des"
"igned cunning traps and even created elaborate cart lines controlled by redsto"
"ne switches. How many of you have performed with Minecraft? We bet you didn't "
"know that you could use Minecraft to create amazing visuals just like a profes"
"sional VJ."
msgstr ""
"Tout le monde a joué à Minecraft. Vous aurez tous construit des structures inc"
"royables, conçu des pièges rusés et même créé des lignes de chariots raffinées"
" contrôlées par des interrupteurs de pierre rouge. Mais qui parmi vous s'est p"
"roduit avec Minecraft ? On parie que vous ne saviez pas que vous pouvez utilis"
"er Minecraft pour créer des animations visuelles incroyables tout comme un VJ "
"professionnel."

#: A.08-minecraft-vj.md:13
#, fuzzy
msgid ""
"If your only way of modifying Minecraft was with the mouse, you'd have a tough"
" time changing things fast enough. Luckily for you your Raspberry Pi comes wit"
"h a version of Minecraft that can be controlled with code. It also comes with "
"an app called Sonic Pi which makes coding Minecraft not only easy but also inc"
"redibly fun."
msgstr ""
"Si votre seule possibilité de modifier Minecraft était d'utiliser la souris, v"
"ous auriez du mal à changer les choses suffisamment vite. Heureusement pour vo"
"us votre Raspberry Pi a une version de Minecraft qui peut être contrôlée avec "
"du code. Il contient aussi une application nommée Sonic Pi qui rend la program"
"mation Minecraft non seulement facile mais aussi incroyablement amusante."

#: A.08-minecraft-vj.md:19
#, fuzzy
msgid ""
"In today's article we'll be showing you some of the tips and tricks that we've"
" used to create performances in night clubs and music venues around the world."
msgstr ""
"Dans l'article d'aujourd'hui nous allons vous montrer quelques trucs et astuce"
"s que nous avons utilisés pour créer des spectacles dans des boîtes de nuit et"
" salles de concert autour du monde."

#: A.08-minecraft-vj.md:23
#, fuzzy
msgid "Let's get started..."
msgstr "Commençons..."

#: A.08-minecraft-vj.md:25
#, fuzzy
msgid "Getting Started"
msgstr "Commencer"

#: A.08-minecraft-vj.md:27
#, fuzzy
msgid ""
"Let's start with a simple warm up exercise to refresh ourselves with the basic"
"s. First up, crack open your Raspberry Pi and then fire up both Minecraft and "
"Sonic Pi. In Minecraft, create a new world, and in Sonic Pi choose a fresh buf"
"fer and write in this code:"
msgstr ""
"Commençons avec un simple exercice d'échauffement pour nous rappeler les bases"
". Commencez par allumer votre Raspberry Pi et lancer Minecraft et Sonic Pi. Da"
"ns Minecraft, créez un nouveau monde, et dans Sonic Pi choisissez un buffer de"
" libre et écrivez-y ce code :"

#: A.08-minecraft-vj.md:32
#, no-wrap
msgid "mc_message \"Let's get started...\""
msgstr "mc_message \"Let's get started...\""

#: A.08-minecraft-vj.md:36
#, fuzzy
msgid ""
"Hit the Run button and you'll see the message over in the Minecraft window. OK"
", we're ready to start, let's have some fun......"
msgstr ""
"Cliquez sur le bouton 'Run' et vous verrez le message dans la fenêtre Minecraf"
"t. OK, on est prêt à démarrer, on va s'amuser..."

#: A.08-minecraft-vj.md:39
#, fuzzy
msgid "Sand Storms"
msgstr "Tempêtes de sable"

#: A.08-minecraft-vj.md:41
#, fuzzy
msgid ""
"When we're using Minecraft to create visuals we try and think about what will "
"both look interesting and also be easy to generate from code. One nice trick i"
"s to create a sand storm by dropping sand blocks from the sky. For that all we"
" need are a few basic fns:"
msgstr ""
"Quand on utilise Minecraft pour créer des visuels on essaie de penser à des ch"
"oses qui auront l'air intéressantes et qui seront aussi faciles à générer avec"
" du code. Un truc sympa est de créer une tempête de sable en laissant tomber d"
"es bloc de sable du ciel. Pour cela on a juste besoin de quelques fonctions si"
"mples :"

#: A.08-minecraft-vj.md:46
#, fuzzy
msgid "`sleep` - for inserting a delay between actions"
msgstr "`sleep`: pour insérer un délai entre des actions"

#: A.08-minecraft-vj.md:47
#, fuzzy
msgid "`mc_location` - to find our current location"
msgstr "`mc_location`: pour trouver notre emplacement courant"

#: A.08-minecraft-vj.md:48
#, fuzzy
msgid "`mc_set_block`- to place sand blocks at a specific location"
msgstr "`mc_set_block`: pour positionner des blocs de sable à un endroit particulier"

#: A.08-minecraft-vj.md:49
#, fuzzy
msgid "`rrand` - to allow us to generate random values within a range"
msgstr ""
"`rrand`: pour nous permetre de générer des valeurs aléatoires dans un interval"
"le"

#: A.08-minecraft-vj.md:50
#, fuzzy
msgid "`live_loop` - to allow us to continually make it rain sand"
msgstr "`live_loop`: pour nous permettre de faire pleuvoir du sable en continu"

#: A.08-minecraft-vj.md:52
#, fuzzy
msgid ""
"If you're unfamiliar with any of the built-in fns such as `rrand`, just type t"
"he word into your buffer, click on it and then hit the keyboard combo `Control"
"-i` to bring up the built-in documentation. Alternatively you can navigate to "
"the *lang* tab in the Help system and then look up the fns directly along with"
" all the other exciting things you can do."
msgstr ""
"Si vous ne connaissez pas une des ces fonctions comme `rrand`, vous pouvez jus"
"te taper le mot dans votre buffer, cliquer dessus, puis taper `Control-i` sur "
"le clavier pour ouvrir la documentation. Vous pouvez aussi aller dans l'onglet"
" *lang* du système d'aide puis y chercher directement les fonctions et toutes "
"sortes d'autres choses excitantes que vous pouvez faire."

#: A.08-minecraft-vj.md:58
#, fuzzy
msgid ""
"Let's make it rain a little first before unleashing the full power of the stor"
"m. Grab your current location and use it to create a few sand blocks up in the"
" sky nearby:"
msgstr ""
"Commençons par faire tomber un peu de pluie avant de laisser la tempête complè"
"te éclater. Récupérez votre emplacement courant et utilisez-la pour créer quel"
"ques blocs de sable dans le ciel pas loin :"

#: A.08-minecraft-vj.md:62
#, no-wrap
msgid ""
"x, y, z = mc_location\n"
"mc_set_block :sand, x, y + 20, z + 5\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 6\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 7\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 8"
msgstr ""
"x, y, z = mc_location\n"
"mc_set_block :sand, x, y + 20, z + 5\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 6\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 7\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 8"

#: A.08-minecraft-vj.md:73
#, fuzzy
msgid ""
"When you hit Run, you might have to look around a little as the blocks may sta"
"rt falling down behind you depending on which direction you're currently facin"
"g. Don't worry, if you missed them just hit Run again for another batch of san"
"d rain - just make sure you're looking the right way!"
msgstr ""
"Après avoir cliqué sur 'Run', vous devrez peut-être un peu regarder autour de "
"vous car les blocs peuvent commencer par tomber derrière vous, suivant dans qu"
"elle direction vous êtes pour le moment. N'ayez pas peur, si vous les avez rat"
"é, cliquez à nouveau sur 'Run' pour créer encore un peu de pluie de sable, ass"
"urez-vous juste de regarder dans la bonne direction."

#: A.08-minecraft-vj.md:79
#, fuzzy
msgid ""
"Let's quickly review what's going on here. On the first line we grabbed Steve'"
"s location as coordinates with the fn `mc_location` and placed them into the v"
"ars `x`, `y`, and `z`. Then on the next lines we used the `mc_set_block` fn to"
" place some sand at the same coordinates as Steve but with some modifications."
" We chose the same x coordinate, a y coordinate 20 blocks higher and then succ"
"essively larger z coordinates so the sand dropped in a line away from Steve."
msgstr ""
"Parcourons rapidement ce qui se passe ici. Sur la première ligne nous avons ré"
"cupéré l'emplacement Steve en coordonnées avec la fonction `mc_location` et le"
"s avons placées dans les variables `x`, `y` et `z`. Puis sur les lignes suivan"
"tes nous avons utilisé la fonction `mc_set_block` pour placer un peu de sable "
"aux mêmes coordonnées que Steve mais avec quelques modifications. On a utilisé"
" la même coordonnée x, une coordonnée y 20 blocs plus haut et des coordonnées "
"z successivement plus larges pour que le sable tombe dans une ligne en s'éloig"
"nant de Steve."

#: A.08-minecraft-vj.md:87
#, fuzzy
msgid ""
"Why don't you take that code and start playing around with it yourself? Try ad"
"ding more lines, changing the sleep times, try mixing `:sand` with `:gravel` a"
"nd choose different coordinates. Just experiment and have fun!"
msgstr ""
"Et si vous preniez ce code et commenciez à jouer avec ? Essayez d'ajouter plus"
" de lignes, de changer la durée d'attente, essayez de mélanger du `:sand` avec"
" du `:gravel` et choisissez différentes coordonnées. Expérimentez et amusez-vo"
"us !"

#: A.08-minecraft-vj.md:91
#, fuzzy
msgid "Live Loops Unleashed"
msgstr "Boucles interactives déchaînées"

#: A.08-minecraft-vj.md:93
#, fuzzy
msgid ""
"OK, it's time to get the storm raging by unleashing the full power of the `liv"
"e_loop` - Sonic Pi's magical ability which unleashes the full power of live co"
"ding - changing code on-the-fly whilst it's running!"
msgstr ""
"OK, il est l'heure de lancer la tempête en déchaînant la puissance complète de"
" la `live_loop`: la capacité magique de Sonic Pi qui montre la puissance entiè"
"re de la programmation interactive : changer le code à la volée pendant qu'il "
"est en train de s'exécuter !"

#: A.08-minecraft-vj.md:97
#, no-wrap
msgid ""
"live_loop :sand_storm do\n"
"  x, y, z = mc_location\n"
"  xd = rrand(-10, 10)\n"
"  zd = rrand(-10, 10)\n"
"  co = rrand(70, 130)\n"
"  synth :cnoise, attack: 0, release: 0.125, cutoff: co\n"
"  mc_set_block :sand, x + xd, y+20, z+zd\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :sand_storm do\n"
"  x, y, z = mc_location\n"
"  xd = rrand(-10, 10)\n"
"  zd = rrand(-10, 10)\n"
"  co = rrand(70, 130)\n"
"  synth :cnoise, attack: 0, release: 0.125, cutoff: co\n"
"  mc_set_block :sand, x + xd, y+20, z+zd\n"
"  sleep 0.125\n"
"end"

#: A.08-minecraft-vj.md:109
#, fuzzy
msgid ""
"What fun! We're looping round pretty quickly (8 times a second) and during eac"
"h loop we're finding Steve's location like before but then generating 3 random"
" values:"
msgstr ""
"Qu'est-ce que c'est amusant ! On boucle assez vite (8 fois par seconde) et pen"
"dant chaque boucle on trouve l'emplacement de Steve comme avant mais on génère"
" ensuite trois valeurs aléatoires :"

#: A.08-minecraft-vj.md:113
#, fuzzy
msgid "`xd` - the difference for x which will be between -10 and 10"
msgstr "`xd`: la différence pour x qui sera entre -10 et 10"

#: A.08-minecraft-vj.md:114
#, fuzzy
msgid "`zd` - the difference for z also between -10 and 10"
msgstr "`zd`: la différence pour z, aussi entre -10 et 10"

#: A.08-minecraft-vj.md:115
#, fuzzy
msgid "`co` - a cutoff value for the low pass filter between 70 and 130"
msgstr "`co`: une valeur de coupure pour le filtre passe-bas, entre 70 et 130"

#: A.08-minecraft-vj.md:117
#, fuzzy
msgid ""
"We then use those random values in the fns `synth` and `mc_set_block` giving u"
"s sand falling in random locations around Steve along with a percussive rain-l"
"ike sound from the `:cnoise` synth."
msgstr ""
"On utilise ensuite ces valeurs aléatoires dans les fonctions `synth` et `mc_se"
"t_block` ce qui nous donne du sable qui tombe dans des endroits aléatoires aut"
"our de Steve ainsi qu'un son percussif semblable à de la pluie, joué le synthé"
" `:cnoise`."

#: A.08-minecraft-vj.md:121
#, fuzzy
msgid ""
"For those of you new to live loops - this is where the fun really starts with "
"Sonic Pi. Whilst the code is running and the sand is pouring down, try changin"
"g one of the values, perhaps the sleep time to `0.25` or the `:sand` block typ"
"e to `:gravel`. Now hit run *again*. Hey Presto! Things changed without the co"
"de stopping. This is your gateway to performing like a real VJ. Keep practisin"
"g and changing things around. How different can you make the visuals without s"
"topping the code?"
msgstr ""
"Pour ceux d'entre vous qui ne connaissaient pas les boucles interactives : c'e"
"st là qu'on commence vraiment à s'amuser avec Sonic Pi. Pendant que le code to"
"urne et que le sable pleut, essayez de changer une des valeurs, peut-être la v"
"aleur d'attente à `0.25` ou le type de bloc `:sand` en `:gravel`. Ensuite cliq"
"uez sur 'Run' à nouveau. Et voilà ! Les choses changent sans que le code ne s'"
"arrête. C'est votre passerelle pour vous produire comme un vrai VJ. Continuez "
"à vous exercer à changer des choses. Jusqu'où arrivez-vous à modifier les visu"
"els sans arrêter le code ?"

#: A.08-minecraft-vj.md:129
#, fuzzy
msgid "Epic Block Patterns"
msgstr "Des formes de blocs épiques"

#: A.08-minecraft-vj.md:131
msgid ""
"![Screen 1](../images/tutorial/articles/A.08-minecraft-vj/minecraft-vj-1-small"
".png)"
msgstr ""

#: A.08-minecraft-vj.md:133
#, fuzzy
msgid ""
"Finally, another great way of generating interesting visuals is to generate hu"
"ge patterned walls to fly towards and close by. For this effect we'll need to "
"move from placing the blocks randomly to placing them in an ordered manner. We"
" can do this by nesting two sets of iteration (hit the Help button and navigat"
"e to section 5.2 of the tutorial \"Iteration and Loops\" for more background on "
"iteration). The funny `|xd|` after the do means that `xd` will be set for each"
" value of the iteration. So the first time it will be 0, then 1, then 2... etc"
". By nesting two lots of iteration together like this we can generate all the "
"coordinates for a square. We can then randomly choose block types from a ring "
"of blocks for an interesting effect:"
msgstr ""
"Enfin une autre super façon de générer des visuels intéressants est de générer"
" des énormes murs de motifs vers lesquels voler. Pour cet effet nous allons de"
"voir passer d'un placement aléatoire de blocs à un placement de manière ordonn"
"ée. On peut faire cela en imbriquant deux itérations (cliquez sur le bouton 'A"
"ide' et allez dans la section 5.2 du tutoriel \"Itération et boucles\" pour plus"
" d'informations sur l'itération). L'étrange `|xd|` après le `do` veut dire que"
" `xd` prendra une valeur à chaque boucle de l'itération. La première fois il v"
"audra `0`, puis `1`, puis `2`, etc. En imbriquant deux itérations comme cela o"
"n peut générer toutes les coordonnées d'un carré. On peut ensuite choisir aléa"
"toirement des types de blocs d'un anneau de blocs pour obtenir un effet intére"
"ssant :"

#: A.08-minecraft-vj.md:145
#, no-wrap
msgid ""
"x, y, z = mc_location\n"
"bs = (ring :gold, :diamond, :glass)\n"
"10.times do |xd|\n"
"  10.times do |yd|\n"
"    mc_set_block bs.choose, x + xd, y + yd, z\n"
"  end\n"
"end"
msgstr ""
"x, y, z = mc_location\n"
"bs = (ring :gold, :diamond, :glass)\n"
"10.times do |xd|\n"
"  10.times do |yd|\n"
"    mc_set_block bs.choose, x + xd, y + yd, z\n"
"  end\n"
"end"

#: A.08-minecraft-vj.md:155
#, fuzzy
msgid ""
"Pretty neat. Whilst we're having fun here, try changing `bs.choose` to `bs.tic"
"k` to move from a random pattern to a more regular one. Try changing the block"
" types and the more adventurous of you might want to try sticking this within "
"a `live_loop` so that the patterns keep changing automatically."
msgstr ""
"Pas mal. Pendant qu'on s'amuse ici, essayez de changer `bs.choose` en `bs.tick"
"` pour passer d'un motif aléatoire à un motif plus régulier. Essayez de change"
"r les types de blocs et les plus aventureux parmi vous voudrons peut-être mett"
"re ce code dans une `live_loop` pour que les modifs continuent à changer autom"
"atiquement."

#: A.08-minecraft-vj.md:161
#, fuzzy
msgid ""
"Now, for the VJ finale - change the two `10.times` to `100.times` and hit Run."
" Kaboom! A Huge gigantic wall of randomly placed bricks. Imagine how long it w"
"ould take you to build that manually with your mouse! Double-tap space to ente"
"r fly-mode and start swooping by for some great visual effects. Don't stop her"
"e though - use your imagination to conjure up some cool ideas and then use the"
" coding power of Sonic Pi to make it real. When you've practised enough dim th"
"e lights and put on a VJ show for your friends!"
msgstr ""
"Enfin, pour la fin du set du VJ, changez les deux `10.times` en `100.times` et"
" cliquez sur 'Run'. Boum ! Un énorme mur géant de briques aléatoires. Imaginez"
" combien de temps ça vous aurait pris de construire ça avec votre souris ! Dou"
"ble-tapez la touche Espace pour entrer en mode volant et commencez à planer po"
"ur obtenir de super effets visuels. Ne vous arrêtez pas là, utilisez votre ima"
"gination pour trouver des idées sympa et utilisez ensuite la puissance de prog"
"rammation de Sonic Pi pour le réaliser. Quand vous vous serez suffisamment exe"
"rcés, baissez la lumière et donnez un spectacle de VJ pour vos amis !"

#: A.09-randomisation.md:1
#, fuzzy
msgid "A.9 Randomisation"
msgstr "A.9 L'aléatoire"

#: A.09-randomisation.md:3
#, fuzzy
msgid "Surfing Random Streams"
msgstr "Surfer sur des flux aléatoires"

#: A.09-randomisation.md:5
#, fuzzy
msgid ""
"Back in episode 4 of this tutorial series we took a brief look at randomisatio"
"n whilst coding up some sizzling synth riffs. Given that randomisation is such"
" an important part of my live coding DJ sets I thought it would be useful to c"
"over the fundamentals in much greater detail. So, get your lucky hat on and le"
"t's surf some random streams!"
msgstr ""
"Dans le quatrième épisode de cette série de tutoriels nous avons jeté un oeil "
"brièvement à l'aléatoire en codant des riffs grésillants de synthé. Vu comme l"
"'aléatoire est une partie très importante de mes performances de live coding j"
"'ai pensé qu'il serait utile d'en couvrir les bases plus en détail. Mettez vot"
"re casquette et surfons sur des flux aléatoires !"

#: A.09-randomisation.md:11
#, fuzzy
msgid "There is no random"
msgstr "Il n'y a pas d'aléatoire"

#: A.09-randomisation.md:13
#, fuzzy
msgid ""
"The first thing to learn which might really surprise you when playing with Son"
"ic Pi's randomisation functions is that they're not actually really random. Wh"
"at does this actually mean? Well, let's try a couple of tests. First, imagine "
"a number in your head between 0 and 1. Keep it there and don't tell me. Now le"
"t me guess... was it `0.321567`? No? Bah, I'm clearly no good at this. Let me "
"have another go, but let's ask Sonic Pi to choose a number this time. Fire up "
"Sonic Pi v2.7+ and ask it for a random number but again don't tell me:"
msgstr ""
"La première chose à apprendre qui pourrait vraiment vous surprendre en jouant "
"avec les fonctions aléatoires de Sonic Pi c'est qu'elles ne sont en fait pas v"
"raiment aléatoires. Qu'est-ce que cela signifie ? Eh bien, faisons quelques es"
"sais. Commencez par imaginer un nombre dans votre tête entre 0 et 1. Gardez-le"
" en tête et ne me le dites pas. Maintenant, laissez-moi deviner... est-ce que "
"c'était `0.321567` ? Non ? Bah, je ne suis clairement pas bon à ce jeu. Essayo"
"ns encore une fois, mais demandons à Sonic Pi de choisir un nombre cette fois."
" Lancez Sonic Pi version 2.7 ou plus et demandez lui un nombre aléatoire mais "
"de nouveau ne me dites pas le résultat."

#: A.09-randomisation.md:22
#, no-wrap
msgid "print rand"
msgstr "print rand"

#: A.09-randomisation.md:26
#, fuzzy
msgid ""
"Now for the reveal... was it `0.75006103515625`? Yes! Ha, I can see you're a l"
"ittle sceptical. Perhaps it was just a lucky guess. Let's try again. Press the"
" Run button again and see what we get... What? `0.75006103515625` again? This "
"clearly can't be random! You're right, it's not."
msgstr ""
"Et maintenant pour le truc... est-ce que c'était `0.75006103515625` ? Oui ! Ha"
", je vois que vous êtes un peu sceptique. C'était peut-être juste de la chance"
". Essayons encore. Cliquez sur 'Run' à nouveau et regardons ce qu'on obtient.."
". Quoi ? Encore `0.75006103515625` ? Ca ne peut clairement pas être aléatoire "
"! Vous avez raison, ça ne l'est pas."

#: A.09-randomisation.md:32
#, fuzzy
msgid ""
"What's going on here? The fancy computer science word here is determinism. Thi"
"s just means that nothing is by chance and everything is destined to be. Your "
"version of Sonic Pi is destined to always return `0.75006103515625` in the pro"
"gram above. This might sound pretty useless, but let me assure you that it's o"
"ne of the most powerful parts of Sonic Pi. If you stick at it you'll learn how"
" to rely on the deterministic nature of Sonic Pi's randomisation as a fundamen"
"tal building block for your compositions and live coded DJ sets."
msgstr ""
"Qu'est-ce qui se passe ici ? Le mot savant d'informatique pour ceci est le dét"
"erminisme. Cela veut juste dire que rien n'a lieu par hasard et que tout a sa "
"destinée. Votre version de Sonic Pi a le destin de toujours retourner `0.75006"
"103515625` dans le programme ci-dessus. Cela peut sembler assez inutile, mais "
"laissez moi vous assurer que c'est une des parties les plus puissantes de Soni"
"c Pi. Si vous persévérez vous apprendrez comment compter sur la nature détermi"
"nistique de l'aléatoire dans Sonic Pi comme un bloc de construction fondamenta"
"l pour vos compositions et performances de live coding."

#: A.09-randomisation.md:41
#, fuzzy
msgid "A Random Melody"
msgstr "Une mélodie aléatoire"

#: A.09-randomisation.md:43
#, fuzzy
msgid ""
"When Sonic Pi boots it actually loads into memory a sequence of 441,000 pre-ge"
"nerated random values. When you call a random function such as `rand` or `rran"
"d`, this random stream is used to generate your result. Each call to a random "
"function consumes a value from this stream. Therefore the 10th call to a rando"
"m function will use the 10th value from the stream. Also, every time you press"
" the Run button, the stream is reset for that run. This is why I could predict"
" the result to `rand` and why the 'random' melody was the same every time. Eve"
"rybody's version of Sonic Pi uses the exact same random stream which is very i"
"mportant when we start sharing our pieces with each other."
msgstr ""
"Quand Sonic Pi démarre il charge en fait en mémoire une séquence de 441 000 va"
"leurs aléatoires pré-générées. Quand vous appelez une fonction aléatoire comme"
" `rand` ou `rrand`, ce flux aléatoire est utilisé pour générer votre résultat."
" Chaque appel à une fonction aléatoire consomme une valeur de ce flux. Ainsi l"
"e dixième appel à une fonction aléatoire utilisera la dixième valeur du flux. "
"Aussi, chaque fois que vous cliquez sur le bouton 'Run', le flux est réinitial"
"isé pour cette exécution. C'est pour cela que j'ai pu prédire le résultat de `"
"rand` et pourquoi la mélodie 'aléatoire' était la même à chaque fois. La versi"
"on de Sonic Pi de chacun utilise exactement le même flux aléatoire ce qui est "
"très important quand on commence à partager nos morceaux."

#: A.09-randomisation.md:54
#, fuzzy
msgid "Let's use this knowledge to generate a repeatable random melody:"
msgstr "Utilisons cette connaissance pour générer une mélodie aléatoire répétable :"

#: A.09-randomisation.md:56
#, no-wrap
msgid ""
"8.times do\n"
" play rrand_i(50, 95)\n"
" sleep 0.125\n"
"end"
msgstr ""
"8.times do\n"
" play rrand_i(50, 95)\n"
" sleep 0.125\n"
"end"

#: A.09-randomisation.md:63
#, fuzzy
msgid ""
"Type this into a spare buffer and hit Run. You'll hear a melody consisting of "
"'random' notes between 50 and 95. When it's finished, hit Run again to hear ex"
"actly the same melody again."
msgstr ""
"Tapez ceci dans un buffer de libre et cliquez sur 'Run'. Vous entendrez une mé"
"lodie de notes aléatoires entre 50 et 95. Quand elle aura fini, cliquez sur 'R"
"un' à nouveau pour entendre exactement la même mélodie à nouveau."

#: A.09-randomisation.md:67
#, fuzzy
msgid "Handy Randomisation Functions"
msgstr "Des fonctions aléatoires pratiques"

#: A.09-randomisation.md:69
#, fuzzy
msgid ""
"Sonic Pi comes with a number of useful functions for working with the random s"
"tream. Here's a list of some of the most useful:"
msgstr ""
"Sonic Pi contient un certain nombre de fonctions utiles pour travailler avec l"
"e flux aléatoire. Voici une liste des plus utiles :"

#: A.09-randomisation.md:72
#, fuzzy
msgid "`rand` - Simply returns the next value in the random stream"
msgstr "`rand`: retourne simplement la prochaine valeur dans le flux aléatoire"

#: A.09-randomisation.md:73
#, fuzzy
msgid "`rrand` - Returns a random value within a range"
msgstr "`rrand`: retourne une valeur aléatoire dans un intervalle"

#: A.09-randomisation.md:74
#, fuzzy
msgid "`rrand_i` - Returns a random whole number within a range"
msgstr "`rrand_i`: retourne une valeur entière aléatoire dans un intervalle"

#: A.09-randomisation.md:75
#, fuzzy
msgid "`one_in` - Returns true or false with the given probability"
msgstr "`one_in`: retourne vrai ou faux pour une probabilité donnée"

#: A.09-randomisation.md:76
#, fuzzy
msgid "`dice` - Imitates rolling a dice and returns a value between 1 and 6"
msgstr "`dice`: imite un jet de dé et retourne une valeur entre 1 et 6"

#: A.09-randomisation.md:77
#, fuzzy
msgid "`choose` - Chooses a random value from a list"
msgstr "`choose`: choisit une valeur aléatoire dans une liste"

#: A.09-randomisation.md:79
#, fuzzy
msgid ""
"Check out their documentation in the Help system for detailed information and "
"examples."
msgstr ""
"Regardez leur documentation dans le système d'aide pour des informations détai"
"llées et des exemples."

#: A.09-randomisation.md:82
#, fuzzy
msgid "Resetting the Stream"
msgstr "Réinitialiser le flux"

#: A.09-randomisation.md:84
#, fuzzy
msgid ""
"Whilst the ability to repeat a sequence of chosen notes is essential to allow "
"you to replay a riff on the dance floor, it might not be exactly the riff you "
"want. Wouldn't it be great if we could try a number of different riffs and cho"
"ose the one we liked best? This is where the real magic starts."
msgstr ""
"Même si la capacité de répéter une séquence de notes choisies est essentielle "
"pour vous permettre de rejouer une mélodie sur la piste de danse, ça pourrait "
"ne pas être exactement la mélodie que vous souhaitez. Ne serait-ce pas génial "
"si on pouvait essayez différentes mélodies et choisir celle qu'on préfère ? C'"
"est ici que la vraie magie commence."

#: A.09-randomisation.md:90
#, fuzzy
msgid ""
"We can manually set the stream with the fn `use_random_seed`. In Computer Scie"
"nce, a random seed is the starting point from which a new stream of random val"
"ues can sprout out and blossom. Let's try it:"
msgstr ""
"On peut régler le flux manuellement avec la fonction `use_random_seed`. En inf"
"ormatique, une graine aléatoire est le point de départ à partir duquel un nouv"
"eau flux de valeurs aléatoires peut fleurir. Essayons-le :"

#: A.09-randomisation.md:94
#, no-wrap
msgid ""
"use_random_seed 0\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_random_seed 0\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"

#: A.09-randomisation.md:102
#, fuzzy
msgid ""
"Great, we get the first three notes of our random melody above: `84`, `83` and"
" `71`. However, we can now change the seed to something else. How about this:"
msgstr ""
"Super, on récupère les trois premières notes de notre mélodie aléatoire ci-des"
"sus : `84`, `83` et `71`. Cependant on peut maintenant changer la graine. Par "
"exemple :"

#: A.09-randomisation.md:106
#, no-wrap
msgid ""
"use_random_seed 1\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_random_seed 1\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"

#: A.09-randomisation.md:114
#, fuzzy
msgid ""
"Interesting, we get `83`, `71` and `61` . You might notice that the first two "
"numbers here are the same as the last two numbers before - this isn't a coinci"
"dence."
msgstr ""
"Intéressant, on obtient `83`, `71` et `61`. Vous avez peut-être remarqué que l"
"es deux premiers nombres ici sont les mêmes que les deux derniers nombres d'av"
"ant : ce n'est pas une coïncidence."

#: A.09-randomisation.md:118
#, fuzzy
msgid ""
"Remember that the random stream is just a giant list of 'pre-rolled' values. U"
"sing a random seed simply jumps us to a point in that list. Another way of thi"
"nking about it is to imagine a huge deck of pre-shuffled cards. Using a random"
" seed is cutting the deck at a particular point. The fabulous part of this is "
"that it's precisely this ability to jump around the random stream which gives "
"us huge power when making music."
msgstr ""
"Rappelez-vous que le flux aléatoire est juste une liste géante de valeurs pré-"
"choisies. Choisir une graine aléatoire nous déplace juste en un point de la li"
"ste. Une autre manière de voir ça est d'imaginer un énorme jeu de cartes pré-m"
"élangées. Utiliser une graine aléatoire, c'est couper le jeu en un point parti"
"culier. Ce qui est fabuleux avec ça c'est qu'on peut se déplacer dans le flux "
"aléatoire, ce qui nous donne un énorme pouvoir quand on fait de la musique."

#: A.09-randomisation.md:126
#, fuzzy
msgid ""
"Let's revisit our random melody of 8 notes with this new stream resetting powe"
"r, but let's also throw in a live loop so we can experiment live whilst it's p"
"laying:"
msgstr ""
"Revisitons notre mélodie aléatoire de huit notes avec cette nouvelle capacité "
"de réinitialiser le flux, et mettons là dans une boucle interactive pour pouvo"
"ir expérimenter pendant qu'elle joue :"

#: A.09-randomisation.md:130
#, no-wrap
msgid ""
"live_loop :random_riff do    \n"
"  use_random_seed 0\n"
"  8.times do\n"
"    play rrand_i(50, 95), release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :random_riff do    \n"
"  use_random_seed 0\n"
"  8.times do\n"
"    play rrand_i(50, 95), release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.09-randomisation.md:140
#, fuzzy
msgid ""
"Now, whilst it's still playing, change the seed value from `0` to something el"
"se. Try `100`, what about `999`. Try your own values, experiment and play arou"
"nd - see which seed generates the riff you like best."
msgstr ""
"Maintenant, pendant qu'elle est en train de jouer, changez la valeur de la gra"
"ine de `0` en quelque chose d'autre. Essayez `100`, ou pourquoi pas `999`. Ess"
"ayez vos propres valeurs, expérimentez et amusez-vous : voyez quelle graine gé"
"nère la mélodie que vous préférez."

#: A.09-randomisation.md:147
#, fuzzy
msgid ""
"This month's tutorial has been quite a technical dive into the workings of Son"
"ic Pi's randomisation functionality. Hopefully it has given you some insight i"
"nto how it works and how you can start using randomisation in a reliable way t"
"o create repeatable patterns within your music. It's important to stress that "
"you can use repeatable randomisation *anywhere* you want. For example, you can"
" randomise the amplitude of notes, the timing of the rhythm, the amount of rev"
"erb, the current synth, the mix of an FX, etc. etc. In the future we'll take a"
" close look at some of these applications, but for now let me leave you with a"
" short example."
msgstr ""
"Le tutoriel de ce mois a été un plongeon bien technique dans les entrailles de"
" la fonctionnalité aléatoire de Sonic Pi. J'espère que cela vous a montré un p"
"eu comment elle marche et comment vous pouvez commencer à utiliser de l'aléato"
"ire de manière fiable pour créer des motifs reproductibles dans votre musique."
" Il est important de souligner qu'on peut utiliser de l'aléatoire reproductibl"
"e *où* on veut. Par exemple, on peut rendre aléatoire l'amplitude des notes, l"
"e mix d'un effet, etc. Dans l'avenir nous regarderons de plus près certaines d"
"e ces applications, mais pour le moment je vais vous laisser avec un exemple c"
"ourt."

#: A.09-randomisation.md:157
#, fuzzy
msgid ""
"Type the following into a spare buffer, hit Run, and then start changing the s"
"eeds around, hit Run again (whilst it's still playing) and explore the differe"
"nt sounds, rhythms and melodies you can make. When you find a nice one, rememb"
"er the seed number so you can get back to it. Finally, when you've found a few"
" seeds you like, put on a live coded performance for your friends by simply sw"
"itching between your favourite seeds to create a full piece."
msgstr ""
"Tapez le code suivant dans un buffer disponible, cliquez sur 'Run' et commence"
"z à modifier les graines, cliquez sur 'Run' de nouveau (pendant que le code to"
"urne) et explorez les différents sons, rythmes et mélodies que vous pouvez cré"
"er. Quand vous en trouvez une qui sonne bien, notez la graine pour pouvoir y r"
"evenir plus tard. Enfin, quand vous aurez trouvé quelques graines qui vous pla"
"isent, donnez un concert de live coding à vos amis en changeant simplement ent"
"re vos graines préférées pour créer un morceau entier."

#: A.09-randomisation.md:165
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  use_random_seed 10300\n"
"  use_synth :prophet\n"
"  s = [0.125, 0.25, 0.5].choose\n"
"  8.times do\n"
"    r = [0.125, 0.25, 1, 2].choose\n"
"    n = (scale :e3, :minor).choose\n"
"    co = rrand(30, 100)\n"
"    play n, release: r, cutoff: co\n"
"    sleep s\n"
"  end\n"
"end\n"
"live_loop :drums do\n"
"  use_random_seed 2001\n"
"  16.times do\n"
"    r = rrand(0.5, 10)\n"
"    sample :drum_bass_hard, rate: r, amp: rand\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  use_random_seed 10300\n"
"  use_synth :prophet\n"
"  s = [0.125, 0.25, 0.5].choose\n"
"  8.times do\n"
"    r = [0.125, 0.25, 1, 2].choose\n"
"    n = (scale :e3, :minor).choose\n"
"    co = rrand(30, 100)\n"
"    play n, release: r, cutoff: co\n"
"    sleep s\n"
"  end\n"
"end\n"
"live_loop :drums do\n"
"  use_random_seed 2001\n"
"  16.times do\n"
"    r = rrand(0.5, 10)\n"
"    sample :drum_bass_hard, rate: r, amp: rand\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.10-controlling-your-sound.md:1
#, fuzzy
msgid "A.10 Control"
msgstr "A.10 Contrôle"

#: A.10-controlling-your-sound.md:3
#, fuzzy
msgid "Controlling Your Sound"
msgstr "Contrôler votre son"

#: A.10-controlling-your-sound.md:5
#, fuzzy
msgid ""
"So far during this series we've focussed on triggering sounds. We've discovere"
"d that we can trigger the many synths built into Sonic Pi with `play` or `synt"
"h` and how to trigger pre-recorded samples with `sample`. We've also looked at"
" how we can wrap these triggered sounds within studio FX such as reverb and di"
"stortion using the `with_fx` command. Combine this with Sonic Pi's incredibly "
"accurate timing system and you can produce a vast array of sounds, beats and r"
"iffs. However, once you've carefully selected a particular sound's options and"
" triggered it, there's no ability to mess with it whilst it's playing right? W"
"rong! Today you're going to learn something very powerful - how to control run"
"ning synths."
msgstr ""
"Jusqu'ici dans cette série nous nous sommes concentrés sur le déclenchement de"
" sons. Nous avons découvert qu'on pouvait déclencher les nombreux synthés prés"
"ents dans Sonic Pi avec `play` ou `synth` et comment déclencher des samples pr"
"é-enregistrés avec `sample`. Nous avons aussi vu comment on pouvait entourer c"
"es sons dans des effets studio tels que la reverb et la distorsion en utilisan"
"t la commande `with_fx`. En combinant cela avec le système de chronométrage in"
"croyablement précis de Sonic Pi on peut produire un vaste ensemble de sons, ry"
"thmes et mélodies. Cependant, une fois qu'on a soigneusement sélectionné les o"
"ptions d'un son en particulier et qu'on l'a déclenché, on ne peut plus le modi"
"fier pendant qu'il est joué, c'est ça ? Non ! Aujourd'hui vous allez apprendre"
" quelque chose de très puissant : comment contrôler des synthés qui sont en tr"
"ain d'être joués."

#: A.10-controlling-your-sound.md:17
#, fuzzy
msgid "A Basic Sound"
msgstr "Un son de base"

#: A.10-controlling-your-sound.md:19
#, fuzzy
msgid ""
"Let's create a nice simple sound. Fire up Sonic Pi and in a fresh buffer type "
"the following:"
msgstr ""
"Créons un simple son agréable. Lancez Sonic Pi et tapez le code suivant dans u"
"n buffer disponible :"

#: A.10-controlling-your-sound.md:22
#, no-wrap
msgid "synth :prophet, note: :e1, release: 8, cutoff: 100"
msgstr "synth :prophet, note: :e1, release: 8, cutoff: 100"

#: A.10-controlling-your-sound.md:26
#, fuzzy
msgid ""
"Now press the Run button at the top left to hear a lovely rumbling synth sound"
". Go ahead, press it again a few times to get a feel for it. OK, done? Let's s"
"tart controlling it!"
msgstr ""
"Maintenant cliquez sur le bouton 'Run' en haut à gauche pour entendre un beau "
"son de synthé grondant. Allez-y, cliquez à nouveau dessus quelques fois pour v"
"ous habituer. OK, fini? Commençons à le contrôler !"

#: A.10-controlling-your-sound.md:30
#, fuzzy
msgid "Synth Nodes"
msgstr "Noeuds de synthé"

#: A.10-controlling-your-sound.md:32
#, fuzzy
msgid ""
"A little known feature in Sonic Pi is that the fns `play`, `synth` and `sample"
"`, return something called a `SynthNode` which represents a running sound. You"
" can capture one of these `SynthNode`s using a standard variable and then **co"
"ntrol** it at a later point in time. For example, let's change the value of th"
"e `cutoff:` opt after 1 beat:"
msgstr ""
"Une fonctionnalité peu connue de Sonic Pi est que les fonctions `play`, `synth"
"` et `sample` retournent ce qu'on appelle un `SynthNode` qui représente un son"
" en train d'être joué. Vous pouvez capturer un de ces `SynthNode`s en utilisan"
"t une variable standard et le *contrôler* ensuite dans le futur. Par exemple, "
"changeons la valeur de l'option `cutoff:` après un battement :"

#: A.10-controlling-your-sound.md:38
#, no-wrap
msgid ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"control sn, cutoff: 130"
msgstr ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"control sn, cutoff: 130"

#: A.10-controlling-your-sound.md:44
#, fuzzy
msgid "Let's look at each line in turn:"
msgstr "Regardons chaque ligne une par une :"

#: A.10-controlling-your-sound.md:46
#, fuzzy
msgid ""
"Firstly we trigger the `:prophet` synth using the `synth` fn as normal. Howeve"
"r we also capture the result in a variable called `sn`. We could have called t"
"his variable something completely different such as `synth_node` or `jane` - t"
"he name doesn't matter. However, it's important to choose a name that's meanin"
"gful to you for your performances and for people reading your code. I chose `s"
"n` as it's a nice short mnemonic for synth node."
msgstr ""
"On commence par déclencher le synthé `:prophet` en utilisant la fonction `synt"
"h` habituelle. Cependant on capture aussi le résultat dans une variable nommée"
" `sn`. On aurait pu appeler cette variable complètement différemment comme par"
" exemple `synth_node` ou `jane`: le nom n'a pas d'importance. Enfin il est imp"
"ortant de choisir un nom qui a du sens pour vous pour vos performances et pour"
" les gens qui lisent votre code. J'ai choisi `sn` parce que c'est un bon petit"
" moyen mnémotechnique pour 'synth node'."

#: A.10-controlling-your-sound.md:54
#, fuzzy
msgid ""
"On line 2 we have a standard `sleep` command. This does nothing special - it j"
"ust asks the computer to wait for 1 beat before moving onto the next line."
msgstr ""
"A la ligne 2 on a une commande `sleep` standard. Ca ne fait rien de spécial : "
"ça demande juste à l'ordinateur d'attendre un battement avant d'avancer à la l"
"igne suivante."

#: A.10-controlling-your-sound.md:58
#, fuzzy
msgid ""
"Line 3 is where the control fun starts. Here, we use the `control` fn to tell "
"our running `SynthNode` to change the cutoff value to `130`. If you hit the **"
"Run** button, you'll hear the `:prophet` synth start playing as before, but af"
"ter 1 beat it will shift to sound a lot brighter."
msgstr ""
"C'est à la ligne 3 qu'on commence à s'amuser. Ici on utilise la fonction `cont"
"rol` pour dire à notre `SynthNode` courant de changer la valeur de coupure en "
"`130`. Si vous cliquez sur le bouton 'Run', vous entendrez le synthé `:prophet"
"` commencer à jouer comme avant, mais après un battement il changera et sonner"
"a beaucoup plus clair."

#: A.10-controlling-your-sound.md:63
#, fuzzy
msgid "Modulatable Options"
msgstr "\\*\\* Breakout Box Start \\*\\* Options modulables"

#: A.10-controlling-your-sound.md:65
#, fuzzy
msgid ""
"Most of Sonic Pi's synths and FX opts may be changed after being triggered. Ho"
"wever, this isn't the case for all of them. For example, the envelope opts `at"
"tack:`, `decay:`, `sustain:` and `release:` can only be set when triggering th"
"e synth. Figuring out which opts can and can't be changed is simple - just hea"
"d to the documentation for a given synth or FX and then scroll down to the ind"
"ividual option documentation and look for the phrases \"May be changed whilst p"
"laying\" or \"Can not be changed once set\". For example, the documentation for t"
"he `:beep` synth's `attack:` opt makes it clear that it's not possible to chan"
"ge it:"
msgstr ""
"La plupart des options des synthés et effets de Sonic Pi peuvent être modifiée"
"s après avoir été déclenchées. Cependant, ce n'est pas le cas pour toutes. Par"
" exemple, les options d'enveloppe `attack:`, `decay:`, `sustain:` et `release:"
"` ne peuvent être définies que quand on déclenche le synthé. Pour savoir quell"
"es options peuvent être modifiées ou non, c'est simple : allez voir la documen"
"tation d'un synthé ou effet et regardez la documentation des options individue"
"lles et cherchez les phrases \"May be changed whilst playing\" (Peut être modifi"
"ée en jouant) ou \"Can not be changed once set\" (ne peut pas être modifiée une "
"fois définie). Par exemple, la documentation de l'option `attack:` du synthé `"
":beep` indique clairement qu'on ne peut pas la modifier ultérieurement :"

#: A.10-controlling-your-sound.md:76
#, fuzzy
msgid "Default: 0"
msgstr "Valeur par défaut: 0"

#: A.10-controlling-your-sound.md:77
#, fuzzy
msgid "Must be zero or greater"
msgstr "Doit être supérieure ou égal à 0"

#: A.10-controlling-your-sound.md:78
#, fuzzy
msgid "Can not be changed once set"
msgstr "Ne peut pas être modifiée après sa définition"

#: A.10-controlling-your-sound.md:79
#, fuzzy
msgid "Scaled with current BPM value"
msgstr "Mise à l'échelle avec la valeur courante de BPM \\*\\* Breakout Box End \\*\\*"

#: A.10-controlling-your-sound.md:81
#, fuzzy
msgid "Multiple Changes"
msgstr "Modifications multiples"

#: A.10-controlling-your-sound.md:83
#, fuzzy
msgid ""
"Whilst a synth is running you're not limited to changing it only once - you're"
" free to change it as many times as you like. For example, we can turn our `:p"
"rophet` into a mini arpeggiator with the following:"
msgstr ""
"Pendant qu'un synthé est joué vous n'êtes pas limités à ne le changer qu'une f"
"ois : vous êtes libres de le modifier autant que vous le souhaitez. Par exempl"
"e, on peut transformer notre `:prophet` en petit arpégiateur avec le code suiv"
"ant :"

#: A.10-controlling-your-sound.md:87
#, no-wrap
msgid ""
"notes = (scale :e3, :minor_pentatonic)\n"
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"16.times do\n"
"  control sn, note: notes.tick\n"
"  sleep 0.125\n"
"end"
msgstr ""
"notes = (scale :e3, :minor_pentatonic)\n"
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"16.times do\n"
"  control sn, note: notes.tick\n"
"  sleep 0.125\n"
"end"

#: A.10-controlling-your-sound.md:97
#, fuzzy
msgid ""
"In this snippet of code we just added a couple of extra things. First we defin"
"ed a new variable called `notes` which contains the notes we'd like to cycle t"
"hrough (an arpeggiator is just a fancy name for something that cycles through "
"a list of notes in order). Secondly we replaced our single call to `control` w"
"ith an iteration calling it 16 times. In each call to `control` we `.tick` thr"
"ough our ring of `notes` which will automatically repeat once we get to the en"
"d (thanks to the fabulous power of Sonic Pi's rings). For a bit of variety try"
" replacing `.tick` with `.choose` and see if you can hear the difference."
msgstr ""
"Dans cet extrait de code nous avons juste introduit quelques choses en plus. O"
"n commence par définir une nouvelle variable appelée `notes` qui contient les "
"notes qu'on aimerait parcourir en boucle (un arpégiateur est juste un mot sava"
"nt pour quelque chose qui parcourt en boucle une liste de notes dans un ordre "
"donné). Ensuite on déplace notre appel à `control` dans une itération en l'app"
"elant 16 fois. A chaque appel à `control` on parcourt notre anneau de `notes` "
"qui va se répéter automatiquement quand on arrivera à sa fin (grâce à la puiss"
"ance fabuleuse des anneaux de Sonic Pi). Pour un peu de variété essayez de rem"
"placer `.tick` par `.choose` et tentez d'entendre la différence."

#: A.10-controlling-your-sound.md:107
#, fuzzy
msgid ""
"Note that we can change multiple opts simultaneously. Try changing the control"
" line to the following and listen for the difference:"
msgstr ""
"Notez qu'on peut modifier plusieurs options en même temps. Essayez de changer "
"la ligne de contrôle en la suivante et écoutez la différence :"

#: A.10-controlling-your-sound.md:110
#, no-wrap
msgid "control sn, note: notes.tick, cutoff: rrand(70, 130)"
msgstr "control sn, note: notes.tick, cutoff: rrand(70, 130)"

#: A.10-controlling-your-sound.md:114
#, fuzzy
msgid "Sliding"
msgstr "Transitions"

#: A.10-controlling-your-sound.md:116
#, fuzzy
msgid ""
"When we control a `SynthNode`, it responds exactly on time and instantly chang"
"es the value of the opt to the new one as if you'd pressed a button or flicked"
" a switch requesting the change. This can sound rhythmical and percussive - es"
"pecially if the opt controls an aspect of the timbre such as `cutoff:`. Howeve"
"r, sometimes you don't want the change to happen instantaneously. Instead, you"
" might want to smoothly move from the current value to the new one as if you'd"
" moved a slider or dial. Of course, Sonic Pi can also do this too using the `_"
"slide:` opts."
msgstr ""
"Quand on contrôle un `SynthNode`, il répond exactement à ce moment-là et chang"
"e immédiatement la valeur de l'option comme si vous aviez pressé un bouton ou "
"actionné un interrupteur pour demander la modification. Cela peut sonner rythm"
"ique et percussif, notamment si l'option contrôle un aspect du timbre comme `c"
"utoff:`. Cependant, on n'a pas toujours envie que la modification arrive imméd"
"iatement. On a parfois envie de se déplacer en douceur de la valeur courante à"
" la nouvelle, comme si on avait déplacé un curseur. Bien sûr, Sonic Pi sait au"
"ssi faire cela en utilisant les options `_slide:`"

#: A.10-controlling-your-sound.md:125
#, fuzzy
msgid ""
"Each opt that can be modified also has a special corresponding `_slide:` opt t"
"hat allows you to specify a slide time. For example, `amp:` has `amp_slide:` a"
"nd `cutoff:` has `cutoff_slide:`. These slide opts work slightly differently t"
"han all the other opts in that they tell the synth note how to behave **next t"
"ime they are controlled**. Let's take a look:"
msgstr ""
"Chaque option qui peut être modifiée a aussi une option spéciale correspondant"
"e `_slide:` qui vous permet de définir un temps de transition. Par exemple, `a"
"mp:` a `amp_slide:` et `cutoff:` a `cutoff_slide:`. Ces options de transition "
"marchent un peu différemment de toutes les autres options parce qu'elles disen"
"t à la note de synthé comment se comporter *la prochaine fois qu'elle seront c"
"ontrôlées*. Voyons ça :"

#: A.10-controlling-your-sound.md:131
#, no-wrap
msgid ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 70, cutoff_slide: 2\n"
"sleep 1\n"
"control sn, cutoff: 130"
msgstr ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 70, cutoff_slide: 2\n"
"sleep 1\n"
"control sn, cutoff: 130"

#: A.10-controlling-your-sound.md:137
#, fuzzy
msgid ""
"Notice how this example is exactly the same as before except with the addition"
" of `cutoff_slide:`. This is saying that next time this synth has its `cutoff:"
"` opt controlled, it will take 2 beats to slide from the current value to the "
"new one. Therefore, when we use `control` you can hear the cutoff slide from 7"
"0 to 130. It creates an interesting dynamic feel to the sound. Now, try changi"
"ng the `cutoff_slide:` time to a shorter value such as 0.5 or a longer value s"
"uch as 4 to see how it changes the sound. Remember, you can slide any of the m"
"odifiable opts in exactly this way and each `_slide:` value can be totally dif"
"ferent so you can have the cutoff sliding slowly, the amp sliding fast and the"
" pan sliding somewhere in between if that's what you're looking to create..."
msgstr ""
"Remarquez que cet exemple est exactement le même qu'avant sauf qu'on a ajouté "
"`cutoff_slide:`. Ceci indique que la prochaine fois que l'option `cutoff:` de "
"ce synthé sera contrôlée, il mettra deux battements pour passer de sa valeur c"
"ourante à la nouvelle valeur. Par conséquent, quand on utilise `control` vous "
"pouvez entendre la coupure changer graduellement de 70 à 130. Cela crée une se"
"nsation dynamique intéressante pour le son. Maintenant essayez de changer la d"
"urée de `cutoff_slide:` en une valeur plus courte comme 0.5 ou une valeur plus"
" longue comme 4 pour voir comment ça change le son. Souvenez-vous que vous pou"
"vez transitionner chacune des options modifiables de cette même manière, et ch"
"aque valeur de `_slide:` peut être complètement différente donc vous pouvez av"
"oir une transition lente de la coupure, une transition rapide de l'amplitude, "
"et une transition de la stéréo un peu entre les deux si c'est ce que vous avez"
" envie de créer."

#: A.10-controlling-your-sound.md:151
#, fuzzy
msgid ""
"Let's look at a short example which demonstrates the power of controlling synt"
"hs after they've been triggered. Notice that you can also slide FX just like s"
"ynths although with a slightly different syntax. Check out section 7.2 of the "
"built-in tutorial for more information on controlling FX."
msgstr ""
"Regardons un court exemple qui montre la puissance du contrôle des synthés apr"
"ès leur déclenchement. Remarquez que vous pouvez aussi transitionner les effet"
"s comme les synthés, mais avec une syntaxe légèrement différente. Regardez la "
"section 7.2 du tutoriel inclus dans Sonic Pi pour plus d'information sur le co"
"ntrôle des effets."

#: A.10-controlling-your-sound.md:157
#, fuzzy
msgid ""
"Copy the code into a spare buffer and take a listen. Don't stop there though -"
" play around with the code. Change the slide times, change the notes, the synt"
"h, the FX and the sleep times and see if you can turn it into something comple"
"tely different!"
msgstr ""
"Copiez le code dans un buffer de libre et écoutez. Ne vous arrêtez pas là : jo"
"uez à modifier le code. Changez les durées de transition, changez les notes, l"
"e synthé, l'effet et les durées d'attente et voyez si vous pouvez le transform"
"er en quelque chose de complètement différent !"

#: A.10-controlling-your-sound.md:162
#, no-wrap
msgid ""
"live_loop :moon_rise do\n"
"  with_fx :echo, mix: 0, mix_slide: 8 do |fx|\n"
"    control fx, mix: 1\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle\n"
"    sn = synth :prophet , sustain: 8, note: :e1, cutoff: 70, cutoff_slide: 8\n"
"    control sn, cutoff: 130\n"
"    sleep 2\n"
"    32.times do\n"
"      control sn, note: notes.tick, pan: rrand(-1, 1)\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"live_loop :moon_rise do\n"
"  with_fx :echo, mix: 0, mix_slide: 8 do |fx|\n"
"    control fx, mix: 1\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle\n"
"    sn = synth :prophet , sustain: 8, note: :e1, cutoff: 70, cutoff_slide: 8\n"
"    control sn, cutoff: 130\n"
"    sleep 2\n"
"    32.times do\n"
"      control sn, note: notes.tick, pan: rrand(-1, 1)\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.11-beat-tracking.md:1
#, fuzzy
msgid "A.11 Tick Tock"
msgstr "A.11 Tic tac"

#: A.11-beat-tracking.md:3
#, fuzzy
msgid "Tracking the Beat"
msgstr "Suivre le rythme"

#: A.11-beat-tracking.md:5
#, fuzzy
msgid ""
"Last month in this series we took a deep technical dive into the randomisation"
" system underpinning Sonic Pi. We explored how we can use it to deterministica"
"lly add new levels of dynamic control over our code. This month we're going to"
" continue our technical dive and turn our attention to Sonic Pi's unique tick "
"system. By the end of this article you'll be ticking your way through rhythms "
"and riffs on your way to being a live coding DJ."
msgstr ""
"Le mois dernier dans cette série nous avons regardé en détail comment fonction"
"ne le système de gestion de l'aléatoire de Sonic Pi. On a exploré comment on p"
"eut l'utiliser de manière déterministe pour avoir de nouveaux niveaux de contr"
"ôle dynamique sur notre code. Ce mois-ci nous allons continuer notre explorati"
"on technique et regarder le système unique de 'tick' de Sonic Pi. D'ici la fin"
" de cet article vous parcourrez des rythmes et mélodies sur votre chemin pour "
"devenir un DJ de programmation interactive."

#: A.11-beat-tracking.md:13
#, fuzzy
msgid "Beat Counting"
msgstr "Compter les temps"

#: A.11-beat-tracking.md:15
#, fuzzy
msgid ""
"When making music we often want to do a different thing depending on which bea"
"t it is. Sonic Pi has a special beat counting system called `tick` to give you"
" precise control over when a beat actually occurs and even supports multiple b"
"eats with their own tempos."
msgstr ""
"Quand on fait de la musique on a souvent envie de faire quelque chose de diffé"
"rent en fonction du temps sur lequel on est. Sonic Pi a un système spécial pou"
"r compter les temps appelé `tick` pour vous donner un contrôle précis sur quan"
"d est-ce qu'un battement arrive réellement et il supporte même des battements "
"multiples avec leur propre tempo."

#: A.11-beat-tracking.md:20
#, fuzzy
msgid ""
"Let's have a play - to advance the beat we just need to call `tick`. Open up a"
" fresh buffer, type in the following and hit Run:"
msgstr ""
"Amusons-nous : pour avancer le temps on a juste besoin d'appeler `tick`. Ouvre"
"z un buffer libre, tapez le code suivant et cliquez sur le bouton 'Run':"

#: A.11-beat-tracking.md:23
#, no-wrap
msgid "puts tick #=> 0"
msgstr "puts tick #=> 0"

#: A.11-beat-tracking.md:27
#, fuzzy
msgid ""
"This will return the current beat: `0`. Notice that even if you press the Run "
"button a few times it will always return `0`. This is because each run starts "
"a fresh beat counting from 0. However, whilst the run is still active, we can "
"advance the beat as many times as we want:"
msgstr ""
"Cela retournera le battement courant : `0`. Remarquez que même si vous cliquez"
" plusieurs fois sur le bouton 'Run', il retournera toujours `0`. Cela parce qu"
"e chaque exécution commence avec un compteur qui part de 0. Cependant, pendant"
" que le programme tourne, on peut avancer le compteur autant qu'on veut :"

#: A.11-beat-tracking.md:32
#, no-wrap
msgid ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts tick #=> 2"
msgstr ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts tick #=> 2"

#: A.11-beat-tracking.md:38
#, fuzzy
msgid ""
"Whenever you see the symbol `#=>` at the end of a line of code it means that t"
"hat line will log the text on the right-hand-side. For example, `puts foo #=> "
"0` means the code `puts foo` prints `0` to the log at that point in the progra"
"m."
msgstr ""
"Quand vous voyez le symbole `#=>` à la fin d'une ligne de code cela veut dire "
"que cette ligne va noter ce texte dans la partie de droite de Sonic Pi. Par ex"
"emple, `puts foo #=> 0` veut dire que le code `puts foo` affiche `0` dans le l"
"og à cet endroit du programme."

#: A.11-beat-tracking.md:43
#, fuzzy
msgid "Checking the Beat"
msgstr "Vérifier le compteur"

#: A.11-beat-tracking.md:45
#, fuzzy
msgid ""
"We've seen that `tick` does two things. It increments (adds one) and returns t"
"he current beat. Sometimes we just want to look at the current beat without ha"
"ving to increment it which we can do via `look`:"
msgstr ""
"On a vu que `tick` fait deux choses. Il incrémente (ajoute un) et retourne le "
"compteur courant. Parfois on veut juste regarder le battement courant sans dev"
"oir l'incrémenter et on peut faire cela via `look`."

#: A.11-beat-tracking.md:49
#, no-wrap
msgid ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts look #=> 1\n"
"puts look #=> 1"
msgstr ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts look #=> 1\n"
"puts look #=> 1"

#: A.11-beat-tracking.md:56
#, fuzzy
msgid ""
"In this code we tick the beat up twice and then call `look` twice. We'll see t"
"he following values in the log: `0`, `1`, `1`, `1`. The first two `tick`s retu"
"rned `0`, then `1` as expected, then the two `look`s just returned the last be"
"at value twice which was `1`."
msgstr ""
"Dans ce code on incrémente le compteur deux fois puis on appelle `look` deux f"
"ois. On verra les valeurs suivantes dans le log : `0`, `1`, `1`, `1`. Les deux"
" premiers `tick`s ont retourné `0` et `1`, comme attendu, puis les deux `look`"
"s ont juste retourné la dernière valeur du compteur deux fois, donc `1`."

#: A.11-beat-tracking.md:64
#, fuzzy
msgid ""
"So now we can advance the beat with `tick` and check the beat with `look`. Wha"
"t next? We need something to tick over. Sonic Pi uses rings for representing r"
"iffs, melodies and rhythms and the tick system has been specifically designed "
"to work very closely with them. In fact, rings have their own dot version of `"
"tick` which does two things. Firstly, it acts like a regular tick and incremen"
"ts the beat. Secondly it looks up the ring value using the beat as the index. "
"Let's take a look:"
msgstr ""
"On peut donc avancer le compteur avec `tick` et en connaître la valeur avec `l"
"ook`. Qu'est-ce qui vient suite ? On a besoin de quelque chose à parcourir. So"
"nic Pi utilise les anneaux pour représenter les mélodies et rythmes et le syst"
"ème de tick a été conçu spécialement pour fonctionner avec eux. En fait, les a"
"nneaux ont leur propre version de `tick` qui fait deux choses. D'un côté elle "
"agit comme un tick normal et incrémente le compteur. D'un autre, elle donne un"
"e valeur de l'anneau en utilisant le compteur comme index. Voyons cela :"

#: A.11-beat-tracking.md:72
#, no-wrap
msgid "puts (ring :a, :b, :c).tick #=> :a"
msgstr "puts (ring :a, :b, :c).tick #=> :a"

#: A.11-beat-tracking.md:76
#, fuzzy
msgid ""
"`.tick` is a special dot version of `tick` which will return the first value o"
"f the ring `:a`. We can grab each of the values in the ring by calling `.tick`"
" multiple times:"
msgstr ""
"`.tick` est une version spéciale avec un point de `tick` qui nous retourne la "
"première valeur de l'anneau: : `:a`. On peut attraper chacune des notes de l'a"
"nneau en appelant `:tick` plusieurs fois :"

#: A.11-beat-tracking.md:80
#, no-wrap
msgid ""
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts (ring :a, :b, :c).tick #=> :b\n"
"puts (ring :a, :b, :c).tick #=> :c\n"
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts look                   #=> 3"
msgstr ""
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts (ring :a, :b, :c).tick #=> :b\n"
"puts (ring :a, :b, :c).tick #=> :c\n"
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts look                   #=> 3"

#: A.11-beat-tracking.md:88
#, fuzzy
msgid ""
"Take a look at the log and you'll see `:a`, `:b`, `:c` and then `:a` again. No"
"tice that `look` returns `3`. Calls to `.tick` act just like they are regular "
"calls to `tick` - they increment the local beat."
msgstr ""
"Regardez le log et vous verrez `:a`, `:b`, `:c` et puis de nouveau `:a`. Remar"
"quez que `look` retourne `3`. Les appels à `.tick` se comportent comme les app"
"els à `tick`: ils incrémentent le compteur local."

#: A.11-beat-tracking.md:93
#, fuzzy
msgid "A Live Loop Arpeggiator"
msgstr "Un arpégiateur dans une boucle interactive"

#: A.11-beat-tracking.md:95
#, fuzzy
msgid ""
"The real power comes when you mix `tick` with rings and `live_loop`s. When com"
"bined we have all the tools we need to both build and understand a simple arpe"
"giator. We need just four things:"
msgstr ""
"La véritable puissance vient quand on mélange `tick` avec des anneaux et des `"
"live_loop`s. En les combinant on a tous les outils dont on a besoin pour const"
"ruire et comprendre un arpégiateur simple. On a juste besoin de quatre choses "
":"

#: A.11-beat-tracking.md:99
#, fuzzy
msgid "A ring containing the notes we want to loop over."
msgstr "Un anneau qui contient les notes sur lesquelles on va boucler"

#: A.11-beat-tracking.md:100
#, fuzzy
msgid "A means of incrementing and obtaining the beat."
msgstr "Une manière d'incrémenter et de lire le compteur"

#: A.11-beat-tracking.md:101
#, fuzzy
msgid "The ability to play a note based on the current beat."
msgstr "La capacité de jouer une note en se basant sur le compteur courant"

#: A.11-beat-tracking.md:102
#, fuzzy
msgid "A loop structure to keep the arpegiator repeating."
msgstr "Une structure de boucle qui répète l'arpégiateur en continu"

#: A.11-beat-tracking.md:104
#, fuzzy
msgid "These concepts can all be found in the following code:"
msgstr "Ces concepts se retrouvent tous dans le code suivant :"

#: A.11-beat-tracking.md:106
#, no-wrap
msgid ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"live_loop :arp do\n"
"  use_synth :dpulse\n"
"  play notes.tick, release: 0.2\n"
"  sleep 0.125\n"
"end"
msgstr ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"live_loop :arp do\n"
"  use_synth :dpulse\n"
"  play notes.tick, release: 0.2\n"
"  sleep 0.125\n"
"end"

#: A.11-beat-tracking.md:116
#, fuzzy
msgid ""
"Let's look at each of these lines. First we define our ring of notes which we'"
"ll continually play. We then create a `live_loop` called `:arp` which loops ro"
"und for us. Each time round the `live_loop` we set our synth to `:dpulse` and "
"then play the next note in our ring using `.tick`. Remember that this will inc"
"rement our beat counter and use the latest beat value as an index into our not"
"es ring. Finally, we wait for an eighth of a beat before looping round again."
msgstr ""
"Regardons chacune de ces lignes. On commence par définir notre anneau de notes"
" que nous allons jouer en continu. On crée ensuite une `live_loop` nommée `:ar"
"p` qui va boucler pour nous. A chaque itération de la `live_loop` on choisit u"
"n synthé `:dpulse` et on joue ensuite la note suivante de notre anneau en util"
"isant `.tick`. Souvenez-vous que cela va incrémenter notre compteur de temps e"
"t en utiliser la valeur comme index dans notre anneau de notes. Enfin on atten"
"d un huitième de temps avant de recommencer la boucle."

#: A.11-beat-tracking.md:124
#, fuzzy
msgid "Multiple Simultaneous Beats"
msgstr "Battements multiples simultanés"

#: A.11-beat-tracking.md:126
#, fuzzy
msgid ""
"A really important thing to know is that `tick`s are local to the `live_loop`."
" This means that each `live_loop` has its own independent beat counter. This i"
"s much more powerful than having a global metronome and beat. Let's take a loo"
"k at this in action:"
msgstr ""
"Une chose très importante à savoir est que les `tick`s sont liés à la `live_lo"
"op`. Cela veut dire que chaque `live_loop` a son propre compteur indépendant. "
"C'est beaucoup plus puissant que d'avoir un métronome et battement global. Reg"
"ardons ce que cela donne :"

#: A.11-beat-tracking.md:131
#, no-wrap
msgid ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"with_fx :reverb do\n"
"  live_loop :arp do\n"
"    use_synth :dpulse\n"
"    play notes.tick + 12, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play notes.tick - 12, release: 0.2\n"
"  sleep 0.75\n"
"end"
msgstr ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"with_fx :reverb do\n"
"  live_loop :arp do\n"
"    use_synth :dpulse\n"
"    play notes.tick + 12, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play notes.tick - 12, release: 0.2\n"
"  sleep 0.75\n"
"end"

#: A.11-beat-tracking.md:149
#, fuzzy
msgid "Clashing Beats"
msgstr "Collisions de battements"

#: A.11-beat-tracking.md:151
#, fuzzy
msgid ""
"A big cause of confusion with Sonic Pi's tick system is when people want to ti"
"ck over multiple rings in the same `live_loop`:"
msgstr ""
"Une grande source de confusion dans le système de tick de Sonic Pi est quand o"
"n veut parcourir plusieurs anneaux dans le même `live_loop`."

#: A.11-beat-tracking.md:154
#, no-wrap
msgid ""
"use_bpm 300\n"
"use_synth :blade\n"
"live_loop :foo do\n"
"  play (ring :e1, :e2, :e3).tick\n"
"  play (scale :e3, :minor_pentatonic).tick\n"
"  sleep 1\n"
"end"
msgstr ""
"use_bpm 300\n"
"use_synth :blade\n"
"live_loop :foo do\n"
"  play (ring :e1, :e2, :e3).tick\n"
"  play (scale :e3, :minor_pentatonic).tick\n"
"  sleep 1\n"
"end"

#: A.11-beat-tracking.md:164
#, fuzzy
msgid ""
"Even though each `live_loop` has its own independent beat counter, we're calli"
"ng `.tick` twice within the same `live_loop`. This means that the beat will be"
" incremented twice every time round. This can produce some interesting polyrhy"
"thms but is often not what you want. There are two solutions to this problem. "
"One option is to manually call `tick` at the start of the `live_loop` and then"
" use `.look` to look up the current beat in each `live_loop`. The second solut"
"ion is to pass a unique name to each call to `.tick` such as `.tick(:foo)`. So"
"nic Pi will then create and track a separate beat counter for each named tick "
"you use. That way you can work with as many beats as you need! See the section"
" on named ticks in 9.4 of the built-in tutorial for more information."
msgstr ""
"Même si chaque `live_loop` a son compteur indépendant, ici on appelle `.tick` "
"deux fois dans la même `live_loop`. Cela veut dire que le compteur sera incrém"
"enté deux fois à chaque boucle. Cela peut produire des polyrythmes intéressant"
"s mais ce n'est souvent pas ce que l'on souhaite. Il y a deux solutions à ce p"
"roblème. Une option est d'appeler `tick` manuellement au début de la `live_loo"
"p` puis d'utiliser `look` pour chercher la valeur courante du compteur dans ch"
"aque `live_loop`. La seconde solution est de passer un nom unique à chaque app"
"el à `.tick`, comme par exemple `.tick(:foo)`. Sonic Pi créera alors un compte"
"ur séparé pour chaque tick nommé que vous utiliserez. Ainsi on peut travailler"
" avec autant de compteurs que nécessaire ! Lisez le section 9.4 sur les ticks "
"nommés dans le tutoriel inclus dans Sonic Pi pour plus d'informations."

#: A.11-beat-tracking.md:178
#, fuzzy
msgid ""
"Let's bring all this knowledge of `tick`s, `ring`s and `live_loop`s together f"
"or a final fun example. As usual, don't treat this as a finished piece. Start "
"changing things and play around with it and see what you can turn it into. See"
" you next time..."
msgstr ""
"Combinons nos connaissances sur les `tick`s, `ring`s (anneaux) et `live_loop`s"
" pour un dernier exemple amusant. Comme d'habitude, ne traitez pas ceci comme "
"un morceau terminé. Commencez à changer des choses et amusez-vous avec et voye"
"z en quoi vous pouvez le transformer. A la prochaine..."

#: A.11-beat-tracking.md:183
#, no-wrap
msgid ""
"use_bpm 240\n"
"notes = (scale :e3, :minor_pentatonic).shuffle\n"
"live_loop :foo do\n"
"  use_synth :blade\n"
"  with_fx :reverb, reps: 8, room: 1 do\n"
"    tick\n"
"    co = (line 70, 130, steps: 32).tick(:cutoff)\n"
"    play (octs :e3, 3).look, cutoff: co, amp: 2\n"
"    play notes.look, amp: 4\n"
"    sleep 1\n"
"  end\n"
"end\n"
"live_loop :bar do\n"
"  tick\n"
"  sample :bd_ada if (spread 1, 4).look\n"
"  use_synth :tb303\n"
"  co = (line 70, 130, steps: 16).look\n"
"  r = (line 0.1, 0.5, steps: 64).mirror.look\n"
"  play notes.look, release: r, cutoff: co\n"
"  sleep 0.5\n"
"end"
msgstr ""
"use_bpm 240\n"
"notes = (scale :e3, :minor_pentatonic).shuffle\n"
"live_loop :foo do\n"
"  use_synth :blade\n"
"  with_fx :reverb, reps: 8, room: 1 do\n"
"    tick\n"
"    co = (line 70, 130, steps: 32).tick(:cutoff)\n"
"    play (octs :e3, 3).look, cutoff: co, amp: 2\n"
"    play notes.look, amp: 4\n"
"    sleep 1\n"
"  end\n"
"end\n"
"live_loop :bar do\n"
"  tick\n"
"  sample :bd_ada if (spread 1, 4).look\n"
"  use_synth :tb303\n"
"  co = (line 70, 130, steps: 16).look\n"
"  r = (line 0.1, 0.5, steps: 64).mirror.look\n"
"  play notes.look, release: r, cutoff: co\n"
"  sleep 0.5\n"
"end"

#: A.12-sample-slicing.md:1
msgid "A.12 Sample Slicing"
msgstr ""

#: A.12-sample-slicing.md:3
msgid "Sample Slicing"
msgstr ""

#: A.12-sample-slicing.md:5
msgid ""
"Way back in episode 3 of this Sonic Pi series we looked at how to loop, stretc"
"h and filter one of the most famous drum breaks of all time - the Amen Break. "
"In this tutorial we're going to take this one step further and learn how to sl"
"ice it up, shuffle the slices and glue it back together in a completely new or"
"der. If that sounds a bit crazy to you, don't worry, it will all become clear "
"and you'll soon master a powerful new tool for your live coded sets."
msgstr ""

#: A.12-sample-slicing.md:13
msgid "Sound as Data"
msgstr ""

#: A.12-sample-slicing.md:15
msgid ""
"Before we get started let's just take a brief moment to understand how to work"
" with samples. By now, you've all hopefully played with Sonic Pi's powerful sa"
"mpler. If not, there's no time like the present! Boot up your Raspberry Pi, la"
"unch Sonic Pi from the Programming menu, type the following into a fresh buffe"
"r and then hit the Run button to hear a pre-recorded drum beat:"
msgstr ""

#: A.12-sample-slicing.md:26
msgid ""
"A recording of a sound is simply represented as data - lots of numbers between"
" -1 and 1 which represent the peaks and troughs of the sound wave. If we play "
"those numbers back in order, we get the original sound. However, what's to sto"
"p us from playing them back in a different order and creating a new sound?"
msgstr ""

#: A.12-sample-slicing.md:32
msgid ""
"How are samples actually recorded? It's actually pretty simple once you unders"
"tand the basic physics of sound. When you make a sound - for example by hittin"
"g a drum, the noise travels through the air in a similar fashion to how the su"
"rface of a lake ripples when you throw a pebble into it. When those ripples re"
"ach your ears, your eardrum moves sympathetically and converts those movements"
" into the sound you hear. If we wish to record and play back the sound, we the"
"refore need a way of capturing, storing and reproducing those ripples. One way"
" is to use a microphone which acts like an eardrum and moves back and forth as"
" the sound ripples hit it. The microphone then converts its position into a ti"
"ny electric signal which is then measured many times a second. These measureme"
"nts are then represented as a series of numbers between -1 and 1."
msgstr ""

#: A.12-sample-slicing.md:46
msgid ""
"If we were to plot a visualisation of the sound it would be a simple graph of "
"data with time on the x axis and microphone/speaker position as a value betwee"
"n -1 and 1 on the y axis. You can see an example of such a graph at the top of"
" the diagram."
msgstr ""

#: A.12-sample-slicing.md:51
msgid "Playing Part of a Sample"
msgstr ""

#: A.12-sample-slicing.md:53
msgid ""
"So, how do we code Sonic Pi to play a sample back in a different order? To ans"
"wer this question we need to take a look at the `start:` and `finish:` opts fo"
"r `sample`. These let us control the start and finish positions of our playbac"
"k of the numbers which represent the sound. The values for both of these opts "
"are represented as a number between `0` and `1` where `0` represents the start"
" of the sample and `1` is the end. So, to play the first half of the Amen Brea"
"k, we just need to specify a `finish:` of `0.5`:"
msgstr ""

#: A.12-sample-slicing.md:66
msgid "We can add in a `start:` value to play an even smaller section of the sample:"
msgstr ""

#: A.12-sample-slicing.md:68
#, no-wrap
msgid "sample :loop_amen, start: 0.25, finish: 0.5"
msgstr "sample :loop_amen, start: 0.25, finish: 0.5"

#: A.12-sample-slicing.md:72
msgid ""
"For fun, you can even have the `finish:` opt's value be *before* `start:` and "
"it will play the section backwards:"
msgstr ""

#: A.12-sample-slicing.md:75
#, no-wrap
msgid "sample :loop_amen, start: 0.5, finish: 0.25"
msgstr "sample :loop_amen, start: 0.5, finish: 0.25"

#: A.12-sample-slicing.md:79
msgid "Re-ordering Sample Playback"
msgstr ""

#: A.12-sample-slicing.md:81
msgid ""
"Now that we know that a sample is simply a list of numbers that can be played "
"back in any order and also how to play a specific part of a sample we can now "
"start having fun playing a sample back in the 'wrong' order."
msgstr ""

#: A.12-sample-slicing.md:86
msgid "![Amen Slices](../images/tutorial/articles/A.12-sample-slicing/amen_slice.png)"
msgstr ""

#: A.12-sample-slicing.md:88
msgid ""
"Let's take our Amen Break and chop it up into 8 equally-sized slices and then "
"shuffle the pieces around. Take a look at the diagram: at the top A) represent"
"s the graph of our original sample data. Chopping it into 8 slices gives us B)"
" - notice that we've given each slice a different colour to help distinguish t"
"hem. You can see each slice's start and finish values at the top. Finally C) i"
"s one possible re-ordering of the slices. We can then play this back to create"
" a new beat. Take a look at the code to do this:"
msgstr ""

#: A.12-sample-slicing.md:97
#, no-wrap
msgid ""
"live_loop :beat_slicer do\n"
"  slice_idx = rand_i(8)\n"
"  slice_size = 0.125\n"
"  s = slice_idx * slice_size\n"
"  f = s + slice_size\n"
"  sample :loop_amen, start: s, finish: f\n"
"  sleep sample_duration :loop_amen, start: s, finish: f\n"
"end"
msgstr ""
"live_loop :beat_slicer do\n"
"  slice_idx = rand_i(8)\n"
"  slice_size = 0.125\n"
"  s = slice_idx * slice_size\n"
"  f = s + slice_size\n"
"  sample :loop_amen, start: s, finish: f\n"
"  sleep sample_duration :loop_amen, start: s, finish: f\n"
"end"

#: A.12-sample-slicing.md:108
msgid ""
"we choose a random slice to play which should be a random number between 0 and"
" 7 (remember that we start counting at 0). Sonic Pi has a handy function for e"
"xactly this: `rand_i(8)`. We then store this random slice index in the variabl"
"e `slice_idx`."
msgstr ""

#: A.12-sample-slicing.md:113
msgid ""
"We define our `slice_size` which is 1/8 or 0.125. The `slice_size` is necessar"
"y for us to convert our `slice_idx` into a value between 0 and 1 so we can use"
" it as our `start:` opt."
msgstr ""

#: A.12-sample-slicing.md:117
msgid ""
"We calculate the start position `s` by multiplying the `slice_idx` by the `sli"
"ce_size`."
msgstr ""

#: A.12-sample-slicing.md:120
msgid ""
"We calculate the finish position `f` by adding the `slice_size` to the start p"
"osition `s`."
msgstr ""

#: A.12-sample-slicing.md:123
msgid ""
"We can now play the sample slice by plugging in the `s` and `f` values into th"
"e `start:` and `finish:` opts for `sample`."
msgstr ""

#: A.12-sample-slicing.md:126
msgid ""
"Before we play the next slice we need to know how long to `sleep` which should"
" be the duration of the sample slice. Luckily, Sonic Pi has us covered with `s"
"ample_duration` which accepts all the same opts as `sample` and simply returns"
" the duration. Therefore, by passing `sample_duration` our `start:` and `finis"
"h:` opts, we can find out the duration of a single slice."
msgstr ""

#: A.12-sample-slicing.md:133
msgid ""
"We wrap all of this code in a `live_loop` so that we continue to pick new rand"
"om slices to play."
msgstr ""

#: A.12-sample-slicing.md:139
msgid ""
"Let's combine everything we've seen so far into a final example which demonstr"
"ates how we can take a similar approach to combine randomly sliced beats with "
"some bass to create the start of an interesting track. Now it's your turn - ta"
"ke the code below as a starting point and see if you can take it in your own d"
"irection and create something new..."
msgstr ""

#: A.12-sample-slicing.md:145
#, no-wrap
msgid ""
"live_loop :sliced_amen do\n"
"  n = 8\n"
"  s =  line(0, 1, steps: n).choose\n"
"  f = s + (1.0 / n)\n"
"  sample :loop_amen, beat_stretch: 2, start: s, finish: f\n"
"  sleep 2.0  / n\n"
"end\n"
"live_loop :acid_bass do\n"
"  with_fx :reverb, room: 1, reps: 32, amp: 0.6 do\n"
"    tick\n"
"    n = (octs :e0, 3).look - (knit 0, 3 * 8, -4, 3 * 8).look\n"
"    co = rrand(70, 110)\n"
"    synth :beep, note: n + 36, release: 0.1, wave: 0, cutoff: co\n"
"    synth :tb303, note: n, release: 0.2, wave: 0, cutoff: co\n"
"    sleep (ring 0.125, 0.25).look\n"
"  end\n"
"end"
msgstr ""
"live_loop :sliced_amen do\n"
"  n = 8\n"
"  s =  line(0, 1, steps: n).choose\n"
"  f = s + (1.0 / n)\n"
"  sample :loop_amen, beat_stretch: 2, start: s, finish: f\n"
"  sleep 2.0  / n\n"
"end\n"
"live_loop :acid_bass do\n"
"  with_fx :reverb, room: 1, reps: 32, amp: 0.6 do\n"
"    tick\n"
"    n = (octs :e0, 3).look - (knit 0, 3 * 8, -4, 3 * 8).look\n"
"    co = rrand(70, 110)\n"
"    synth :beep, note: n + 36, release: 0.1, wave: 0, cutoff: co\n"
"    synth :tb303, note: n, release: 0.2, wave: 0, cutoff: co\n"
"    sleep (ring 0.125, 0.25).look\n"
"  end\n"
"end"
